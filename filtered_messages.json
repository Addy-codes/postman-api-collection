[
    [
        {
            "body": [
                {
                    "model_id": "019e8e17-cea2-44d9-8c70-bb9f72388736",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918753,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "019e8e17-cea2-44d9-8c70-bb9f72388736",
                        "name": "Get Latest Release Version",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "086aa82e-457f-4da2-b6f1-cf12318b0272",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "",
                                        "const statusCode = responseCode.code;",
                                        "tests[\"Response code - Expected: 200 & Actual: \" + statusCode] = statusCode == 200;",
                                        "if(statusCode == 200){",
                                        "    const jsonData = JSON.parse(responseBody);",
                                        "    context.set(\"version\", jsonData[jsonData.length-1].version);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "8559f627-602f-47df-b15a-77a58c1695f6",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n\nconst statusCode = responseCode.code;\ntests[\"Response code - Expected: 200 & Actual: \" + statusCode] = statusCode == 200;\nif(statusCode == 200){\n    const jsonData = JSON.parse(responseBody);\n    context.set(\"version\", jsonData[jsonData.length-1].version);\n}",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:12:59.000Z",
                        "updatedAt": "2023-08-09T08:12:59.000Z"
                    }
                },
                {
                    "model_id": "01c550dc-2009-4944-a37c-89a4d27d376a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405189,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "01c550dc-2009-4944-a37c-89a4d27d376a",
                        "name": "Accounts",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a06c87ad-9343-452e-b42d-94b4e10ac373"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query accounts {\n  uiapi {\n    query {\n      Account {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "0326e446-b006-429c-9f12-26a49d808b35",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920421,
                        "folder": "e82abac9-16b2-4418-8c0e-9f3b9410514d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0326e446-b006-429c-9f12-26a49d808b35",
                        "name": "Request Product Information (No Bundles)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n  \"productContexts\": [\n    {\n      \"product2Id\": \"{{ClassTrainingProduct}}\",\n      \"productSellingModelId\": \"{{OneTimePSM}}\"\n    },\n    {\n      \"product2Id\": \"{{VirtualRouterProduct}}\"  \n    }\n  ],\n  \"fields\": [\n    \"id\",\n    \"name\",\n    \"IsActive\",\n    \"ProductCode\"\n  ],\n  \"retrievalType\": \"ExcludeChildComponents\"\n}",
                        "descriptionFormat": null,
                        "description": "Request information for two products that aren't bundles. For the first product, request only the information about the specified product selling model. For the second product, request information about all related product selling models.\n\nSee [Request Product Information](https://desktop.postman.com/?desktopVersion=10.13.6&webVersion=10.13.7-ui-230522-1730&userId=10709048&teamId=0).",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/catalog-products/actions/get-products",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "0498fd47-9619-4884-9fa9-90ef112258ea",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802901,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0498fd47-9619-4884-9fa9-90ef112258ea",
                        "name": "List event relays",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q=SELECT FIELDS(ALL) FROM EventRelayConfig LIMIT 200",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT FIELDS(ALL) FROM EventRelayConfig LIMIT 200"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "05c370f8-33d0-428c-ba51-0d0c6ff9479c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920643,
                        "folder": "3c82a7a0-5ad6-4a3a-a198-d4f733671bac",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "05c370f8-33d0-428c-ba51-0d0c6ff9479c",
                        "name": "Create Order With Bundle",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"allOrNone\": true,\n    \"compositeRequest\": [\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/Order\",\n            \"referenceId\": \"refOrder\",\n            \"body\": {\n                \"AccountId\": \"{{defaultAccount}}\",\n                \"EffectiveDate\": \"2023-01-01\",\n                \"Pricebook2Id\": \"{{standardPricebook}}\",\n                \"BillToContactId\": \"{{defaultBillToContact}}\",\n                \"Status\": \"Draft\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/AppUsageAssignment\",\n            \"referenceId\": \"refAppTag\",\n            \"body\": {\n                \"AppUsageType\": \"SubscriptionManagement\",\n                \"RecordId\": \"@{refOrder.id}\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/OrderAction\",\n            \"referenceId\": \"refOrderAction\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"Type\": \"New Sale\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/OrderItem\",\n            \"referenceId\": \"refWorkAnywhereBundle\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"OrderActionId\": \"@{refOrderAction.id}\",\n                \"PricebookEntryId\": \"{{WorkAnywhereBundlePBE}}\",\n                \"ServiceDate\": \"2023-01-01\",\n                \"Quantity\": 1,\n                \"UnitPrice\": 10000,\n                \"NetUnitPrice\": 10000,\n                \"TotalLineAmount\": 10000,\n                \"PeriodBoundary\": \"AlignToCalendar\",\n                \"BillingFrequency2\": \"Monthly\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/OrderItem\",\n            \"referenceId\": \"refVirtualRouter\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"OrderActionId\": \"@{refOrderAction.id}\",\n                \"PricebookEntryId\": \"{{VirtualRouterEvergrnPBE}}\",\n                \"ServiceDate\": \"2023-01-01\",\n                \"Quantity\": 100,\n                \"UnitPrice\": 0,\n                \"NetUnitPrice\": 0,\n                \"TotalLineAmount\": 0,\n                \"PeriodBoundary\": \"AlignToCalendar\",\n                \"BillingFrequency2\": \"Monthly\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/OrderItem\",\n            \"referenceId\": \"refBronzeSLA\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"OrderActionId\": \"@{refOrderAction.id}\",\n                \"PricebookEntryId\": \"{{SLABronzeEvergrnMonthPBE}}\",\n                \"ServiceDate\": \"2023-01-01\",\n                \"Quantity\": 3,\n                \"UnitPrice\": 0,\n                \"NetUnitPrice\": 0,\n                \"TotalLineAmount\": 0,\n                \"PeriodBoundary\": \"AlignToCalendar\",\n                \"BillingFrequency2\": \"Monthly\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/OrderItemRelationship\",\n            \"referenceId\": \"refOrderItemRelationship1\",\n            \"body\": {\n                \"ProductRelationshipTypeId\": \"{{BundleProductRelationshipType}}\",\n                \"MainOrderItemId\": \"@{refWorkAnywhereBundle.id}\",\n                \"AssociatedOrderItemId\": \"@{refVirtualRouter.id}\",\n                \"AssociatedOrderItemPricing\": \"IncludedInBundlePrice\",\n                \"AssociatedQuantScaleMethod\": \"Proportional\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v57.0/sobjects/OrderItemRelationship\",\n            \"referenceId\": \"refOrderItemRelationship2\",\n            \"body\": {\n                \"ProductRelationshipTypeId\": \"{{BundleProductRelationshipType}}\",\n                \"MainOrderItemId\": \"@{refWorkAnywhereBundle.id}\",\n                \"AssociatedOrderItemId\": \"@{refBronzeSLA.id}\",\n                \"AssociatedOrderItemPricing\": \"IncludedInBundlePrice\",\n                \"AssociatedQuantScaleMethod\": \"Constant\"\n            }\n        }\n    ]\n}\n",
                        "descriptionFormat": null,
                        "description": "Creates a Subscription Management order for a product bundle.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:02.000Z",
                        "updatedAt": "2023-08-09T08:13:02.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "067383f4-4a0c-4bc5-87cf-c882bc5f03c8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667638,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "067383f4-4a0c-4bc5-87cf-c882bc5f03c8",
                        "name": "Get Record Data and Object Metadata",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get layout information, metadata, and data to build UI for a single record or for a collection of records.\nThe response contains layout information for whichever layout types are specified in the layoutTypes parameter.\n\nIt contains data for the records specified in the recordIds parameter.\n\nThe response contains object metadata for the object types of the records specified in the recordIds parameter, and for any nested objects. For example, a request to /ui-api/record-ui/001RM000003RsOHYA0, which is an Account, returns object metadata for Account and User, because the OwnerId field on the Account object contains a reference to the User object.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/record-ui/:RECORD_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "childRelationships",
                                "value": "",
                                "description": "A collection of child relationship names. The records with those child relationship names are included in the response. Specify names in the format ObjectApiName.ChildRelationshipName or ObjectApiName.ChildRelationshipName.FieldApiName. For example, to specify the Contacts relationship on an Account, use Account.Contacts. You can get child relationships one level deep.\nTo get a relationship name, look in the Object Info response body.\n",
                                "enabled": false
                            },
                            {
                                "key": "formFactor",
                                "value": "",
                                "description": "The layout display size for the record. One of these values:\nLarge\u2014(Default) Use this value to get a layout for desktop display size.\nMedium\u2014Use this value to get a layout for tablet display size.\nSmall\u2014Use this value to get a layout for phone display size.",
                                "enabled": false
                            },
                            {
                                "key": "layoutTypes",
                                "value": "",
                                "description": "The layout type for the record. A collection of any of these values:\nCompact\u2014Use this value to get a layout that contains a record\u2019s key fields.\nFull\u2014(Default) Use this value to get a full layout.",
                                "enabled": false
                            },
                            {
                                "key": "modes",
                                "value": "",
                                "description": "The access mode for the record. This value determines which fields to get from a layout. Layouts have different fields for create, edit, and view modes. For example, formula fields are rendered in view mode, but not in create mode because they\u2019re calculated at run time, like formulas in a spreadsheet. A collection of any of these values:\nCreate\u2014Use this mode if you intend to build UI that lets a user create a record. This mode is used by the /ui-api/record-defaults/create/<SOBJECT_API_NAME> resource.\nEdit\u2014Use this mode if you intend to build UI that lets a user edit a record. This mode is used by the /ui-api/record-defaults/clone/<RECORD_ID> resource.\nView\u2014(Default) Use this mode if you intend to build UI that displays a record.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "A collection of optional field names. If a field is accessible to the context user, it\u2019s included in the response. If a field isn\u2019t accessible to the context user, it isn\u2019t included in the response, but it doesn\u2019t cause an error.\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The maximum number of child records to return on a page.",
                                "enabled": false
                            },
                            {
                                "key": "updateMru",
                                "value": "",
                                "description": "To add to the most recently used (MRU) list view, set to true. The default value is false.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_IDS",
                                "value": "",
                                "description": "Comma-separated list of record IDs"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "06b1cc94-4e92-416c-ad95-b1749d77f56c"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "06e45993-a470-458a-b871-d0d91f4b4dbd",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928467,
                        "folder": "d8d52cc2-f78c-4a2e-90cd-8338dc74cf8d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "06e45993-a470-458a-b871-d0d91f4b4dbd",
                        "name": "List Sandboxes",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Lists all sandboxes.",
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q=SELECT Id, SandboxName, LicenseType, AutoActivate FROM SandboxInfo",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT Id, SandboxName, LicenseType, AutoActivate FROM SandboxInfo",
                                "equals": true,
                                "description": "SOQL Query",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": false,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "76df5d76-20b4-4c4c-a611-0bf62c30c917"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "0707cb05-3ccd-490d-8d96-f6daaebc452b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531561,
                        "folder": "14f5dc82-4bc9-4a71-9679-c066c9ddd4cc",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0707cb05-3ccd-490d-8d96-f6daaebc452b",
                        "name": "Get Table",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"setupName\":\"Product Qualificiation eligibility\",\n   \"fullName\":\"ProductQualificationEligibility\",\n   \"description\":\"Eligiblity of Products using Qualification Rules\",\n   \"sourceObject\":\"AccountFeed\",\n   \"status\":\"Draft\",\n   \"conditionType\":\"Any\",\n   \"conditionCriteria\":\"1 OR 2 OR 3\",\n   \"parameters\":[\n      {\n         \"fieldName\":\"IsDeleted\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"1\"\n      },\n      {\n         \"fieldName\":\"Id\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"2\"\n      },\n      {\n         \"fieldName\":\"Title\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"3\"\n      },\n      {\n         \"fieldName\":\"CreatedById\",\n         \"usage\":\"OUTPUT\"\n      }\n   ]\n}",
                        "descriptionFormat": null,
                        "description": "# Decision Table Definitions ( GET)\n\nGet details of a decision table definition.\n\nResource\n\n```\n/connect/business-rules/decision-table/definitions/${decisionTableId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/decision-table/definitions/0lDxx00000002Ur\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nGET\n\nResponse body for GET\n\n[Decision Table Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_output.htm)\n\n# Decision Table Output\n\nOutput representation of the decision table details.JSON example for GET, POST, and PATCH\n\n```\n{\n   \"code\":\"200\",\n   \"decisionTable\":{\n      \"collectOperator\":\"Count\",\n      \"conditionCriteria\":\"1 OR 2 OR 3\",\n      \"conditionType\":\"Any\",\n      \"decisionResultPolicy\":\"UniqueValues\",\n      \"description\":\"Eligiblity of Products using Qualification Rules\",\n      \"id\":\"0lDxx00000000BJ\",\n      \"parameters\":[\n         {\n            \"fieldName\":\"IsDeleted\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":1,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"CreatedById\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"usage\":\"Output\"\n         },\n         {\n            \"fieldName\":\"Title\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":3,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"Id\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":2,\n            \"usage\":\"Input\"\n         }\n      ],\n      \"setupName\":\"Product Qualificiation eligibility3\",\n      \"sourceCriteria\":[\n         \n      ],\n      \"sourceObject\":\"AccountFeed\",\n      \"sourceType\":\"SingleSobject\",\n      \"sourceconditionLogic\":\"1 AND 2 AND 3\",\n      \"status\":\"Draft\"\n   },\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\nJSON example for DELETE\n\n```\n{\n   \"code\":\"200\",\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| code | String | Response code from the API request. | Small, 58.0 | 58.0 |\n| decisionTable | [Decision Table Definition Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_definition_output.htm) | Details of the decision table definition associated with the decision table. | Small, 58.0 | 58.0 |\n| isSuccess | Boolean | Indicates whether the API request is successful (true) or not (false). | Small, 58.0 | 58.0 |\n| message | String | Error message when the API request fails. | Small, 58.0 | 58.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "decisionTableId": "0lDHo0000008Po3"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-table/definitions/:decisionTableId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "31791c1a-6c64-48b5-af88-ba0a36697f01",
                                "key": "decisionTableId",
                                "value": "0lDHo0000008Po3",
                                "description": "Decision Table Id"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f4059f40-0b05-4b54-99af-89c2925e1264",
                            "40d6c559-7b23-45e5-96cb-2f3dca1480ba",
                            "f24a23d1-c8c0-43b7-a771-d82a4d5f947e"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:54.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "07275421-a5b7-4e89-ad15-85250a1c0df0",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928402,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "07275421-a5b7-4e89-ad15-85250a1c0df0",
                        "name": "Tooling Search",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "[\n    {\n        \"className\": \"YourClassName\",\n        \"testMethods\": [\n            \"testMethod1\",\n            \"testMethod2\",\n            \"testMethod3\"\n        ]\n    },\n    {\n        \"maxFailedTests\": \"2\"\n    }\n]\n\nor\n\n[\n    {\n        \"classId\": \"01pD0000000Fhy9IAC\",\n        \"testMethods\": [\n            \"testMethod1\",\n            \"testMethod2\",\n            \"testMethod3\"\n        ]\n    },\n    {\n        \"maxFailedTests\": \"2\"\n    }\n]",
                        "descriptionFormat": null,
                        "description": "Runs one or more methods within one or more Apex classes, using the asynchronous test execution mechanism. In the request body, you can specify test class names and IDs, suite names and IDs, the maximum number of failed tests to allow, and the test level, as comma-separated lists or as an array. You can also indicate whether to opt out of collecting code coverage information during the test run (available in API version 43.0 and later).",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/search?q",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "",
                                "description": "SOSL search statement"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "802c94b9-6d3a-4d9b-a6f6-70bf0a4f167d"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "07c7dd95-5a4a-468c-98ca-13b4299723ea",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136709,
                        "folder": "64d700e9-105e-41f3-98e9-0b80d5db101b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "07c7dd95-5a4a-468c-98ca-13b4299723ea",
                        "name": "Get Appointment Slots",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"startTime\": \"string\",\n\t\"endTime\": \"string\",\n\t\"workTypeGroupId\": \"string\",\n\t\"workType\": \"Work Type\",\n\t\"accountId\": \"string\",\n\t\"territoryIds\": \"string[]\",\n\t\"requiredResourceIds\": \"string[]\",\n\t\"schedulingPolicyId\": \"string\",\n\t\"allowConcurrentScheduling\": \"boolean\",\n}",
                        "descriptionFormat": null,
                        "description": "Returns a list of available appointment time slots for a resource based on given work type group and territories.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/requests_ls_getappointmentslots.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/scheduling/getAppointmentSlots",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "08d28a50-3309-4752-8aa4-0ba6dc2597e6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756683,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "08d28a50-3309-4752-8aa4-0ba6dc2597e6",
                        "name": "Get Job Successful Record Results",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}/successfulResults",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "44b3a6de-7117-47d3-a3d9-75a19e2948b1"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z"
                    }
                },
                {
                    "model_id": "096b372f-545b-4fce-aef8-7970403a0c47",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406416,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "096b372f-545b-4fce-aef8-7970403a0c47",
                        "name": "Get Related List Record Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "982c2d83-b3d3-4d13-a44f-90267cffc7c6",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on records in related lists.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_ID": "",
                            "RELATED_LIST_RECORD_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/record/:RECORD_ID/related-list-record/:RELATED_LIST_RECORD_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            },
                            {
                                "key": "RELATED_LIST_RECORD_IDS",
                                "value": "",
                                "description": "A related list record ID, or a comma-delimited list of related list record IDs."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4975e512-0620-4df0-9229-ff4edd0d4db4"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "09bcea07-9106-4b15-bda7-4228b5c4c120",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667800,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "09bcea07-9106-4b15-bda7-4228b5c4c120",
                        "name": "Get Lookup Field Suggestions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "0e56aa65-037a-474b-9132-d7d2f244aa76",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "When a user edits a lookup field, use this resource to search for and display suggestions. You can search for most recently used matches, for matching names, or for any match in a searchable field. You can also specify lookup filter bindings for dependent lookups.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "FIELD_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/lookups/:SOBJECT_API_NAME/:FIELD_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "dependentFieldBindings",
                                "value": "",
                                "description": "The dependent field bindings for dependent lookups. These field bindings represent the lookup filter that restricts the valid values for the field.\nSpecify field bindings in a comma-separated list in the format dependentFieldBindings=<FIELD_API_NAME1>=<FIELD_VALUE1>,<FIELD_API_NAME2>=<FIELD_VALUE2>.\n\nTo know whether a field is a dependent lookup, check the Object Info response body for a non-null filteredLookupInfo property. Specify the name and a value for each field in the controllingFields property. Get the field values from the Record response body. Both responses are returned from the /ui-api/record-ui/<RECORD_IDS> resource.",
                                "enabled": false
                            },
                            {
                                "key": "page",
                                "value": "",
                                "description": "The page number. The default value is 1.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The number of items per page. The default value is 25.\n",
                                "enabled": false
                            },
                            {
                                "key": "q",
                                "value": "",
                                "description": "The term the user is searching for.\nWhen searchType=Search, specify at least 2 characters. A wildcard at the end of the search term is implied. For example, q=ca returns Cat and Cats.\n\nWhen searchType=TypeAhead, specify at least 3 characters. A wildcard at the end of the search term is implied. You can\u2019t use a ?.",
                                "enabled": false
                            },
                            {
                                "key": "searchType",
                                "value": "",
                                "description": "The type of search to perform. One of these values:\nRecent\u2014Return most recently used matches.\nSearch\u2014Search for records with searchable fields that match the query term.\nTypeAhead\u2014Search for records whose names start with the query term.\nThe default value is Recent.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "sObject API name"
                            },
                            {
                                "key": "FIELD_API_NAME",
                                "value": "",
                                "description": "Field API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "96bada4f-afa1-4fb2-8579-e4410fc1e8f8"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-09-27T16:15:09.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "0ae8076d-6c19-4df1-a4ea-c31ed19aba61",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531863,
                        "folder": "2b4a2969-56e5-4385-80e9-5cf0f810c79b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0ae8076d-6c19-4df1-a4ea-c31ed19aba61",
                        "name": "runExpressionSet",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"inputs\": [\n        {}\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "# Expression Set Actions\n\nInvoke an active expression set. An expression set is a user-defined rule that accepts an input and returns the output based on the configured function.\n\nThe configured function of an expression set can be a simple decision matrix lookup, a calculation based on a mathematical formula, a condition, or another expression set.\n\nThese actions are available in API version 55.0 and later.\n\n## Supported REST HTTP Methods\n\nURI/services/data/v55.0/actions/custom/runExpressionSet/{ApiName}\n\n> `Note` \n  \n> `The API name of an expression set is unique within your Salesforce instance.` \n  \n\nFormats\n\nJSON\n\nHTTP Methods\n\nPOST\n\nAuthentication\n\nAuthorization: Bearer\u00a0token\n\n## Inputs\n\nVary depending on the selected expression set.\n\n## Outputs\n\nVary depending on the inputs of the selected expression set.\n\n## Usage\n\nThis section has the sample request and response for invoking an expression set that does the following:\n\n1. Find the tax percentage and the premium corresponding to specific age and salary using a decision matrix lookup.\n    \n2. Check the age criterion to calculate the total tax.\n    \n3. Calculate the total tax to be paid based on the age group, salary, and the tax percentage.\n    \n\nSample request\n\nHere\u2019s an example POST request that has the inputs, such as, age and salary:\n\n```\n{\n   \"inputs\":[\n      {\n         \"Age\":\"25.00\",\n         \"Salary\":\"50000.00\"\n      }\n   ]\n}\n\n ```\n\nSample response\n\nHere\u2019s an example response that has the premium and tax values based on the inputs provided in the example request:\n\n```\n[\n   {\n      \"actionName\":\"TaxPremiumES\",\n      \"errors\":null,\n      \"isSuccess\":true,\n      \"outputValues\":{\n         \"TaxPremium__Premium\":1000,\n         \"TaxPremium__Tax\":10,\n         \"TaxToBePaid\":1050,\n         \"condition_output__2\":\"false\",\n         \"condition_output__1\":\"true\"\n      }\n   }\n]\n\n ```",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": {
                            "expressionSetAPIName": "myExpressionSet"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/custom/runExpressionSet/:expressionSetAPIName",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "id": "a831ec48-1a11-48c8-b22d-627fc2611a60",
                                "key": "expressionSetAPIName",
                                "value": "myExpressionSet",
                                "description": "The API name of an expression set is unique within your Salesforce instance."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "df5eb884-2d1c-4d35-bf47-18a48b094122",
                            "d1b76b8d-3167-4928-8239-1b5fccd3aef0",
                            "44f961de-7ff5-4f37-ad62-2a22b9c84410",
                            "fa25f0ef-7f1c-4fd7-aba1-e549270ee6c5",
                            "c2ed131a-0a6f-4a29-9558-43342e2d3212"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:55.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "0b37354a-3107-4384-a5ff-a33bb8acf7d1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756645,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0b37354a-3107-4384-a5ff-a33bb8acf7d1",
                        "name": "Delete Job",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "DELETE",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d463e7a7-f757-4369-a2d9-1457ea7d84e7"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "0c455e60-c3b8-4360-972e-133817408fa3",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 25705436395,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0c455e60-c3b8-4360-972e-133817408fa3",
                        "name": "Versions",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "1a10ad21-d445-48fe-806e-a775ec623f42",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "description": null
                            },
                            {
                                "key": "Sforce-Call-Options",
                                "value": "client=postman",
                                "description": null,
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a1f5a1cd-477d-423a-998f-9469b87e8290"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2022-07-04T16:54:02.000Z"
                    }
                },
                {
                    "model_id": "0c745413-29c8-4250-8a22-f1da10bb7d5f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928371,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0c745413-29c8-4250-8a22-f1da10bb7d5f",
                        "name": "Tooling ExecuteAnonymous",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Executes Apex code anonymously. Available from API version 29.0 or later.",
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/executeAnonymous/?anonymousBody=System.Debug('awesome');",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "anonymousBody",
                                "value": "System.Debug('awesome');",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": false,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "26f0b346-eebb-4fbe-ae55-8c4ac91d06b9"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:00.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "0f909d94-48d2-4f0e-8352-84321377567f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249407190,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "0f909d94-48d2-4f0e-8352-84321377567f",
                        "name": "Get All Navigation Items",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "8b9ab2b2-0e4f-4e34-ae2a-b4b3811eaa47",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Gets all navigation items (tabs) that the user has access to.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/nav-items",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "Small",
                                "description": "The form factor for each app that the user has access to (`Large`, `Medium` or `Small`)",
                                "enabled": false
                            },
                            {
                                "key": "navItemNames",
                                "value": "",
                                "description": "A comma delimited list of TabDefinition name values to include in the response.",
                                "enabled": false
                            },
                            {
                                "key": "page",
                                "value": "",
                                "description": "The page offset form which to begin returning nav items. The default value is 0, which returns nav items from the first page. For example, for `page=2` and `pageSize=10`, the first nav item returned is the 21st nav item in the list.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The maximum number of nav items to return on a page. The default value is 25.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2219a95c-7e31-4fc3-8040-9d89d899b5b0"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "11048f2a-63a7-4cfd-9caa-ba364b2e4170",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136484,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "11048f2a-63a7-4cfd-9caa-ba364b2e4170",
                        "name": "Parameterized Search",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Executes a simple RESTful search using parameters instead of a SOSL clause. Indicate parameters in a URL in the GET method. Or, use POST for more complex JSON searches.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/parameterizedSearch/?q",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "",
                                "equals": false,
                                "description": "A search string that is properly URL-encoded",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "1445b3e7-9acd-40e5-8773-086316bd0a9d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667530859,
                        "folder": "59ef795f-54b0-4d73-b818-c6a935409f1f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1445b3e7-9acd-40e5-8773-086316bd0a9d",
                        "name": "Expression Set Retrieve",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "# Expression Set Retrieve and Delete (DELETE, GET)\n\nEndpoints to read, and delete expression set.Resource\n\n```\n/connect/business-rules/expression-set/${expressionSetId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect\n            /business-rules/expressionSet/$11Oxx0000006PcLEAU\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nDELETE, GET\n\nRequest body for GET\n\nRoot XML tag\n\nJSON example\n\n```\n{\n  \"name\": \"CTX Mapping ES\",\n  \"apiName\": \"CTX_Mapping_ES_1\",\n  \"description\": \"...\",\n  \"usageType\": \"Bre\",\n  \"contextDefinitions\": [\n    {\n      \"id\": \"11Oxx0000006PcLEAU\"\n    }\n  ],\n  \"versions\": [\n    {\n      \"name\": \"CTX_Mapping_ES_1 V1\",\n      \"apiName\": \"CTX_Mapping_ES_1_V1\",\n      \"description\": \"Sample CTX Mapping\",\n      \"startDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"endDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"versionNumber\": 1,\n      \"rank\": 1,\n      \"enabled\": true,\n      \"showExplExternally\": false,\n      \"steps\": [\n        {\n          \"name\": \"Condition1\",\n          \"description\": \"Condition step for conditions w.r.t product\",\n          \"sequenceNumber\": 1,\n          \"resultIncluded\": true,\n          \"stepType\": \"Condition\",\n          \"conditionExpression\": {\n            \"expression\": \"productName == 'iPhone' && productColor == 'Red'\",\n            \"resultParameter\": \"condition_output__1\"\n          }\n        }\n      ],\n      \"variables\": [\n        {\n          \"name\": \"productName\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productName\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"productColor\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productColor\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"condition_output__1\",\n          \"dataType\": \"Boolean\",\n          \"description\": \"condition_output__1\",\n          \"input\": false,\n          \"output\": true,\n          \"resultStep\": \"Condition1\",\n          \"type\": \"Variable\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| apiName | String | Unique name of the expression set. | Required | 58.0 |\n| context\u200bDefinitions | [Context Definition Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_context_definition_input.htm) | List of context definitions in an expression set. | Optional | 58.0 |\n| description | String | Description of the expression set. | Optional | 58.0 |\n| name | String | Name of the expression set. | Required | 58.0 |\n| usage\u200bType | String | Usage type of the expression set.  <br>  <br>Valid values are:  <br>  <br>\\- AiAccelerator\u200bSubscriberChurn\u200bPrediction\u2014Used for Industries Einstein  <br>  <br>\\- Bre\u2014Used for Business Rules Engine  <br>  <br>\\- CustomLoyalty\u2014Used for Loyalty Management  <br>  <br>\\- DefaultPricing\u2014Used for Pricing Plans in Enterprise Product Catalog (EPC) by Communications Cloud  <br>  <br>\\- Qualification\u2014Used for Industries Communications, Media, and Energy (CME)  <br>  <br>\\- RecordAlert\u2014Used for Financial Services Cloud  <br>  <br>\\- ShipAndDebit\u2014Used for Manufacturing Cloud  <br>  <br>\\- TierProcessing\u2014Used for Loyalty Management  <br>  <br>\\- TransactionJournal\u2014Used for Loyalty Management  <br>  <br>\\- WarrantyClaim\u2014Used for Manufacturing Cloud | Required | 58.0 |\n| versions | [Expression Set Version Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_expression_set_version.htm)\\[\\] | List of the expression set versions. | Optional | 58.0 |\n\nResponse body for GET[Expression Set Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_expression_set_output.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "expressionSetId": "9QLHo000000LBngOAG"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/expression-set/:expressionSetId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "6dc1572d-cdde-42a6-af67-538e9bd3c6d1",
                                "key": "expressionSetId",
                                "value": "9QLHo000000LBngOAG",
                                "description": "Expression Set Id: For Example 9QLHo000000LBjEOAW"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6f72a36e-f81a-4df7-9b05-877b2eec78ba",
                            "fb04a471-8c7a-406f-bacb-cd58d22ecd0c",
                            "f16b43fa-d404-4b7a-b2b9-127b4ae80cc3",
                            "439159c9-46e0-4d64-8588-3d36cc1e230c"
                        ],
                        "createdAt": "2023-09-20T11:56:50.000Z",
                        "updatedAt": "2023-09-20T11:56:52.000Z"
                    }
                },
                {
                    "model_id": "14711bcb-5cc9-4d72-a140-0bf7fa603bbc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667645,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "14711bcb-5cc9-4d72-a140-0bf7fa603bbc",
                        "name": "Get Record Layout Metadata",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get metadata about page layouts for the specified object type.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/layout/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "",
                                "description": "The layout display size for the record. One of these values:\nLarge\u2014(Default) Use this value to get a layout for desktop display size.\nMedium\u2014Use this value to get a layout for tablet display size.\nSmall\u2014Use this value to get a layout for phone display size.",
                                "enabled": false
                            },
                            {
                                "key": "layoutTypes",
                                "value": "",
                                "description": "The layout type for the record. A collection of any of these values:\nCompact\u2014Use this value to get a layout that contains a record\u2019s key fields.\nFull\u2014(Default) Use this value to get a full layout.",
                                "enabled": false
                            },
                            {
                                "key": "modes",
                                "value": "",
                                "description": "The access mode for the record. This value determines which fields to get from a layout. Layouts have different fields for create, edit, and view modes. For example, formula fields are rendered in view mode, but not in create mode because they\u2019re calculated at run time, like formulas in a spreadsheet. A collection of any of these values:\nCreate\u2014Use this mode if you intend to build UI that lets a user create a record. This mode is used by the /ui-api/record-defaults/create/<SOBJECT_API_NAME> resource.\nEdit\u2014Use this mode if you intend to build UI that lets a user edit a record. This mode is used by the /ui-api/record-defaults/clone/<RECORD_ID> resource.\nView\u2014(Default) Use this mode if you intend to build UI that displays a record.",
                                "enabled": false
                            },
                            {
                                "key": "recordTypeId",
                                "value": "",
                                "description": "The ID of the record type (RecordType object) for the new record. If not provided, the default record type is used.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "40c3fdb2-aeea-40a0-bf80-d2422ea59bc7"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "14732fd8-6063-4295-b76a-7d6b51d8a0ec",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771102051,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "14732fd8-6063-4295-b76a-7d6b51d8a0ec",
                        "name": "Group Membership Requests\u2014Private",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "69be1b09-0416-41c1-9b73-2acb482fe03b",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "188e1e3c-9414-49e6-b327-42346745bf59",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Update the status of a request by a user to join a private group or get information about a request to join a private group.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_group_membership_requests.htm?search_text=group-membership-requests",
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "CHATTER_GROUP_REQUEST_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/group-membership-requests/:CHATTER_GROUP_REQUEST_ID?status=Accepted&responseMessage=Welcome to the group!",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "status",
                                "value": "Accepted"
                            },
                            {
                                "key": "responseMessage",
                                "value": "Welcome to the group!"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "CHATTER_GROUP_REQUEST_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c70556b9-e17c-4f70-9735-ace1a9a60b62"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "1488fbc0-c3eb-4049-979a-99005842904c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531672,
                        "folder": "14f5dc82-4bc9-4a71-9679-c066c9ddd4cc",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1488fbc0-c3eb-4049-979a-99005842904c",
                        "name": "Lookup Table",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"conditions\": {\n        \"conditionsList\": [\n            {\n                \"fieldName\": \"IsDeleted\",\n                \"value\": true\n            }\n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "# Decision Table (Lookup Table)\n\nPerforms a lookup on a decision table.Resource\n\n```\n/connect/business-rules/decision-table/${decisionTableId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v55.0/connect\n/decision-table/0lDB0000000TNQzMAO\n\n ```\n\nAvailable version\n\n55.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nRequest body for POST\n\nJSON example\n\n```\n{\n   \"conditions\" : {\n      \"conditionsList\" : [\n         {\n            \"fieldName\": \"state__c\",\n            \"value\": \"MH\"\n         },\n         {\n            \"fieldName\": \"validity__c\",\n            \"value\": 30\n         }\n      ]\n   }\n}\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| conditions | [Decision Table Condition](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_decision_table_condition.htm)\\[\\] | The list of decision table conditions on which the decision table executes and provides outcomes. | Required | 55.0 |\n| datasetLinkName | String | The API name of the dataset link provided as an input for the decision table execution. | Optional | 55.0 |\n\nResponse body for POST\n\n[Decision Table Outcome](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_outcome.htm)\n\n# Decision Table Outcome\n\nOutput representation of the decision table execution.JSON example\n\n```\n{\n  \"errorCode\" : null,\n  \"errorMessage\" : null,\n  \"outcomeList\" : [ {\n    \"values\" : {\n      \"amount__c\" : \"399\",\n      \"Name\" : \"MH 005\"\n    }\n  }, {\n    \"values\" : {\n      \"amount__c\" : \"499\",\n      \"Name\" : \"MH 006\"\n    }\n  }, {\n    \"values\" : {\n      \"amount__c\" : \"379\",\n      \"Name\" : \"MH 007\"\n    }\n  }, {\n    \"values\" : {\n      \"amount__c\" : \"1498\",\n      \"Name\" : \"MH 008\"\n    }\n  }, {\n    \"values\" : {\n      \"amount__c\" : \"98\",\n      \"Name\" : \"MH 009\"\n    }\n  }, {\n    \"values\" : {\n      \"amount__c\" : \"251\",\n      \"Name\" : \"MH 010\"\n    }\n  } ],\n  \"outcomeType\" : \"Multiple Matches\",\n  \"successStatus\" : true\n}\n\n ```\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| errorCode | Integer | The error code if transaction fails for any reason. | Small, 55.0 | 55.0 |\n| errorMessage | String | The error message if transaction fails for any reason. | Small, 55.0 | 55.0 |\n| outcomeList | [Decision Table Outcome Item](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_outcome_item.htm)\\[\\] | Outcome list that stores two or more outcomes provided by the decision table. | Small, 55.0 | 55.0 |\n| outcomeType | String | The outcome type after the request is successful. | Small, 55.0 | 55.0 |\n| successStatus | Boolean | Indicates the status of the decision table execution. | Small, 55.0 | 55.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "decisionTableId": "0lDHo0000008Pnt"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-table/:decisionTableId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "06793e1b-f938-4acc-b06e-abcac11093c8",
                                "key": "decisionTableId",
                                "value": "0lDHo0000008Pnt",
                                "description": "Decision Table Id"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4cb20435-5f35-407f-9c2a-71876296bcf6",
                            "77a8219d-5ad3-4c04-9034-d4dbe4795f1a",
                            "84c11196-04f2-4f02-bfd3-3263a459c672"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:55.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "14dd8047-87ed-4a7a-aad3-6c75b2a3aa1c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406879,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "14dd8047-87ed-4a7a-aad3-6c75b2a3aa1c",
                        "name": "Get Most Recently Used List View Records",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "181a903b-7f0e-4f38-bf71-e5fba71d940f",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns record data for an object\u2019s most recently used (MRU) list view.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/mru-list-records/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "99e58b62-983a-42ac-97d1-2ebd95fc730c"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "15dfe448-3673-4a75-b1b0-61431a0ff084",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406515,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "15dfe448-3673-4a75-b1b0-61431a0ff084",
                        "name": "Get Lookup Field Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "5620e97a-ebf0-43bc-882a-12d8e6d5bf76",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on Lightning pages (FlexiPages).",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAMES": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/lookup/:SOBJECT_API_NAMES",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAMES",
                                "value": "",
                                "description": "A lookup field name, or a comma-delimited list of lookup field names."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "8addf988-dfa0-4da8-892f-41a28d984633"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "16b3b9bb-3c1c-4d99-9638-a39b1fc4b56e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405463,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "16b3b9bb-3c1c-4d99-9638-a39b1fc4b56e",
                        "name": "Account by Id",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "723ca040-a054-4a54-a75a-252ce687f967"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query accountById($id: ID) {\n  uiapi {\n    query {\n      Account(where: { Id: { eq: $id } }) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
                            "variables": "{\n    \"id\": \"0014H00002LbR7QQAV\"\n}"
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "1986e011-057e-4fec-acd7-650062f86d69",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879350633,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1986e011-057e-4fec-acd7-650062f86d69",
                        "name": "Read Product API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\"context\" : {\"pricebookId\": \"01sA0000000wuhg\", \"currencyCode\":\"USD\"}}",
                        "descriptionFormat": null,
                        "description": "The Read Product API takes the request\u2019s product ID, pricebook ID, and currency code and returns a Product model. The Product model loads the product from your catalog when the user requests it.\nAvailable in: Salesforce CPQ Summer \u201916 and later\nSpecial Access Rules: Users must have read access to the product2 object.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_read_product.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.ProductAPI.ProductLoader&uid",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.ProductAPI.ProductLoader",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": false,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2020-12-09T16:14:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "1a4e1ee9-b8cb-427e-be76-267e17af0e0c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531605,
                        "folder": "14f5dc82-4bc9-4a71-9679-c066c9ddd4cc",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1a4e1ee9-b8cb-427e-be76-267e17af0e0c",
                        "name": "Update Table",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"setupName\":\"Product Qualificiation eligibility\",\n   \"fullName\":\"ProductQualificationEligibility\",\n   \"description\":\"Eligiblity of Products using Qualification Rules\",\n   \"usageType\":\"ProductEligibility\",\n   \"sourceType\":\"SingleSobject\",\n   \"sourceObject\":\"AccountFeed\",\n   \"status\":\"Draft\",\n   \"decisionResultPolicy\":\"UniqueValues\",\n   \"collectOperator\":\"Count\",\n   \"conditionType\":\"Any\",\n   \"conditionCriteria\":\"1 OR 2 OR 3\",\n   \"parameters\":[\n      {\n         \"fieldName\":\"IsDeleted\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"1\"\n      },\n      {\n         \"fieldName\":\"Id\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"2\"\n      },\n      {\n         \"fieldName\":\"Title\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"3\"\n      },\n      {\n         \"fieldName\":\"CreatedById\",\n         \"usage\":\"OUTPUT\"\n      }\n   ]\n}",
                        "descriptionFormat": null,
                        "description": "# Decision Table Definitions ( DELETE)\n\nDelete a decision table definition associated with a decision table.\n\nResource\n\n```\n/connect/business-rules/decision-table/definitions/${decisionTableId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/decision-table/definitions/0lDxx00000002Ur\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nDELETE\n\nResponse body for DELETE\n\n[Decision Table Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_output.htm)\n\n# Decision Table Output\n\nOutput representation of the decision table details.JSON example for GET, POST, and PATCH\n\n```\n{\n   \"code\":\"200\",\n   \"decisionTable\":{\n      \"collectOperator\":\"Count\",\n      \"conditionCriteria\":\"1 OR 2 OR 3\",\n      \"conditionType\":\"Any\",\n      \"decisionResultPolicy\":\"UniqueValues\",\n      \"description\":\"Eligiblity of Products using Qualification Rules\",\n      \"id\":\"0lDxx00000000BJ\",\n      \"parameters\":[\n         {\n            \"fieldName\":\"IsDeleted\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":1,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"CreatedById\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"usage\":\"Output\"\n         },\n         {\n            \"fieldName\":\"Title\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":3,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"Id\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":2,\n            \"usage\":\"Input\"\n         }\n      ],\n      \"setupName\":\"Product Qualificiation eligibility3\",\n      \"sourceCriteria\":[\n         \n      ],\n      \"sourceObject\":\"AccountFeed\",\n      \"sourceType\":\"SingleSobject\",\n      \"sourceconditionLogic\":\"1 AND 2 AND 3\",\n      \"status\":\"Draft\"\n   },\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\nJSON example for DELETE\n\n```\n{\n   \"code\":\"200\",\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| code | String | Response code from the API request. | Small, 58.0 | 58.0 |\n| decisionTable | [Decision Table Definition Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_definition_output.htm) | Details of the decision table definition associated with the decision table. | Small, 58.0 | 58.0 |\n| isSuccess | Boolean | Indicates whether the API request is successful (true) or not (false). | Small, 58.0 | 58.0 |\n| message | String | Error message when the API request fails. | Small, 58.0 | 58.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "decisionTableId": "0lDHo0000008Po3"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-table/definitions/:decisionTableId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "b1538c0a-e54f-4fc1-be0b-16001bfa49a8",
                                "key": "decisionTableId",
                                "value": "0lDHo0000008Po3",
                                "description": "Decision Table Id"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "8e9e7f49-e288-4e2e-a02e-d7c43db9f752"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:54.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "1a87c1a3-7820-43ef-9111-411e97d98946",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136924,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1a87c1a3-7820-43ef-9111-411e97d98946",
                        "name": "SObject ApprovalLayouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of approval layouts for a specified object. Specify a particular approval process name to limit the return value to one specific approval layout. This resource is available in REST API version 30.0 and later.\n\napprovalProcessName parameter is optional",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "APPROVAL_PROCESS_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/describe/approvalLayouts/:APPROVAL_PROCESS_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "APPROVAL_PROCESS_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "1af28218-782f-40a6-aada-03498a226ebb",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101597,
                        "folder": "f415fc1b-6056-43e8-b182-55bb308d6ac7",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1af28218-782f-40a6-aada-03498a226ebb",
                        "name": "Feed Elements, Post and Search",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "0b17a7fe-bf40-4886-bd6b-c7afe96bebd9",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "59280eea-8cc8-41b0-a7fc-b85feb50ad2a",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n   \"body\": {\n      \"messageSegments\": [\n         {\n            \"type\": \"Text\",\n            \"text\": \"Chatter Feed Item Created via API: \"\n         },\n         {\n            \"markupType\" : \"Paragraph\",\n            \"type\" : \"MarkupBegin\"\n         },\n         {\n            \"markupType\" : \"Bold\",\n            \"type\" : \"MarkupBegin\"\n         },\n         {\n             \"text\" : \"First line of text.\",\n             \"type\" : \"Text\"\n         },\n         {\n            \"markupType\" : \"Bold\",\n            \"type\" : \"MarkupEnd\"\n         },\n         {\n            \"markupType\" : \"Paragraph\",\n            \"type\" : \"MarkupEnd\"\n         },\n         {\n            \"markupType\" : \"Paragraph\",\n            \"type\" : \"MarkupBegin\"\n         },\n         {\n            \"text\" : \"&nbsp;\",\n            \"type\" : \"Text\"\n         },\n         {\n            \"markupType\" : \"Paragraph\",\n            \"type\" : \"MarkupEnd\"\n         },\n         {\n            \"markupType\" : \"Paragraph\",\n            \"type\" : \"MarkupBegin\"\n         },\n         {\n            \"text\" : \"Second line of text.\",\n            \"type\" : \"Text\"\n         },\n         {\n            \"markupType\" : \"Paragraph\",\n            \"type\" : \"MarkupEnd\"\n         },\n         {\n            \"markupType\" : \"Code\",\n            \"type\" : \"MarkupBegin\"\n         },\n         {\n             \"text\" : \"<script>\\nvar i, t = 0;\\nfor (i = 0; i < 5; i++) {\\n   t += i;\\n}\\n</script>\",\n             \"type\" : \"Text\"\n         },\n         {\n            \"markupType\" : \"Code\",\n            \"type\" : \"MarkupEnd\"\n         },\n         {\n            \"type\": \"Mention\",\n            \"id\": \"<USER_GROUP_ID>\"\n         }\n      ]\n   },\n   \"capabilities\": {\n      \"files\": {\n         \"items\": [\n            {\n               \"id\": \"<FILE_ID>\"\n            }\n         ]\n      }\n   },\n   \"subjectId\": \"<USER_RECORD_GROUP_ID>\",\n   \"feedElementType\": \"FeedItem\"\n}",
                        "descriptionFormat": null,
                        "description": "https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element.htm\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feed-elements",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "content-type": true
                            },
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "213b79d8-330a-45ec-a385-7513ee0aec23"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "1afe834e-903a-4f04-b073-e7320911a437",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644655,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1afe834e-903a-4f04-b073-e7320911a437",
                        "name": "OpenID Connect Token Introspection Endpoint",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "token",
                                "value": "{{_accessToken}}",
                                "type": "text"
                            },
                            {
                                "key": "token_type_hint",
                                "value": "access_token",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "client_secret",
                                "value": "{{clientSecret}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\nAccept: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/introspect",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/x-www-form-urlencoded",
                                "type": "text"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2945a34f-03d0-4286-a396-41d1712be7c4"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "urlencoded": {}
                        }
                    }
                },
                {
                    "model_id": "1b2acd9f-af36-47c0-8707-c404f5033b57",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920708,
                        "folder": "3c82a7a0-5ad6-4a3a-a198-d4f733671bac",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1b2acd9f-af36-47c0-8707-c404f5033b57",
                        "name": "Create Order From Quote",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"inputs\": [\n        {\n            \"quoteRecordId\": \"{{currentQuote}}\"\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/standard/createOrderFromQuote",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:02.000Z",
                        "updatedAt": "2023-08-09T08:13:02.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "1b6c13f4-1d93-49e3-9e57-5eea27432000",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094803020,
                        "folder": "e6191f02-7467-4187-b198-fde6f2cc9fcf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1b6c13f4-1d93-49e3-9e57-5eea27432000",
                        "name": "Describe event felay feedback",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/EventRelayFeedback/describe",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:11.000Z",
                        "updatedAt": "2023-06-15T17:45:11.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "1c1c835d-6c1b-4969-b55b-6c5aefa614ca",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100622,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1c1c835d-6c1b-4969-b55b-6c5aefa614ca",
                        "name": "Get Credential",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a credential.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/credential?externalCredential=&principalName=&principalType=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "externalCredential",
                                "value": "",
                                "description": "Fully qualified developer name of the external credential."
                            },
                            {
                                "key": "principalName",
                                "value": "",
                                "description": "Name of the external credential named principal."
                            },
                            {
                                "key": "principalType",
                                "value": "",
                                "description": "Type of credential principal. Values are:\n* AwsStsPrincipal\n* NamedPrincipal\n* PerUserPrincipal"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "886a8d8f-3f2d-472a-885c-22b9f53fc02a"
                        ],
                        "createdAt": "2023-04-26T07:24:57.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "1c7c197c-e696-4f12-9a20-6516bdebe249",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405123,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1c7c197c-e696-4f12-9a20-6516bdebe249",
                        "name": "Update Personalized Navigation Items",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "5573b50f-d78e-46d6-912d-cd81f92608d2",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Updates the order of a user\u2019s personalized navigation items (tabs) and adds a navigation item to the list in the order specified.",
                        "variables": null,
                        "headers": "",
                        "method": "PUT",
                        "pathVariables": {
                            "APP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/apps/:APP_ID/user-nav-items",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "APP_ID",
                                "value": "",
                                "description": "Application ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "1cce111f-2621-4db4-833a-910d93fc5fe8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667541,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1cce111f-2621-4db4-833a-910d93fc5fe8",
                        "name": "Record Count",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists information about object record counts in your organization.\nThis resource is available in REST API version 40.0 and later for API users with the \u201cView Setup and Configuration\u201d permission. The returned record count is approximate, and does not include the following types of records:\n\nDeleted records in the recycle bin.\nArchived records.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_record_count.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/limits/recordCount?sObjects=Account,Contact,Lead",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "sObjects",
                                "value": "Account,Contact,Lead",
                                "description": "A comma-delimited list of object names. If a listed object is not found in the org, it is ignored and not returned in the response.\nThis parameter is optional. If this parameter is not provided, the resource returns record counts for all objects in the org."
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "7a0e7d3c-53da-4f44-a2cc-cf8629b1a81e"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z"
                    }
                },
                {
                    "model_id": "1d853d3e-3bd8-46d4-ba18-4c197f2e899f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756974,
                        "folder": "8c8de0a1-32d2-47d5-84a6-e9157881ce6f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1d853d3e-3bd8-46d4-ba18-4c197f2e899f",
                        "name": "Successful Get Job Info Query",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "enabled": false,
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "15bf1692-f631-4141-8aa1-ef8f7eef185e"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z"
                    }
                },
                {
                    "model_id": "1e0cacaf-105f-44a9-a91b-e0d37732f42d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918935,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1e0cacaf-105f-44a9-a91b-e0d37732f42d",
                        "name": "Get Standard Pricebook",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"standardPricebook\", jsonData.records[0].Id);"
                                    ],
                                    "type": "text/javascript",
                                    "id": "90d061ae-31de-4577-a132-16604f297f12"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Id, Name from Pricebook2 Where name='Standard Price Book' and IsActive = true",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"standardPricebook\", jsonData.records[0].Id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Id, Name from Pricebook2 Where name='Standard Price Book' and IsActive = true"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "1e9f0289-dab7-49e1-87d1-d6eb4f526d4b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100797,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1e9f0289-dab7-49e1-87d1-d6eb4f526d4b",
                        "name": "Get Named Credential by Developer Name",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a named credential.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "DEVELOPER_NAME": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/named-credential-setup/:DEVELOPER_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "42084b7c-0225-4ad7-bdd4-526147964162",
                                "key": "DEVELOPER_NAME",
                                "value": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "87bf58f9-adea-490c-bd63-8e84386ee693"
                        ],
                        "createdAt": "2023-06-13T07:21:05.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "1f8bd76f-c792-42e2-a270-1af1c59e4780",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667674,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1f8bd76f-c792-42e2-a270-1af1c59e4780",
                        "name": "Get Child Records",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get child records for a specified record and child relationship name. Relationships are connections between records. On a record detail page, each record in a related list has a child relationship to the parent record.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_ID": "",
                            "RELATIONSHIP_NAME\n": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/records/:RECORD_ID/child-relationships/:RELATIONSHIP_NAME\n",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "fields",
                                "value": "",
                                "description": "Specifies the fields to return. If this property is specified, the response is a union of fields and optionalFields.\nIf the context user doesn\u2019t have access to a field, an error is returned.\n\nIf you\u2019re not sure whether the context user has access to a field and you don\u2019t want the request to fail if they don\u2019t, use the optionalFields parameter.\n\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "A collection of optional field names. If a field is accessible to the context user, it\u2019s included in the response. If a field isn\u2019t accessible to the context user, it isn\u2019t included in the response, but it doesn\u2019t cause an error.\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "page",
                                "value": "",
                                "description": "The page offset from which to begin returning records. The default value is 0, which returns records from the first page. For example, for page=2 and pageSize=10, the first record returned is the 21st record in the list.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The maximum number of child records to return on a page. The default value is 5.",
                                "enabled": false
                            },
                            {
                                "key": "pageToken",
                                "value": "",
                                "description": "A token that represents the page offset.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            },
                            {
                                "key": "RELATIONSHIP_NAME\n",
                                "value": "",
                                "description": "API name of the relationship"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "68dedc8a-ef36-4cd8-b96c-8741157bde70"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "1f971b74-a521-42c1-a3c4-da4735b9e9fb",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249406547,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1f971b74-a521-42c1-a3c4-da4735b9e9fb",
                        "name": "Get Photo Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "eed0e554-801e-4525-89e2-b4f39916181c",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the photo actions for pages. Currently, only group and user pages support photo actions.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/photo/:RECORD_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_IDS",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6b8093e5-4e58-40e5-94f7-49b3d5b4b08b"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "1fdff632-cc07-484e-8553-27181cee8283",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426588,
                        "folder": "5defa1ba-7991-433f-8270-e798f19a2ea6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "1fdff632-cc07-484e-8553-27181cee8283",
                        "name": "List named credentials",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q=SELECT FIELDS(ALL) FROM NamedCredential LIMIT 200",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT FIELDS(ALL) FROM NamedCredential LIMIT 200"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2e4c5cc3-3a33-4858-8c46-024a7a64a303"
                        ],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "202e39bb-27cd-4d4e-9ae2-f35cbdd85806",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406738,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "202e39bb-27cd-4d4e-9ae2-f35cbdd85806",
                        "name": "Get List View Records per API Name",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "9b442dd9-1169-44f3-9be0-fc1d8ec75477",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns a collection of list views associated with an object.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "LIST_VIEW_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-records/:SOBJECT_API_NAME/:LIST_VIEW_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "fields",
                                "value": "",
                                "description": "Additional fields queried for the records returned. These fields don\u2019t create visible columns. If the field is not available to the user, an error occurs.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "Additional fields queried for the records returned. These fields don\u2019t create visible columns. If the field is not available to the user, no error occurs and the field isn\u2019t included in the records.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The number of list records viewed at one time. The default value is 50. Value can be 1\u20132000.",
                                "enabled": false
                            },
                            {
                                "key": "pageToken",
                                "value": "",
                                "description": "A token that represents the page offset. To indicate where the page starts, use this value with the `pageSize` parameter. The maximum offset is 2000 and the default is 0.",
                                "enabled": false
                            },
                            {
                                "key": "sortBy",
                                "value": "",
                                "description": "The API name of the field the list view is sorted by. If the name is preceded with `-`, the sort order is descending. For example, `Name` sorts by name in ascending order. `-CreatedDate` sorts by created date in descending order. Accepts only one value per request.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            },
                            {
                                "key": "LIST_VIEW_API_NAME",
                                "value": "",
                                "description": "List view API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c25e5fbd-eae1-4ff2-8876-64efa1baba95"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "204069c9-e3cd-4bb2-9a78-090aedc3d800",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802938,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "204069c9-e3cd-4bb2-9a78-090aedc3d800",
                        "name": "Delete event relay",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "EVENT_RELAY_CONFIG_ID": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/EventRelayConfig/:EVENT_RELAY_CONFIG_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "12d14c8d-b4fa-49a6-813b-8dc6e7e3c09d",
                                "key": "EVENT_RELAY_CONFIG_ID",
                                "value": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2092d90e-aaab-4503-aef2-e79fceb162de",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918717,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2092d90e-aaab-4503-aef2-e79fceb162de",
                        "name": "User Info",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "42c0a58e-ab72-4b2d-bbc5-869192fd67eb",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"_userId\", jsonData.user_id);",
                                        "context.set(\"_orgId\", jsonData.organization_id);",
                                        "context.set(\"_userFullName\", jsonData.name);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/oauth2/userinfo",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"_userId\", jsonData.user_id);\ncontext.set(\"_orgId\", jsonData.organization_id);\ncontext.set(\"_userFullName\", jsonData.name);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:12:59.000Z",
                        "updatedAt": "2023-08-09T08:12:59.000Z"
                    }
                },
                {
                    "model_id": "21130b6e-244c-47c7-9f34-f8ad5e999dbe",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405681,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "21130b6e-244c-47c7-9f34-f8ad5e999dbe",
                        "name": "Contacts Ordered",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "524accbb-89f0-477c-8295-f41450559ca3"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query contactsOrderBy {\n  uiapi {\n    query {\n      Contact(orderBy: { Name: { order: ASC }}) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "21145f00-f504-47f6-89b5-9646cfefea90",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136840,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "21145f00-f504-47f6-89b5-9646cfefea90",
                        "name": "SObject Get Deleted",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves the list of individual records that have been deleted within the given timespan for the specified object. SObject Get Deleted is available in API version 29.0 and later.\n\nThis resource is commonly used in data replication applications. Note the following considerations:\nDeleted records are written to a delete log which this resource accesses. A background process that runs every two hours purges records that have been in an organization's delete log for more than two hours if the number of records is above a certain limit. Starting with the oldest records, the process purges delete log entries until the delete log is back below the limit. This is done to protect Salesforce from performance issues related to massive delete logs\nInformation on deleted records are returned only if the current session user has access to them.\nResults are returned for no more than 15 days previous to the day the call is executed (or earlier if an administrator has purged the Recycle Bin).",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/deleted/?start=&end=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "start",
                                "value": ""
                            },
                            {
                                "key": "end",
                                "value": ""
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "22212f88-3b16-43e8-8303-ee6debac2cb4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136577,
                        "folder": "46349794-c9c6-4e79-906b-2bf7dcf0ecd1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "22212f88-3b16-43e8-8303-ee6debac2cb4",
                        "name": "Lightning Usage by FlexiPage",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Return details about the custom pages viewed most frequently in Lightning Experience.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_usagebyflexipagemetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/LightningUsageByFlexiPageMetrics",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "228384a4-7a30-4120-8df7-a546fd76449e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928432,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "228384a4-7a30-4120-8df7-a546fd76449e",
                        "name": "Get Tooling Describe SObject",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/:SOBJECT_API_NAME/describe",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "00326740-84f7-400f-b2d0-89c48dae3831"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z"
                    }
                },
                {
                    "model_id": "22b93a19-3682-4cb6-99bc-991519ec7c90",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667506,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "22b93a19-3682-4cb6-99bc-991519ec7c90",
                        "name": "Limits",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "13a246bc-efd8-4794-a5f9-8344afe9ef9c",
                                    "exec": [
                                        "// Visualizer that renders a Chart.js graph with the Salesforce API limits consumption",
                                        "const template = `<script src=\"https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js\"></script>",
                                        "<canvas id=\"myChart\" width=\"400\" height=\"800\"></canvas>",
                                        "<script>",
                                        "pm.getData((err, chartData) => {",
                                        "    const getTooltipFooter = (tooltipItems) => {",
                                        "        const index = tooltipItems[0].dataIndex;",
                                        "        return 'Consumed '+ chartData.consumed[index] +' out of '+ chartData.max[index];",
                                        "    };",
                                        "",
                                        "    const ctx = document.getElementById('myChart').getContext('2d');",
                                        "    const myChart = new Chart(ctx, {",
                                        "        type: 'bar',",
                                        "        data: {",
                                        "            labels: chartData.labels,",
                                        "            datasets: [",
                                        "                {",
                                        "                    label: '% Consumed',",
                                        "                    data: chartData.consumedPercent,",
                                        "                    backgroundColor: 'rgba(255, 99, 132, 1)',",
                                        "                    borderColor: 'rgba(255, 99, 132, 1)',",
                                        "                    borderWidth: 1",
                                        "                }",
                                        "            ]",
                                        "        },",
                                        "        options: {",
                                        "            indexAxis: 'y',",
                                        "            responsive: true,",
                                        "            scales: {",
                                        "                x: {",
                                        "                    beginAtZero: true,",
                                        "                    ticks: {",
                                        "                        callback: (value, index, values) => value + '%'",
                                        "                    },",
                                        "                    max: 100",
                                        "                }",
                                        "            },",
                                        "            interaction: {",
                                        "                intersect: false,",
                                        "                mode: 'y'",
                                        "            },",
                                        "            plugins: {",
                                        "                tooltip: {",
                                        "                    callbacks: {",
                                        "                        footer: getTooltipFooter,",
                                        "                        label: (tooltipItems) => tooltipItems.raw + '%'",
                                        "                    }",
                                        "                },",
                                        "                title: {",
                                        "                    display: true,",
                                        "                    text: 'API Limits Consumption'",
                                        "                },",
                                        "                legend: {",
                                        "                    display: false",
                                        "                }",
                                        "            }",
                                        "        }",
                                        "    });",
                                        "});",
                                        "</script>`;",
                                        "",
                                        "// Format API response into chart data",
                                        "const responseJson = pm.response.json();",
                                        "const chartData = {",
                                        "    labels: [],",
                                        "    consumed: [],",
                                        "    consumedPercent: [],",
                                        "    max: []",
                                        "};",
                                        "Object.keys(responseJson).forEach((limitName) => {",
                                        "    const { Max, Remaining } = responseJson[limitName];",
                                        "    const consumed = Max - Remaining;",
                                        "    let percent = 0;",
                                        "    if (Max !== 0) {",
                                        "        percent = (consumed / Max) * 100;",
                                        "        percent = percent",
                                        "            .toString()",
                                        "            .match(/^-?\\d+(?:\\.\\d{0,2})?/)[0];",
                                        "    }",
                                        "    chartData.labels.push(limitName);",
                                        "    chartData.consumed.push(consumed);",
                                        "    chartData.consumedPercent.push(percent);",
                                        "    chartData.max.push(Max);",
                                        "});",
                                        "// Render vizualizer",
                                        "pm.visualizer.set(template, chartData);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists information about limits in your org. For each limit, this resource returns the maximum allocation and the remaining allocation based on usage. This resource is available in REST API version 29.0 and later for API users with the View Setup and Configuration permission",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/limits",
                        "preRequestScript": null,
                        "tests": "// Visualizer that renders a Chart.js graph with the Salesforce API limits consumption\nconst template = `<script src=\"https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js\"></script>\n<canvas id=\"myChart\" width=\"400\" height=\"800\"></canvas>\n<script>\npm.getData((err, chartData) => {\n    const getTooltipFooter = (tooltipItems) => {\n        const index = tooltipItems[0].dataIndex;\n        return 'Consumed '+ chartData.consumed[index] +' out of '+ chartData.max[index];\n    };\n\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const myChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n            labels: chartData.labels,\n            datasets: [\n                {\n                    label: '% Consumed',\n                    data: chartData.consumedPercent,\n                    backgroundColor: 'rgba(255, 99, 132, 1)',\n                    borderColor: 'rgba(255, 99, 132, 1)',\n                    borderWidth: 1\n                }\n            ]\n        },\n        options: {\n            indexAxis: 'y',\n            responsive: true,\n            scales: {\n                x: {\n                    beginAtZero: true,\n                    ticks: {\n                        callback: (value, index, values) => value + '%'\n                    },\n                    max: 100\n                }\n            },\n            interaction: {\n                intersect: false,\n                mode: 'y'\n            },\n            plugins: {\n                tooltip: {\n                    callbacks: {\n                        footer: getTooltipFooter,\n                        label: (tooltipItems) => tooltipItems.raw + '%'\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'API Limits Consumption'\n                },\n                legend: {\n                    display: false\n                }\n            }\n        }\n    });\n});\n</script>`;\n\n// Format API response into chart data\nconst responseJson = pm.response.json();\nconst chartData = {\n    labels: [],\n    consumed: [],\n    consumedPercent: [],\n    max: []\n};\nObject.keys(responseJson).forEach((limitName) => {\n    const { Max, Remaining } = responseJson[limitName];\n    const consumed = Max - Remaining;\n    let percent = 0;\n    if (Max !== 0) {\n        percent = (consumed / Max) * 100;\n        percent = percent\n            .toString()\n            .match(/^-?\\d+(?:\\.\\d{0,2})?/)[0];\n    }\n    chartData.labels.push(limitName);\n    chartData.consumed.push(consumed);\n    chartData.consumedPercent.push(percent);\n    chartData.max.push(Max);\n});\n// Render vizualizer\npm.visualizer.set(template, chartData);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d9ed4240-9464-435b-a5ba-7d4ce96d919e"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z"
                    }
                },
                {
                    "model_id": "22bb7f5a-f25a-4ea9-be25-95f958f05996",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317944,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "22bb7f5a-f25a-4ea9-be25-95f958f05996",
                        "name": "Passwordless Login - Token Exchange",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "code",
                                "value": "<code>",
                                "description": "Auth Code from the Authorize response",
                                "type": "text"
                            },
                            {
                                "key": "grant_type",
                                "value": "authorization_code",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This exchanges the auth code returned in the Authorize Request for an access token and refresh token. This follows the standard Auth Code flow/Webserver Code Flow pattern. The Code is the return form the Authorization call.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-09-08T16:03:17.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "2343d91a-5ed5-4940-bfa9-243a15ddd567",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136933,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2343d91a-5ed5-4940-bfa9-243a15ddd567",
                        "name": "SObject CompactLayouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of compact layouts for a specific object. This resource is available in REST API version 29.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/describe/describe/compactLayouts",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "2644b7b3-33b5-47e9-968e-5e1c3e935046",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31359293766,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2644b7b3-33b5-47e9-968e-5e1c3e935046",
                        "name": "Describe event relay",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/EventRelayConfig/describe",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-07-03T14:01:48.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2672904f-2223-42bb-9a3a-6872dccffbda",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928437,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2672904f-2223-42bb-9a3a-6872dccffbda",
                        "name": "Access Records",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/:SOBJECT_API_NAME/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0a0c77a1-c4d5-4d63-8435-fa94b097580b"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z"
                    }
                },
                {
                    "model_id": "270ae510-42a0-4ba1-a0f6-7d1259d70867",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136940,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "270ae510-42a0-4ba1-a0f6-7d1259d70867",
                        "name": "Describe Global Layouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of layouts and descriptions. The list of fields and the layout name are returned.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/Global/describe/layouts/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "2738437f-928f-4f26-9d3f-1d12764ae460",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136453,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2738437f-928f-4f26-9d3f-1d12764ae460",
                        "name": "Search Suggested Article Title Matches",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns a list of Salesforce Knowledge article titles that match the user\u2019s search query string. Provides a shortcut to navigate directly to likely relevant articles before the user performs a search.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_suggest_title_matches.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/search/suggestions?q&publishStatus&language",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "articleTypes",
                                "value": "",
                                "description": "Optional. Three-character ID prefixes indicating the desired article types. You can specify multiple values for this parameter in a single REST call, by repeating the parameter name for each value. For example, articleTypes=ka0&articleTypes=ka1.",
                                "enabled": false
                            },
                            {
                                "key": "categories",
                                "value": "",
                                "description": "Optional. The name of the data category group and name of the data category for desired articles, expressed as a JSON mapping. You can specify multiple data category group and data category pairs in this parameter. For example, categories={\"Regions\":\"Asia\",\"Products\":\"Laptops\"}. Characters in the URL might need to be encoded. For this example, categories=%7B%22Regions%22%3A%22Asia\u200b%22%2C%22Products%22%3A%22Laptops%22%7D.\n",
                                "enabled": false
                            },
                            {
                                "key": "channel",
                                "value": "",
                                "description": "Optional. The channel where the matching articles are visible. Valid values:\nAllChannels\u2013Visible in all channels the user has access to\nApp\u2013Visible in the internal Salesforce Knowledge application\nPkb\u2013Visible in the public knowledge base\nCsp\u2013Visible in the Customer Portal\nPrm\u2013Visible in the Partner Portal\nIf channel isn\u2019t specified, the default value is determined by the type of user.\nPkb for a guest user\nCsp for a Customer Portal user\nPrm for a Partner Portal user\nApp for any other type of user\nIf channel is specified, the specified value may not be the actual value requested, because of certain requirements.\nFor guest, Customer Portal, and Partner Portal users, the specified value must match the default value for each user type. If the values don\u2019t match or AllChannels is specified, then App replaces the specified value.\nFor all users other than guest, Customer Portal, and Partner Portal users:\nIf Pkb, Csp, Prm, or App are specified, then the specified value is used.\nIf AllChannels is specified, then App replaces the specified value.",
                                "enabled": false
                            },
                            {
                                "key": "limit",
                                "value": "",
                                "description": "Optional. Specifies the maximum number of articles to return. If there are more suggested articles than the limit specified, the response body\u2019s hasMoreResults property is true.",
                                "enabled": false
                            },
                            {
                                "key": "topics",
                                "value": "",
                                "description": "Optional. The topic of the returned articles. For example: topics=outlook&topics=email.",
                                "enabled": false
                            },
                            {
                                "key": "validationStatus",
                                "value": "",
                                "description": "Optional. The validation status of returned articles.",
                                "enabled": false
                            },
                            {
                                "key": "q",
                                "value": "",
                                "equals": false
                            },
                            {
                                "key": "publishStatus",
                                "value": "",
                                "equals": false
                            },
                            {
                                "key": "language",
                                "value": "",
                                "equals": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "27c478bf-67f8-4f2f-91ac-6493c76f8844",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317649,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "27c478bf-67f8-4f2f-91ac-6493c76f8844",
                        "name": "Registration - Initialize",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": "{\n    \"userdata\": {\n        \"firstName\": \"userFirstName\",\n        \"lastName\": \"userLastName\",\n        \"email\": \"<email>\",\n        \"username\": \"<username>\"\n    },\n    \"customdata\": {\n        \"mobilePhone\": \"+12035408967\",\n        \"streetAddress\": \"12 N Lands End Rd\",\n        \"city\": \"Lantana\",\n        \"state\": \"Florida\",\n        \"zip\": \"20537\",\n        \"privacyPolicy\": true\n    },\n    \"password\": \"Test123!\",\n    \"recaptcha\": \"<recaptcha-token>\",\n    \"verificationmethod\": \"email\"\n}",
                        "descriptionFormat": null,
                        "description": "Submits the registration data to the init/registration endpoint and returns a request identifier. At the same time, an OTP is sent out to the end users via email or sms. Registration data is passed in the request body, and is formatted with JSON, with 5 keys: `userdata`, `customdata`, `password`, `recaptcha`, and `verificationmethod`. The first two keys are JSON structures, and the last 3 keys are strings.\n\nThis request returns JSON, and includes an identifier (request identifier).",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/auth/headless/init/registration",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "content-type": true
                            }
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:29.000Z",
                        "updatedAt": "2023-09-08T16:03:16.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "289730ac-9388-4001-8a1d-1d6897e6e900",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405643,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "289730ac-9388-4001-8a1d-1d6897e6e900",
                        "name": "Contacts",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a74c3933-b7e8-4587-bfb2-fcf46bd26a1c"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query contacts {\n  uiapi {\n    query {\n      Contact {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "2a179b99-c63a-4d46-bcad-423a8a86aef1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667663,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2a179b99-c63a-4d46-bcad-423a8a86aef1",
                        "name": "Get Object Metadata",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get metadata about a specific object. The response includes metadata describing fields, child relationships, record type, and theme.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/object-info/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "8b29aad0-db99-4211-9784-e9dc67ba8b00"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "2a6a59b7-7aea-4220-b1ad-f52fe5c9906c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879349965,
                        "folder": "a14ebc82-810d-4437-b509-09db279a767c",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2a6a59b7-7aea-4220-b1ad-f52fe5c9906c",
                        "name": "Contract Renewer API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"context\": {\n        \"masterContractId\": null,\n        \"renewedContracts\": [\n            {\n                \"attributes\": {\n                    \"type\": \"Contract\"\n                },\n                \"Id\": \"800540000006LLVAA2\"\n            }\n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Receive a CPQ contract in a request, and return quote data for one or more renewal quotes.\nAvailable in: Salesforce CPQ Summer \u201916 and later\nSpecial Access Rules: All of these user permissions are required.\nInsert and update on quote and opportunity objects\nRead on quote, opportunity, and product2 objects\nDelete on quote object\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_contract_renewer.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.ContractManipulationAPI.ContractRenewer",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.ContractManipulationAPI.ContractRenewer",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2020-12-09T16:13:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2a97d98f-636b-4c7c-a48e-aeeae90ec712",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317808,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2a97d98f-636b-4c7c-a48e-aeeae90ec712",
                        "name": "Username Password Login - Token Exchange",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "code",
                                "value": "<code>",
                                "description": "Auth Code from the Authorize response",
                                "type": "text"
                            },
                            {
                                "key": "grant_type",
                                "value": "authorization_code",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This exchanges the auth code returned in the Authorize Request for an access token and refresh token. This follows the standard Auth Code flow/Webserver Code Flow pattern. The Code is the return form the Authorization call.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "2ad9a518-6ae4-4c98-9379-e1732979e40b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531314,
                        "folder": "59ef795f-54b0-4d73-b818-c6a935409f1f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2ad9a518-6ae4-4c98-9379-e1732979e40b",
                        "name": "Expression Set Delete",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "# Expression Set Retrieve and Delete (DELETE, GET)\n\nEndpoints to read, and delete expression set.Resource\n\n```\n/connect/business-rules/expression-set/${expressionSetId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect\n            /business-rules/expressionSet/$11Oxx0000006PcLEAU\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nDELETE, GET\n\nRequest body for GET\n\nRoot XML tag\n\nJSON example\n\n```\n{\n  \"name\": \"CTX Mapping ES\",\n  \"apiName\": \"CTX_Mapping_ES_1\",\n  \"description\": \"...\",\n  \"usageType\": \"Bre\",\n  \"contextDefinitions\": [\n    {\n      \"id\": \"11Oxx0000006PcLEAU\"\n    }\n  ],\n  \"versions\": [\n    {\n      \"name\": \"CTX_Mapping_ES_1 V1\",\n      \"apiName\": \"CTX_Mapping_ES_1_V1\",\n      \"description\": \"Sample CTX Mapping\",\n      \"startDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"endDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"versionNumber\": 1,\n      \"rank\": 1,\n      \"enabled\": true,\n      \"showExplExternally\": false,\n      \"steps\": [\n        {\n          \"name\": \"Condition1\",\n          \"description\": \"Condition step for conditions w.r.t product\",\n          \"sequenceNumber\": 1,\n          \"resultIncluded\": true,\n          \"stepType\": \"Condition\",\n          \"conditionExpression\": {\n            \"expression\": \"productName == 'iPhone' && productColor == 'Red'\",\n            \"resultParameter\": \"condition_output__1\"\n          }\n        }\n      ],\n      \"variables\": [\n        {\n          \"name\": \"productName\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productName\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"productColor\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productColor\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"condition_output__1\",\n          \"dataType\": \"Boolean\",\n          \"description\": \"condition_output__1\",\n          \"input\": false,\n          \"output\": true,\n          \"resultStep\": \"Condition1\",\n          \"type\": \"Variable\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| apiName | String | Unique name of the expression set. | Required | 58.0 |\n| context\u200bDefinitions | [Context Definition Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_context_definition_input.htm) | List of context definitions in an expression set. | Optional | 58.0 |\n| description | String | Description of the expression set. | Optional | 58.0 |\n| name | String | Name of the expression set. | Required | 58.0 |\n| usage\u200bType | String | Usage type of the expression set.  <br>  <br>Valid values are:  <br>  <br>\\- AiAccelerator\u200bSubscriberChurn\u200bPrediction\u2014Used for Industries Einstein  <br>  <br>\\- Bre\u2014Used for Business Rules Engine  <br>  <br>\\- CustomLoyalty\u2014Used for Loyalty Management  <br>  <br>\\- DefaultPricing\u2014Used for Pricing Plans in Enterprise Product Catalog (EPC) by Communications Cloud  <br>  <br>\\- Qualification\u2014Used for Industries Communications, Media, and Energy (CME)  <br>  <br>\\- RecordAlert\u2014Used for Financial Services Cloud  <br>  <br>\\- ShipAndDebit\u2014Used for Manufacturing Cloud  <br>  <br>\\- TierProcessing\u2014Used for Loyalty Management  <br>  <br>\\- TransactionJournal\u2014Used for Loyalty Management  <br>  <br>\\- WarrantyClaim\u2014Used for Manufacturing Cloud | Required | 58.0 |\n| versions | [Expression Set Version Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_expression_set_version.htm)\\[\\] | List of the expression set versions. | Optional | 58.0 |\n\nResponse body for GET\n\n[Expression Set Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_expression_set_output.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "expressionSetId": "9QLHo000000LBjEOA"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/expression-set/:expressionSetId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "bffb601b-ba7b-4fea-b9ef-f3c4562c34ef",
                                "key": "expressionSetId",
                                "value": "9QLHo000000LBjEOA",
                                "description": "Expression Set Id: For Example 9QLHo000000LBjEOAW"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "15d5746f-7df1-45f5-9db2-91e67ffd3160",
                            "b678740b-f4a1-414b-8d36-90cfb7b746c0",
                            "46656b62-2279-46bb-a52f-4f9dc7484ad0",
                            "9d1f355b-4dea-4cbf-a0c8-cbb3cfeb70bd"
                        ],
                        "createdAt": "2023-09-20T11:56:50.000Z",
                        "updatedAt": "2023-09-20T11:56:53.000Z"
                    }
                },
                {
                    "model_id": "2afcf9aa-d5ed-44bd-9c77-2e9cdedf318e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667532009,
                        "folder": "c3f01ea7-6462-4754-85ce-9e32c5f3876c",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2afcf9aa-d5ed-44bd-9c77-2e9cdedf318e",
                        "name": "Retrieve expression set version dependencies",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "[https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_resources_expression_set_dependencies.htm](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_resources_expression_set_dependencies.htm)\n\n# Expression Set Version Dependencies (GET)\n\nRetrieve expression set version dependencies.Resource\n\n```\n/connect/business-rules/expression-set/version/${expressionSetVersionId}/dependencies\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v58.0/connect/business-rules/expression-set/version/9QARN000000016v4AA/dependencies\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nGET\n\nResponse body for GET\n\n[Expression Set Version Dependency](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_expression_set_version_dependency_output.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "expressionSetVersionId": "9QMHo000000LBnbOAG"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/expression-set/version/:expressionSetVersionId/dependencies",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "80f42efc-7078-4e03-a65c-af325c0f9e7f",
                                "key": "expressionSetVersionId",
                                "value": "9QMHo000000LBnbOAG",
                                "description": "Expression Set Version Id: For Example 9QLHo000000LBjEOAW"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "dadb58b8-9095-4eca-92eb-e3670dd32e23",
                            "66587d38-f925-42b5-85d9-fb0f7248b3a7",
                            "85da7840-441d-4cea-b9d7-93f7aa221982"
                        ],
                        "createdAt": "2023-09-20T11:56:52.000Z",
                        "updatedAt": "2023-09-20T11:56:56.000Z"
                    }
                },
                {
                    "model_id": "2c73b7bf-e896-48d0-b64e-c499ebb2da80",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531521,
                        "folder": "14f5dc82-4bc9-4a71-9679-c066c9ddd4cc",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2c73b7bf-e896-48d0-b64e-c499ebb2da80",
                        "name": "Create Table",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"setupName\":\"Product Qualificiation eligibility\",\n   \"fullName\":\"ProductQualificationEligibility\",\n   \"description\":\"Eligiblity of Products using Qualification Rules\",\n   \"sourceObject\":\"AccountFeed\",\n   \"status\":\"Draft\",\n   \"conditionType\":\"Any\",\n   \"conditionCriteria\":\"1 OR 2 OR 3\",\n   \"parameters\":[\n      {\n         \"fieldName\":\"IsDeleted\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"1\"\n      },\n      {\n         \"fieldName\":\"Id\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"2\"\n      },\n      {\n         \"fieldName\":\"Title\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"3\"\n      },\n      {\n         \"fieldName\":\"CreatedById\",\n         \"usage\":\"OUTPUT\"\n      }\n   ]\n}",
                        "descriptionFormat": null,
                        "description": "# Decision Table Definitions (POST)\n\nCreate a decision table definition. A decision table definition contains all the details required to create a decision table.Resource\n\n```\n/connect/business-rules/decision-table/definitions\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/decision-table/definitions\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nJSON example for a single object source\n\n```\n{\n   \"setupName\":\"Product Qualificiation eligibility\",\n   \"fullName\":\"ProductQualificationEligibility\",\n   \"description\":\"Eligiblity of Products using Qualification Rules\",\n   \"usageType\":\"ProductEligibility\",\n   \"sourceType\":\"SingleSobject\",\n   \"sourceObject\":\"AccountFeed\",\n   \"status\":\"Draft\",\n   \"decisionResultPolicy\":\"UniqueValues\",\n   \"collectOperator\":\"Count\",\n   \"conditionType\":\"Any\",\n   \"conditionCriteria\":\"1 OR 2 OR 3\",\n   \"parameters\":[\n      {\n         \"fieldName\":\"IsDeleted\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"1\"\n      },\n      {\n         \"fieldName\":\"Id\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"2\"\n      },\n      {\n         \"fieldName\":\"Title\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"3\"\n      },\n      {\n         \"fieldName\":\"CreatedById\",\n         \"usage\":\"OUTPUT\"\n      }\n   ]\n}\n\n ```\n\nJSON example for a multi-object source\n\n```\n{\n   \"setupName\":\"Jumbo Pricing Definition\",\n   \"fullName\":\"JumboPricingDefinition\",\n   \"description\":\"Join all the DT definitions into one jumbo pricing definition\",\n   \"usageType\":\"ProductEligibility\",\n   \"type\":\"LowVolume\",\n   \"sourceType\":\"MultipleSobjects\",\n   \"sourceObject\":\"AccountFeed\",\n   \"status\":\"Draft\",\n   \"decisionResultPolicy\":\"UniqueValues\",\n   \"collectOperator\":\"Count\",\n   \"sourceconditionLogic\":\"1 AND 2 AND 3\",\n   \"conditionType\":\"Any\",\n   \"conditionCriteria\":\"1 OR 2 OR 3 OR 4 OR 5\",\n   \"parameters\":[\n      {\n         \"fieldName\":\"IsDeleted\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"1\",\n         \"columnMapping\":\"IsDeleted\"\n      },\n      {\n         \"fieldName\":\"Id\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"2\",\n         \"columnMapping\":\"Id\"\n      },\n      {\n         \"fieldName\":\"Title\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"3\",\n         \"columnMapping\":\"Title\"\n      },\n      {\n         \"fieldName\":\"OldvalNumber\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"4\",\n         \"columnMapping\":\"AccountHistory.OldvalNumber\"\n      },\n      {\n         \"fieldName\":\"OldvalString\",\n         \"usage\":\"INPUT\",\n         \"operator\":\"Equals\",\n         \"sequence\":\"5\",\n         \"columnMapping\":\"AccountHistory.OldvalString\"\n      },\n      {\n         \"fieldName\":\"CreatedById\",\n         \"usage\":\"OUTPUT\",\n         \"columnMapping\":\"CreatedById\"\n      },\n      {\n         \"fieldName\":\"NewvalNumber\",\n         \"usage\":\"OUTPUT\",\n         \"columnMapping\":\"AccountHistory.NewvalNumber\"\n      },\n      {\n         \"fieldName\":\"NewvalString\",\n         \"usage\":\"OUTPUT\",\n         \"columnMapping\":\"AccountHistory.NewvalString\"\n      }\n   ]\n   \"sourceCriteria\":[\n      {\n         \"sourceFieldName\":\"OldvalString\",\n         \"value\":\"5\",\n         \"operator\":\"Equals\",\n         \"valueType\":\"Parameter\",\n         \"sequenceNumber\":\"1\"\n      }\n   ]\n}\n\n ```\n\nRequest body for POSTProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| collectOperator | String | Operator to apply a filter to outputs. Possible values are:  <br>  <br>\\- Count  <br>  <br>\\- Maximum  <br>  <br>\\- Minimum  <br>  <br>\\- None  <br>  <br>\\- Sum | Optional | 58.0 |\n| conditionCriteria | String | Custom logic applied on the decision table columns to decide how the input fields are processed. | Optional  <br>  <br>Required when the condition type is Custom. | 58.0 |\n| conditionType | String | Condition logic for input fields. Possible values are:  <br>  <br>\\- All  <br>  <br>\\- Any  <br>  <br>\\- Custom | Optional | 58.0 |\n| description | String | Description of the decision table. | Optional | 58.0 |\n| decisionResultPolicy | String | Results policy to filter results of the decision table. Possible values are:  <br>  <br>\\- AnyValue  <br>  <br>\\- CollectOperator  <br>  <br>\\- FirstMatch  <br>  <br>\\- OutputOrder  <br>  <br>\\- Priority  <br>  <br>\\- RuleOrder  <br>  <br>\\- UniqueValues | Optional |  |\n| fullName | String | Unique name of the rule definition. | Required | 58.0 |\n| isSetCollectOperator | Boolean | For internal use only.  <br>  <br>Indicates whether the collectOperator is enabled (true) or not (false). | Optional | 58.0 |\n| isSetConditionCriteria | Boolean | For internal use only.  <br>  <br>Indicates whether the conditionCriteria field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetConditionType | Boolean | For internal use only.  <br>  <br>Indicates whether the conditionType field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetDescription | Boolean | For internal use only.  <br>  <br>Indicates whether the description field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetDecisionResultPolicy | Boolean | For internal use only.  <br>  <br>Indicates whether the DecisionResultPolicy field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetFullName | Boolean | For internal use only.  <br>  <br>Indicates whether the FullName field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetParameters | Boolean | For internal use only. Indicates whether the parameters field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetSetupName | Boolean | For internal use only.  <br>  <br>Indicates whether the setupName field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetSourceconditionLogic | Boolean | For internal use only.  <br>  <br>Indicates whether the sourceConditionLogic field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetSourceCriteria | Boolean | For internal use only.  <br>  <br>Indicates whether the sourceCriteria field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetSourceObject | Boolean | For internal use only.  <br>  <br>Indicates whether the sourceObject field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetSourceType | Boolean | For internal use only.  <br>  <br>Indicates whether the sourceType is enabled (true) or not (false). | Optional | 58.0 |\n| isSetType | Boolean | For internal use only.  <br>  <br>Indicates whether the type field is enabled (true) or not (false). | Optional | 58.0 |\n| isSetUsageType | Boolean | For internal use only.  <br>  <br>Indicates whether the UsageType field is enabled (true) or not (false). | Optional | 58.0 |\n| parameters | [Decision Table Parameter Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_decision_table_parameter_input.htm)\\[\\] | Array of input and output fields for the decision table. | Optional | 58.0 |\n| setupName | String | Name of the decision table. | Required | 58.0 |\n| sourceconditionLogic | String | Custom logic to filter the decision table rows. | Optional | 58.0 |\n| sourceCriteria | [Decision Table Source Criteria Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_decision_table_source_criteria_input.htm)\\[\\] | Output array representation of source filters for the decision table rows, such as, fieldName, operators, valueType, and more. | Optional | 58.0 |\n| sourceObject | String | Object containing business rules for the decision table to read. | Required | 58.0 |\n| sourceType | String | Type of source to obtain decision table data. Possible values are:  <br>  <br>\\- CsvUpload  <br>  <br>\\- MultipleSobjects  <br>  <br>\\- SingleSobject | Required | 58.0 |\n| status | String | Status of the decision table. Possible values are:  <br>  <br>\\- ActivationInProgress  <br>  <br>\\- ActivationInProgress  <br>  <br>\\- Draft  <br>  <br>\\- Inactive | Required | 58.0 |\n| type | String | Type of the decision table. Possible values are:  <br>  <br>\\- HighVolume  <br>  <br>\\- LowVolume | Optional | 58.0 |\n| usageType | String | Process type that uses the decision table. Possible values are:  <br>  <br>\\- Pricing  <br>  <br>\\- ProductEligibility | Optional | 58.0 |\n\nResponse body for POST\n\n[Decision Table Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_output.htm)\n\n# Decision Table Output\n\nOutput representation of the decision table details.JSON example for GET, POST, and PATCH\n\n```\n{\n   \"code\":\"200\",\n   \"decisionTable\":{\n      \"collectOperator\":\"Count\",\n      \"conditionCriteria\":\"1 OR 2 OR 3\",\n      \"conditionType\":\"Any\",\n      \"decisionResultPolicy\":\"UniqueValues\",\n      \"description\":\"Eligiblity of Products using Qualification Rules\",\n      \"id\":\"0lDxx00000000BJ\",\n      \"parameters\":[\n         {\n            \"fieldName\":\"IsDeleted\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":1,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"CreatedById\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"usage\":\"Output\"\n         },\n         {\n            \"fieldName\":\"Title\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":3,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"Id\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":2,\n            \"usage\":\"Input\"\n         }\n      ],\n      \"setupName\":\"Product Qualificiation eligibility3\",\n      \"sourceCriteria\":[\n         \n      ],\n      \"sourceObject\":\"AccountFeed\",\n      \"sourceType\":\"SingleSobject\",\n      \"sourceconditionLogic\":\"1 AND 2 AND 3\",\n      \"status\":\"Draft\"\n   },\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\nJSON example for DELETE\n\n```\n{\n   \"code\":\"200\",\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| code | String | Response code from the API request. | Small, 58.0 | 58.0 |\n| decisionTable | [Decision Table Definition Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_definition_output.htm) | Details of the decision table definition associated with the decision table. | Small, 58.0 | 58.0 |\n| isSuccess | Boolean | Indicates whether the API request is successful (true) or not (false). | Small, 58.0 | 58.0 |\n| message | String | Error message when the API request fails. | Small, 58.0 | 58.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-table/definitions",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "32c4eb03-087d-454c-bb76-adaa3c51269e"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:54.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2cfa755b-4dd3-4f39-adea-fa94d1e83ee5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928453,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2cfa755b-4dd3-4f39-adea-fa94d1e83ee5",
                        "name": "Delete event channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel/:PLATFORM_EVENT_CHANNEL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "PLATFORM_EVENT_CHANNEL_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "3cb3781e-417d-4165-821f-965efdc62062"
                        ],
                        "createdAt": "2023-06-15T17:45:06.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2e838f03-80bf-4b80-bfc0-e731aa7b3123",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531482,
                        "folder": "0718db68-351b-4288-b267-3b7035af16e7",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2e838f03-80bf-4b80-bfc0-e731aa7b3123",
                        "name": "Decision Model Notation Export",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"decisionModelEntityIds\": [\n        \"0lNHo000000LEvfMAG\"\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "# Decision Model Notation Export (POST)\n\nExport decision matrix data to a file in the [DMN (Decision Model Notation)](https://www.omg.org/dmn/#:~:text=DMN%20is%20a%20modeling%20language,monitor%20their%20application;%20business%20analysts.) format, an easily readable format for business rules designed by Object Management Group.Resource\n\n```\n/connect/business-rules/decision-models/export\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/decision-models/export\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nRequest body for POST\n\nJSON example\n\n```\n{\n   \"decisionModelEntityIds\":[\n      \u201c0lNRO00000004f72AA\u201d,\n      \u201c0lNRO000000rfn27AA\u201d\n   ]\n}\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| decisionModelEntityIds | String\\[\\] | A list of decision matrix version IDs to export data from. | Required | 58.0 |\n\nResponse body for POST\n\n[Decision Model Export Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_model_export_output.htm)\n\n# Decision Model Export Output\n\nOutput representation of a completed DMN (Decision Model Notation) export request.JSON example\n\n```\n{\n   \"message\":\"OK\",\n   \"success\":true,\n   \"errors\":[\n      {\n         \"errorCode\":\"BAD_REQUEST\",\n         \"errorMessage\":\"We couldn\u2019t find this record. Specify a valid ID for decisionModelEntityIds parameter.\",\n         \"recordId\":\"0lNRO00000004fsdfAA\"\n      }\n   ]\n}\n\n ```\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| errors | [Decision Model Export Error](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_model_export_error.htm)\\[\\] | List of errors corresponding to a failed export request. | Small, 58.0 | 58.0 |\n| message | String | Response message from the completed export request. | Small, 58.0 | 58.0 |\n| success | Boolean | Indicates whether the export request was successful (true) or not (false). | Small, 58.0 | 58.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-models/export",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "78877d26-7169-4d2e-88cb-69660a02b724",
                            "4bff5668-3fff-455c-b3b4-da169303473a",
                            "73545c9e-5ef8-4d9c-a661-4cbba1eea72b"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:54.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2ead9bd2-1d71-4961-9b01-1dc859000545",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920330,
                        "folder": "e82abac9-16b2-4418-8c0e-9f3b9410514d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2ead9bd2-1d71-4961-9b01-1dc859000545",
                        "name": "Query Eligible Products",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This query returns all the products that have a related Product Selling Model Option. To price a product with Subscription Management, the product must have a related Product Selling Model Option.\n\nFor more information, see [Set Up Products and Pricing in Subscription Management](https://help.salesforce.com/s/articleView?id=sf.subscription_mgmt_products_and_pricing_setup.htm).",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query/?q=SELECT Product2.Name, ProductSellingModelId, Product2.Id FROM ProductSellingModelOption Group By Product2.Name, Product2.Id, ProductSellingModelId ",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT Product2.Name, ProductSellingModelId, Product2.Id FROM ProductSellingModelOption Group By Product2.Name, Product2.Id, ProductSellingModelId "
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z"
                    }
                },
                {
                    "model_id": "2ee067ac-57a5-475f-81d0-c3b55c746fda",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802287,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2ee067ac-57a5-475f-81d0-c3b55c746fda",
                        "name": "Delete channel member",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_MEMBER_ID": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannelMember/:PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "af4f36ae-ef2c-4260-a144-e500c4cc5867",
                                "key": "PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                                "value": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:07.000Z",
                        "updatedAt": "2023-06-15T17:45:07.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2ef5186f-27ae-4506-ab1e-d0ea3adca701",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406805,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2ef5186f-27ae-4506-ab1e-d0ea3adca701",
                        "name": "Get List View Records and Metadata per Id",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "18b9b5da-5bd8-4f82-8a19-c4b524169bf6",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns record data and metadata for a list view.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "LIST_VIEW_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-ui/:LIST_VIEW_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "LIST_VIEW_ID",
                                "value": "",
                                "description": "List view ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6ac466f4-d567-4e16-882e-12306c4de501"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "2f082cb5-3deb-4edd-9268-0d7dabc9ce80",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 19444586303,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2f082cb5-3deb-4edd-9268-0d7dabc9ce80",
                        "name": "Product Schedules",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Work with revenue and quantity schedules for opportunity products. Establish or reestablish a product schedule with multiple installments for an opportunity product. Delete all installments in a schedule.\nThis resource is available in REST API version 43.0 and later.\n\nIn API version 46.0 and later, established and re-established schedules support custom fields, validation rules, and Apex triggers. Deleting all schedules now also fires delete triggers.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_opportunitylineitemschedules.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "OPPORTUNITY_LINE_ITEM_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/OpportunityLineItem/:OPPORTUNITY_LINE_ITEM_ID/OpportunityLineItemSchedules",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "OPPORTUNITY_LINE_ITEM_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-04-30T07:56:47.000Z"
                    }
                },
                {
                    "model_id": "2f0bf16b-f0c6-4de5-9a58-29ab82032a4e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531448,
                        "folder": "6394a62d-3af3-47d2-9ea1-86ef3521d430",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "2f0bf16b-f0c6-4de5-9a58-29ab82032a4e",
                        "name": "Lookup Table",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"inputs\": [\n        {\n            \"input\": [\n                {\n                    \"name\": \"myColumnInput\",\n                    \"value\": \"One\"\n                }\n            ]\n        }\n    ],\n    \"options\": {}\n}",
                        "descriptionFormat": null,
                        "description": "# Decision Matrix (Lookup Table)\n\nPerforms a lookup on decision matrix rows based on the input values provided, and returns the row\u2019s output.Resource\n\n```\n/connect/business-rules/decision-matrices/${matrixName}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/vXX.X/connect\n/business-rules/decision-matrices/InsurancePremium\n\n ```\n\nAvailable version\n\n55.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nRequest body for POST\n\nJSON example\n\n```\n{\n  \"inputs\": [\n    {\n      \"input\": [\n        {\n          \"name\": \"premium\",\n          \"value\": \"2400\"\n        }\n      ]\n    }\n  ],\n  \"options\": {\n    \"effectiveDate\": \"2022-12-03T10:15:30Z\"\n  }\n}\n\n ```\n\nHere, premium is a column header in the matrix, and 2400 is a value of a cell in the column.Properties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| inputs | [Decision Matrix Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_decision_matrix_input.htm) | List of inputs passed to a decision matrix. An input may contain multiple variables. | Required | 55.0 |\n| options | [Decision Matrix Options Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_decision_matrix_options.htm) | The lookup options for a decision matrix. | Optional | 55.0 |\n\nResponse body for POST\n\n[Decision Matrix Lookup Result](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_bre_decision_matrix_lookup_result.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "matrixUniqueName": "myDecisionMatrix"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-matrices/:matrixUniqueName",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "a1d6a30a-3e6a-4b22-b41d-75da5305556e",
                                "key": "matrixUniqueName",
                                "value": "myDecisionMatrix",
                                "description": "The value of Unique Name is the unique identifier of the record, which is sourced from the name of a decision matrix."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "801ad22a-d4de-4a08-b14e-d8cf240f152f",
                            "234842bc-8e81-4bb3-bb96-1d917108ba24",
                            "b1185d18-4b6b-44eb-97ac-dfcd7885af24",
                            "127c7a32-31bd-44a5-8f8a-21b2faa9f85f",
                            "4ba450d7-009c-4ca7-8c65-1f3f9ffd0ba9",
                            "afe24c76-e2c7-44eb-beac-a39896fb3f35",
                            "90729c85-be9f-4e94-af2f-4120915362c0"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:54.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "300c2825-f019-440b-8159-fd40cbe216d1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756760,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "300c2825-f019-440b-8159-fd40cbe216d1",
                        "name": "SObject Tree",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\"records\" :[{\n    \"attributes\" : {\"type\" : \"Account\", \"referenceId\" : \"ref1\"},\n    \"name\" : \"SampleAccount1\",\n    \"phone\" : \"1234567890\",\n    \"website\" : \"www.salesforce.com\",\n    \"numberOfEmployees\" : \"100\",\n    \"industry\" : \"Banking\",\n    \"Contacts\" : {\n      \"records\" : [{\n         \"attributes\" : {\"type\" : \"Contact\", \"referenceId\" : \"ref2\"},\n         \"lastname\" : \"Smith\",\n         \"Title\" : \"President\",\n         \"email\" : \"sample@salesforce.com\"\n         },{\n         \"attributes\" : {\"type\" : \"Contact\", \"referenceId\" : \"ref3\"},\n         \"lastname\" : \"Evans\",\n         \"title\" : \"Vice President\",\n         \"email\" : \"sample@salesforce.com\"\n         }]\n      }\n    },{\n    \"attributes\" : {\"type\" : \"Account\", \"referenceId\" : \"ref4\"},\n    \"name\" : \"SampleAccount2\",\n    \"phone\" : \"1234567890\",\n    \"website\" : \"www.salesforce.com\",\n    \"numberOfEmployees\" : \"52000\",\n    \"industry\" : \"Banking\",\n    \"childAccounts\" : {\n      \"records\" : [{\n        \"attributes\" : {\"type\" : \"Account\", \"referenceId\" : \"ref5\"},\n        \"name\" : \"SampleChildAccount1\",\n        \"phone\" : \"1234567890\",\n        \"website\" : \"www.salesforce.com\",\n        \"numberOfEmployees\" : \"100\",\n        \"industry\" : \"Banking\"\n        }]\n      },\n    \"Contacts\" : {\n      \"records\" : [{\n        \"attributes\" : {\"type\" : \"Contact\", \"referenceId\" : \"ref6\"},\n        \"lastname\" : \"Jones\",\n        \"title\" : \"President\",\n        \"email\" : \"sample@salesforce.com\"\n        }]\n      }\n  }]\n}",
                        "descriptionFormat": null,
                        "description": "Creates one or more sObject trees with root records of the specified type. An sObject tree is a collection of nested, parent-child records with a single root record.\nIn the request data, you supply the record hierarchies, required and optional field values, each record\u2019s type, and a reference ID for each record. Upon success, the response contains the IDs of the created records. If an error occurs while creating a record, the entire request fails. In this case, the response contains only the reference ID of the record that caused the error and the error information.\n\nThe request can contain the following:\nUp to a total of 200 records across all trees\nUp to five records of different types\nSObject trees up to five levels deep\nBecause an sObject tree can contain a single record, you can use this resource to create up to 200 unrelated records of the same type.\n\nWhen the request is processed and records are created, triggers, processes, and workflow rules fire separately for each of the following groups of records.\nRoot records across all sObject trees in the request\nAll second-level records of the same type\u2014for example, second-level Contacts across all sObject trees in the request\nAll third-level records of the same type\nAll fourth-level records of the same type\nAll fifth-level records of the same type\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobject_tree.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "Account"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/tree/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "Account",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2c9a0748-f784-45aa-bf24-5e38a87f5b44"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "3073330e-eff4-4540-aef9-0837a7fa9957",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756869,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3073330e-eff4-4540-aef9-0837a7fa9957",
                        "name": "SObject Collections Delete",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Executes actions on multiple records in one request. Use SObject Collections to reduce the number of round-trips between the client and server. This resource is available in API version 42.0 and later.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "DELETE",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/sobjects?ids=0012o00003OBzVSAA1&allOrNone=true",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "ids",
                                "value": "0012o00003OBzVSAA1",
                                "description": null
                            },
                            {
                                "key": "allOrNone",
                                "value": "true",
                                "description": null
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5c1ba2e1-51f1-485c-8376-9b7c432698d0"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "316f71eb-c53b-4be5-a65c-2c0ed15a1d5c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406559,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "316f71eb-c53b-4be5-a65c-2c0ed15a1d5c",
                        "name": "Create a Favorite",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "c1f92270-45e3-4ec7-a3c5-e3d703981827",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"name\": \"Favorite Name\",\n    \"sortOrder\": 1,\n    \"target\": \"API Name or ID\",\n    \"targetType\": \"ListView | ObjectHome | Record | Tab\"\n}",
                        "descriptionFormat": null,
                        "description": "Create a Favorite",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "3f803b51-f3ea-43a8-a4f4-3e8192554510"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "32df0a3f-2c60-4495-b5e4-7b7bb3ca144b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802988,
                        "folder": "e6191f02-7467-4187-b198-fde6f2cc9fcf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "32df0a3f-2c60-4495-b5e4-7b7bb3ca144b",
                        "name": "List event relay feedback items",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query/?q=SELECT FIELDS(ALL) FROM EventRelayFeedback LIMIT 200",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT FIELDS(ALL) FROM EventRelayFeedback LIMIT 200"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "34bf3042-c003-4309-9f57-293d38084a34",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667528164,
                        "folder": "1c891a62-2cde-478e-a6bc-0adc964ee29a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "34bf3042-c003-4309-9f57-293d38084a34",
                        "name": "SOAP List Metadata",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "606a9729-10fc-481e-ac09-06ea38aa6f41",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://soap.sforce.com/2006/04/metadata\">\n    <soapenv:Header>\n        <tns:SessionHeader>\n            <tns:sessionId>{{_accessToken}}</tns:sessionId>\n        </tns:SessionHeader>\n    </soapenv:Header>\n    <soapenv:Body>\n        <tns:listMetadata>\n            <listMetadataQuery>\n                <type>CustomObject</type>\n                <folder></folder>\n            </listMetadataQuery>\n            <asOfVersion>{{version}}</asOfVersion>\n        </tns:listMetadata>\n    </soapenv:Body>\n</soapenv:Envelope>",
                        "descriptionFormat": null,
                        "description": "`type`: Replace the value of `type` with the metadata type you're interested in\n\n`folder`: If your type requires a folder add it here. Null values are ignored\n\ne.g. \n\n```<type>CustomObject</type>\n<folder></folder>```\n\nor\n\n```<type>Dashboard</type>\n<folder>Service_Dashboards</folder>```",
                        "variables": null,
                        "headers": "Content-Type: text/xml\ncharset: UTF-8\nSOAPAction: login\nAccept: text/xml\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/Soap/m/{{version}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "text/xml",
                                "type": "text"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "login"
                            },
                            {
                                "key": "Accept",
                                "value": "text/xml",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "ae538ad4-ed6c-4088-bb17-5d8e54bcfdb8"
                        ],
                        "createdAt": "2021-03-10T14:29:06.000Z",
                        "updatedAt": "2023-09-20T11:56:49.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "35608b85-7587-4994-9089-5e7f984f1d26",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101288,
                        "folder": "aecf1654-6eeb-4dac-99ee-c1074ad4dfc0",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "35608b85-7587-4994-9089-5e7f984f1d26",
                        "name": "News Feed Elements",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "fde716ba-8080-4f5e-9877-3bfbbc246bd9",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "81d346a8-a5da-4135-88d9-6f646cb4617f",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "All feed elements from all groups the context user either owns or is a member of, as well as all files, records, and users the context user follows. Use this resource to get information about feed elements and to post feed elements.\n\nFor information about posting a feed element, see Feed Elements, Post and Search.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resource_feeds_news.htm#cc_news_feed_elements",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feeds/news/me/feed-elements",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0dc496f2-b64a-41e9-992a-82bd7fda856f"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "361d9809-0d2a-4cd9-88bc-151bda3d9f0f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928519,
                        "folder": "d8d52cc2-f78c-4a2e-90cd-8338dc74cf8d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "361d9809-0d2a-4cd9-88bc-151bda3d9f0f",
                        "name": "Refresh Sandbox",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"LicenseType\": \"DEVELOPER\",\n    \"AutoActivate\": true\n}",
                        "descriptionFormat": null,
                        "description": "Refreshes a sandbox.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {
                            "SANDBOX_INFO_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/SandboxInfo/:SANDBOX_INFO_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SANDBOX_INFO_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "9b51ea90-e5cf-475a-b4bc-0694c7a5807e"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "368e5b88-cf60-4310-84b7-8c8299efce01",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918842,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "368e5b88-cf60-4310-84b7-8c8299efce01",
                        "name": "Get Default Account",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "8477b86e-e268-428e-a832-47942b84b37d",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"defaultAccount\", jsonData.records[0].Id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Id, Name from Account Where name='SmartBytes'",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"defaultAccount\", jsonData.records[0].Id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Id, Name from Account Where name='SmartBytes'"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:12:59.000Z",
                        "updatedAt": "2023-08-09T08:12:59.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "37005d82-60d6-446b-8e28-ce48d8530243",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802972,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "37005d82-60d6-446b-8e28-ce48d8530243",
                        "name": "Update event relay",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"MyEventRelay\",\n    \"Metadata\": {\n        \"label\": \"My Event Relay\",\n        \"relayOption\": \"{\\\"ReplayRecovery\\\":\\\"LATEST\\\"}\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\nSOAPAction: \"\"\nAuthorization: Bearer {{_accessToken}}",
                        "method": "PATCH",
                        "pathVariables": {
                            "EVENT_RELAY_CONFIG_ID": "7k2RM000000008ZYAQ"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/EventRelayConfig/:EVENT_RELAY_CONFIG_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "\"\""
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{_accessToken}}"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "id": "2e110cb4-517f-4d63-9220-a8a88e0a52e6",
                                "key": "EVENT_RELAY_CONFIG_ID",
                                "value": "7k2RM000000008ZYAQ"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "371285f3-75fd-4b4e-b95d-c7354b7a497b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644786,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "371285f3-75fd-4b4e-b95d-c7354b7a497b",
                        "name": "Bulk Create Batch",
                        "dataMode": "binary",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "28c1920b-e6cd-4bdc-8eb3-3ba26fda88c7",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "",
                                        "var xmlTree = xml2Json(pm.response.text());",
                                        "console.log(xmlTree);",
                                        "context.set(\"_batchId\", xmlTree['batchInfo']['id']);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nContent-Type: text/csv\n//Content-Type: zip/csv\ncharset: UTF-8\n//Accept-Encoding: gzip\n//Content-Encoding: gzip\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/async/{{version}}/job/{{_jobId}}/batch",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n\nvar xmlTree = xml2Json(pm.response.text());\nconsole.log(xmlTree);\ncontext.set(\"_batchId\", xmlTree['batchInfo']['id']);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "text/csv"
                            },
                            {
                                "key": "Content-Type",
                                "value": "zip/csv",
                                "enabled": false
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip",
                                "enabled": false
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "444194b4-e465-4916-b827-3b8c06f6ae21"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z",
                        "dataOptions": {
                            "binary": {}
                        }
                    }
                },
                {
                    "model_id": "395a7c28-b7ff-452d-84b5-b80642d889d4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920482,
                        "folder": "9beb8ae0-1f53-4782-9f9d-f17d6f2f09a2",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "395a7c28-b7ff-452d-84b5-b80642d889d4",
                        "name": "Calculate Price (New Sale)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"listPricebookId\": \"{{standardPricebook}}\",\n    \"pricingFlow\": \"GET_PRICE_USING_CONTEXT\",\n    \"graph\": {\n        \"graphId\": \"1\",\n        \"records\": [\n            {\n                \"referenceId\": \"ref_sales_txn\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionShape\"\n                    },\n                    \"CurrencyIsoCode\": \"USD\"\n                }\n            },\n            {\n                \"referenceId\": \"Item_1_Evergreen\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"ProductId\": \"{{SLA_BronzeProduct}}\",\n                    \"ProductSellingModelId\": \"{{EvergreenMonthlyPSM}}\",\n                    \"Quantity\": 3.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                    \"CurrencyIsoCode\": \"USD\"\n                }\n            },\n            {\n                \"referenceId\": \"Item_2_Termed\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"EndDate\": \"2023-12-31\",\n                    \"ProductId\": \"{{VirtualRouterProduct}}\",\n                    \"ProductSellingModelId\": \"{{TermMonthlyPSM}}\",\n                    \"Quantity\": 100.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                    \"CurrencyIsoCode\": \"USD\"\n                }\n            }\n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Calculate the price of a new sale that contains two order items: a term-defined subscription order for a bronze-level SLA, and an evergreen subscription order for a virtual router. The payload for the term-defined order contains both a start date and an end date. Instead of an end date, you can also include a start date and a subscription term.\n\nSee [Calculate Price](https://developer.salesforce.com/docs/revenue/subscription-management/references/prices?meta=Summary).",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/pricing/salestransaction/actions/calculate-price",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "3b04c432-39d4-4e27-9bde-e44f029d0116",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667743,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3b04c432-39d4-4e27-9bde-e44f029d0116",
                        "name": "Get Default Values to Clone a Record",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "368bb16e-1f99-4512-bc5e-74146b9c73c1",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the default layout information, object information, and data for cloning a record. After getting the default values, make a request to POST /ui-api/records to create the record.\nThe response contains the default field values for a record cloned from the record specified in <RECORD_ID>, optionally of the specified recordTypeId.\n\nIt also contains the corresponding layout information for edit mode. In the Salesforce user interface, an admin with \u201cCustomize Application\u201d permission can mark a field as required in a layout. When you\u2019re building UI, to determine which fields to mark as required in a layout for edit mode, use the RecordLayoutItem.required property.\n\nThe response contains object metadata for the object type of the record specified in <RECORD_ID> and for any nested objects. For example, /ui-api/record-defaults/clone/001d000000AtfRIAAZ is a request to clone an Account record. It returns object metadata for Account and User, because the OwnerId field on the Account object contains a reference to the User object.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/record-defaults/clone/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "",
                                "description": "The layout display size for the record. One of these values:\nLarge\u2014(Default) Use this value to get a layout for desktop display size.\nMedium\u2014Use this value to get a layout for tablet display size.\nSmall\u2014Use this value to get a layout for phone display size.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "A collection of optional field names. If a field is accessible to the context user, it\u2019s included in the response. If a field isn\u2019t accessible to the context user, it isn\u2019t included in the response, but it doesn\u2019t cause an error.\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "recordTypeId",
                                "value": "",
                                "description": "The ID of the record type (RecordType object) for the new record. If not provided, the default record type is used.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2ffb88bc-c151-44ab-806c-57a1754244fc"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-09-27T16:15:08.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "3d5fed74-a2ab-4673-9ce4-5a9c3f27bfaf",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136374,
                        "folder": "bb87facf-ed63-40fb-bbec-944d053618b2",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3d5fed74-a2ab-4673-9ce4-5a9c3f27bfaf",
                        "name": "Get event logs",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Executes the specified SOQL query.\n\nIf the query results are too large, the response contains the first batch of results and a query identifier in the nextRecordsUrl field of the response. The identifier can be used in an additional request to retrieve the next batch.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/query/?q=SELECT+FIELDS(ALL)+from+EventLogFile+ORDER+BY+LastModifiedDate+DESC+LIMIT+200",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT+FIELDS(ALL)+from+EventLogFile+ORDER+BY+LastModifiedDate+DESC+LIMIT+200",
                                "equals": true,
                                "description": "Gets the first 200 EventLogFile records ordered by most recently updated first.",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2021-09-07T13:51:56.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "3de9ee9e-1a4b-4831-9836-095a2b4c24a7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406597,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3de9ee9e-1a4b-4831-9836-095a2b4c24a7",
                        "name": "Update a Favorite",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "6de878c3-76b4-496a-9e99-3493673e780d",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n  \"name\": \"Red Accounts\",\n  \"sortOrder\": 1\n}\n",
                        "descriptionFormat": null,
                        "description": "Update a Favorite",
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "FAVORITE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites/:FAVORITE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FAVORITE_ID",
                                "value": "",
                                "description": "The ID of a favorite"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "eb2eb232-1562-49f5-9868-d934220341ca"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "3deda60e-a365-400f-9309-e2addff9a4ec",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249406619,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3deda60e-a365-400f-9309-e2addff9a4ec",
                        "name": "Update a Batch of Favorites",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "1b91ba8b-e825-45a7-b551-7b84ad9f0bcd",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"favorites\": [\n        {\n            \"id\": \"0MVR00000004DhnOAE\",\n            \"name\": \"Q4 Perf\"\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Update all favorites at once. The sort order is updated to the given relative ordering. Any favorites missing from the request body are deleted.",
                        "variables": null,
                        "headers": "",
                        "method": "PUT",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites/batch",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a85379f4-e8d3-4f5f-bc45-981016899d23"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "3e23e0eb-18ba-4a74-8df2-389bae568f46",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644474,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3e23e0eb-18ba-4a74-8df2-389bae568f46",
                        "name": "Client Credentials Flow",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "client_credentials",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "client_secret",
                                "value": "{{clientSecret}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "77aec41d-0d42-4a99-af26-c504b4b943b1",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "",
                                        "if(!jsonData.error){",
                                        "    const id = jsonData.id.split('/');",
                                        "    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "    context.set(\"_accessToken\", jsonData.access_token);",
                                        "    context.set(\"_endpoint\", jsonData.instance_url);",
                                        "    context.set(\"_userId\", id.pop());",
                                        "    context.set(\"_orgId\", id.pop());",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\n\nif(!jsonData.error){\n    const id = jsonData.id.split('/');\n    const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n    context.set(\"_accessToken\", jsonData.access_token);\n    context.set(\"_endpoint\", jsonData.instance_url);\n    context.set(\"_userId\", id.pop());\n    context.set(\"_orgId\", id.pop());\n}",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disableCookies": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "61842419-4f89-4ef1-9a08-dc2436b1d9be"
                        ],
                        "createdAt": "2022-12-21T10:03:36.000Z",
                        "updatedAt": "2023-11-17T14:18:22.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "3fa4617b-af1c-44ee-a9f9-2030a84ae0d9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406393,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "3fa4617b-af1c-44ee-a9f9-2030a84ae0d9",
                        "name": "Get Related List Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "ee1fabc0-47ba-4ca3-89df-202e23639229",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on record detail pages.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_ID": "",
                            "RELATED_LIST_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/record/:RECORD_ID/related-list/:RELATED_LIST_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "actionTypes",
                                "value": "",
                                "description": "The action type (`CustomButton`, `ProductivityAction`, `QuickAction` or `StandardButton`)",
                                "enabled": false
                            },
                            {
                                "key": "apiNames",
                                "value": "",
                                "description": "The API names of one or more actions to be retrieved. Use this parameter only when passing `retrievalMode=All`.",
                                "enabled": false
                            },
                            {
                                "key": "formFactor",
                                "value": "",
                                "description": "The layout display size (`Large` (default), `Medium` or `Small`).",
                                "enabled": false
                            },
                            {
                                "key": "retrievalMode",
                                "value": "",
                                "description": "When the action context is Record, this parameter indicates which actions to retrieve from the record page. Either `All` or `PageLayout` (default).",
                                "enabled": false
                            },
                            {
                                "key": "sections",
                                "value": "",
                                "description": "The section of the user interface that the actions reside in (`ActivityComposer`, `CollaborateComposer`, `Page` or `SingleActionLinks`).",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            },
                            {
                                "key": "RELATED_LIST_IDS",
                                "value": "",
                                "description": "Optional. A related list name, or a comma-delimited list of related list names."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f26e8db7-66ad-42de-b59f-dfc32a474eaa"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "409e4751-635c-40ae-a4ba-f9e5483586b4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101638,
                        "folder": "f415fc1b-6056-43e8-b182-55bb308d6ac7",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "409e4751-635c-40ae-a4ba-f9e5483586b4",
                        "name": "Feed Elements Capability, Comments Items",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "2df2450b-d165-451a-998c-3e1e26f372a7",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "c84d56bc-bb13-401b-b5ec-e07cfad9ae4d",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Access comments for a feed element, or add a comment to a feed element.\nTo upload a binary file to attach to a comment, you must send it in a multipart/form-data request. To send the text of the comment, you can choose to include a JSON or XML rich input body part in the multipart/form-data request. Alternately, you can choose to pass the information in request parameter parts. For information about how to create the multipart/form-data message, see Uploading Binary Files.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element_capability_comments_items.htm#connect_resources_feed_element_capability_comments_items",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "FEED_ELEMENT_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feed-elements/:FEED_ELEMENT_ID/capabilities/comments/items?text=New Comment",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "text",
                                "value": "New Comment"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FEED_ELEMENT_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6c793e47-f0f7-4456-8034-2f807bb07078"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "40ac0113-78cb-44ff-84cf-c88225f76f19",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727757016,
                        "folder": "8c8de0a1-32d2-47d5-84a6-e9157881ce6f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "40ac0113-78cb-44ff-84cf-c88225f76f19",
                        "name": "Get All Query Jobs",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query?isPkChunkingEnabled=false&jobType&concurrencyMode&queryLocator",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "isPkChunkingEnabled",
                                "value": "false",
                                "equals": true,
                                "description": "If set to true, the request only returns information about jobs where PK Chunking is enabled",
                                "enabled": true
                            },
                            {
                                "key": "jobType",
                                "value": "",
                                "equals": false,
                                "description": "BigObjectIngest Classic V2Query",
                                "enabled": true
                            },
                            {
                                "key": "concurrencyMode",
                                "value": "",
                                "equals": false,
                                "description": "serial parallel",
                                "enabled": true
                            },
                            {
                                "key": "queryLocator",
                                "value": "",
                                "equals": false,
                                "description": "use the value from the nextRecordsUrl from the previous set",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "90b5ff87-052e-4448-be08-2fb6300a2d6b"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z"
                    }
                },
                {
                    "model_id": "40d62b42-9b3f-45a7-bd42-dee3a5506e99",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101852,
                        "folder": "c56a8e29-0e41-44bf-8d93-c53ba2f85caa",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "40d62b42-9b3f-45a7-bd42-dee3a5506e99",
                        "name": "Comment - Delete",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "b21ee2c9-d2ae-472e-9284-8102e995e6ed",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "453456e8-0f9c-4dd6-8a8f-6f5ea6227c83",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get information about, edit, or delete a comment.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_comments_specific.htm#connect_resources_comments_specific",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "COMMENT_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/comments/:COMMENT_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "COMMENT_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6fbfdc20-88f3-42f2-be49-3cdc548858df"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "418a524f-8251-4e67-8841-980c842a53bc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405882,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "418a524f-8251-4e67-8841-980c842a53bc",
                        "name": "Get Record Detail Page Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "6a4a18fc-455c-4344-91e8-10cb86c1c167",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on record detail pages.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/record/:RECORD_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_IDS",
                                "value": "",
                                "description": "A single record ID, or a comma-delimited list of record IDs."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c78e6779-eaaf-4af4-844b-5b49bf5bed71"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "41e9da81-f5db-46e3-af5f-f06e93e3eded",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136966,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "41e9da81-f5db-46e3-af5f-f06e93e3eded",
                        "name": "Describe SObject Layouts Per Record Type",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of layouts and descriptions. The list of fields and the layout name are returned.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_TYPE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/describe/layouts/:RECORD_TYPE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_TYPE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "41f26b5a-48a8-456a-98ea-cd3a54ff1be6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667768,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "41f26b5a-48a8-456a-98ea-cd3a54ff1be6",
                        "name": "Get Default Values to Create a Record",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "344b1197-2911-420f-9ad5-37fffb35558c",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the default values for fields for a new record of a specified object and optional record type. After getting the default values, make a request to POST /ui-api/records to create the record.\nThe response contains the default field values for the Full layout type for a new record of the object type specified in <SOBJECT_API_NAME>.\n\nIt also contains the corresponding layout for create mode. In the Salesforce user interface, an admin with \u201cCustomize Application\u201d permission can mark a field as required in a layout. When you\u2019re building UI, to determine which fields to mark as required in a layout for create mode, use the RecordLayoutItem.required property.\n\nThe response contains object metadata for the object specified in <SOBJECT_API_NAME> and for any nested objects. For example, a request to /ui-api/record-defaults/create/Account returns object metadata for Account and User, because the OwnerId field on the Account object contains a reference to the User object.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/record-defaults/create/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "",
                                "description": "The layout display size for the record. One of these values:\nLarge\u2014(Default) Use this value to get a layout for desktop display size.\nMedium\u2014Use this value to get a layout for tablet display size.\nSmall\u2014Use this value to get a layout for phone display size.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "A collection of optional field names. If a field is accessible to the context user, it\u2019s included in the response. If a field isn\u2019t accessible to the context user, it isn\u2019t included in the response, but it doesn\u2019t cause an error.\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "recordTypeId",
                                "value": "",
                                "description": "The ID of the record type (RecordType object) for the new record. If not provided, the default record type is used.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "sObject API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "cfa28589-bb05-4da9-b3a1-6afe5768d0d9"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-09-27T16:15:08.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "43725c65-769b-4ba6-a5ad-13ebfc9e1d83",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667530798,
                        "folder": "59ef795f-54b0-4d73-b818-c6a935409f1f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "43725c65-769b-4ba6-a5ad-13ebfc9e1d83",
                        "name": "Expression Set Creation",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"apiName\": \"myExpressionSet2\",\n    \"contextDefinitions\": [],\n    \"name\": \"myExpressionSet3\",\n    \"usageType\": \"Bre\",\n    \"versions\": [\n        {\n            \"apiName\": \"myExpressionSet_V1\",\n            \"enabled\": false,\n            \"id\": \"9QMHo000000LBjOOAW\",\n            \"name\": \"myExpressionSet V1\",\n            \"showExplExternally\": false,\n            \"startDate\": \"2023-09-06T10:35:11.000Z\",\n            \"steps\": [],\n            \"variables\": [],\n            \"versionNumber\": 1\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "[https://developer.salesforce.com/docs/atlas.en-us.246.0.industries_reference.meta/industries_reference/connect_resources_bre_create_expression_set.htm](https://developer.salesforce.com/docs/atlas.en-us.246.0.industries_reference.meta/industries_reference/connect_resources_bre_create_expression_set.htm)\n\n# Expression Set Creation (POST)\n\nCreates an expression set in Business Rules Engine. An expression set performs a series of calculations by using lookup tables and user-defined variables and constants.Resource\n\n```\n/connect/business-rules/expression-set\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect\n/business-rules/expression-set\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nRequest body for POST\n\nRoot XML tag\n\nJSON example\n\n```\n{\n  \"name\": \"CTX Mapping ES\",\n  \"apiName\": \"CTX_Mapping_ES_1\",\n  \"description\": \"...\",\n  \"usageType\": \"Bre\",\n  \"contextDefinitions\": [\n    {\n      \"id\": \"11Oxx0000006PcLEAU\"\n    }\n  ],\n  \"versions\": [\n    {\n      \"name\": \"CTX_Mapping_ES_1 V1\",\n      \"apiName\": \"CTX_Mapping_ES_1_V1\",\n      \"description\": \"Sample CTX Mapping\",\n      \"startDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"endDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"versionNumber\": 1,\n      \"rank\": 1,\n      \"enabled\": true,\n      \"showExplExternally\": false,\n      \"steps\": [\n        {\n          \"name\": \"Condition1\",\n          \"description\": \"Condition step for conditions w.r.t product\",\n          \"sequenceNumber\": 1,\n          \"resultIncluded\": true,\n          \"stepType\": \"Condition\",\n          \"conditionExpression\": {\n            \"expression\": \"productName == 'iPhone' && productColor == 'Red'\",\n            \"resultParameter\": \"condition_output__1\"\n          }\n        }\n      ],\n      \"variables\": [\n        {\n          \"name\": \"productName\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productName\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"productColor\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productColor\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"condition_output__1\",\n          \"dataType\": \"Boolean\",\n          \"description\": \"condition_output__1\",\n          \"input\": false,\n          \"output\": true,\n          \"resultStep\": \"Condition1\",\n          \"type\": \"Variable\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| apiName | String | Unique name of the expression set. | Required | 58.0 |\n| context\u200bDefinitions | [Context Definition Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_context_definition_input.htm) | List of context definitions in an expression set. | Optional | 58.0 |\n| description | String | Description of the expression set. | Optional | 58.0 |\n| name | String | Name of the expression set. | Required | 58.0 |\n| usage\u200bType | String | Usage type of the expression set.<br><br>Valid values are:<br><br>- AiAccelerator\u200bSubscriberChurn\u200bPrediction\u2014Used for Industries Einstein<br>    <br>- Bre\u2014Used for Business Rules Engine<br>    <br>- CustomLoyalty\u2014Used for Loyalty Management<br>    <br>- DefaultPricing\u2014Used for Pricing Plans in Enterprise Product Catalog (EPC) by Communications Cloud<br>    <br>- Qualification\u2014Used for Industries Communications, Media, and Energy (CME)<br>    <br>- RecordAlert\u2014Used for Financial Services Cloud<br>    <br>- ShipAndDebit\u2014Used for Manufacturing Cloud<br>    <br>- TierProcessing\u2014Used for Loyalty Management<br>    <br>- TransactionJournal\u2014Used for Loyalty Management<br>    <br>- WarrantyClaim\u2014Used for Manufacturing Cloud | Required | 58.0 |\n| versions | [Expression Set Version Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_expression_set_version.htm)\\[\\] | List of the expression set versions. | Optional | 58.0 |\n\nResponse body for POST\n\n[Expression Set Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_expression_set_output.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/expression-set",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "847ee0a5-7d9e-4a4c-aad9-a8d1b1c99c8f",
                            "59b241e9-0681-411a-8e9b-6a33d5310434",
                            "b02143ca-16eb-4720-982b-6a9115b881ac",
                            "5ccc32e2-670b-4579-a072-e10b26058c43",
                            "b5496755-2138-4b46-999c-78cd9803b551"
                        ],
                        "createdAt": "2023-09-20T11:56:50.000Z",
                        "updatedAt": "2023-09-20T11:56:52.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "47618b36-270a-471f-bbc5-4c696729d0fc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317693,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "47618b36-270a-471f-bbc5-4c696729d0fc",
                        "name": "Registration - Authorize",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "response_type",
                                "value": "code_credentials",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            },
                            {
                                "key": "scope",
                                "value": "",
                                "description": "Comma seperated list of scopes, optional",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "After you send your registration data to initialize, this request allows you to process that registration data, and as a part of this request you also verify the users email or sms number. The request itself is a authorization call for the Code and Credential flow. It includes 3 specific headers: `Auth-Request-Type` which is set to `user-registration`, `Auth-Verification-Type` which is set to email or sms, and an Authorization Basic header, which is the base 64 encoded result of `identifier:otp` where `identifier` is the value returned in your initialize registration call, and `otp` is the value sent to the end user via email or sms.\n\nThe response from this API is the Auth Code, which is then exchanged for the Access Token.",
                        "variables": null,
                        "headers": "Auth-Request-Type: user-registration\nAuth-Verification-Type: email\nAuthorization: Basic <base64Encoded identifier:otp>",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/authorize",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Auth-Request-Type",
                                "value": "user-registration",
                                "description": "Required for User Registration"
                            },
                            {
                                "key": "Auth-Verification-Type",
                                "value": "email",
                                "description": "Must match init/registration, email or sms"
                            },
                            {
                                "key": "Authorization",
                                "value": "Basic <base64Encoded identifier:otp>",
                                "description": "Base64 encoded <Identifier:OTP>"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "4890a37f-539e-4b9f-9abb-9d85705afda2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 24580172272,
                        "folder": "cb99867f-fa72-4273-a9f5-b4b5f24793a5",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4890a37f-539e-4b9f-9abb-9d85705afda2",
                        "name": "Introspection Query",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2022-04-21T17:29:30.000Z",
                        "updatedAt": "2022-04-21T17:29:30.000Z",
                        "graphqlModeData": {
                            "query": "query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      onOperation\n      onFragment\n      onField\n      locations\n    }\n  }\n}\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n      }\n    }\n  }\n}\n",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "489d498f-45c5-4984-aa2d-1d317ac3cb69",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879349906,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "489d498f-45c5-4984-aa2d-1d317ac3cb69",
                        "name": "Consent",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Your users can store consent preferences in different locations and possibly inconsistently. You can locate your customers\u2019 preferences for consent across multiple records when using API version 44.0 and later. Tracking consent preferences helps you and your users respect the most restrictive requests.\nConsent API aggregates consent settings across the Contact, Contact Point Type Consent, Data Use Purpose, Individual, Lead, Person Account, and User objects when the records have a lookup relationship. The Consent API can't locate records in which the email address field is protected by Platform Encryption.\n\nThe API returns consent details based on a single action, like email or track, or\u2014starting with API version 45.0\u2014the multiaction endpoint allows you to request multiple actions in a single API call.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/consent/action/action?actions&ids",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "aggregatedConsent",
                                "value": "",
                                "description": "Optional: true or false. aggregatedConsent is the same as aggregatedConsent=true. If true, one result is returned indicating whether to proceed or not, rather than a result for each ID. If any ID in the list returns false, the aggregated result is false.",
                                "enabled": false
                            },
                            {
                                "key": "datetime",
                                "value": "",
                                "description": "Optional. The timestamp for which consent is determined. The value is converted to the UTC timezone and must be specified in ISO 8601 format. If not specified, defaults to the current date and time.",
                                "enabled": false
                            },
                            {
                                "key": "purpose",
                                "value": "",
                                "description": "Optional. The reason for contacting a customer.",
                                "enabled": false
                            },
                            {
                                "key": "verbose",
                                "value": "",
                                "description": "Optional: true or false. verbose is the same as verbose=true. Verbose responses are slower than non-verbose responses. See the examples for a verbose response.",
                                "enabled": false
                            },
                            {
                                "key": "actions",
                                "value": "",
                                "equals": false
                            },
                            {
                                "key": "ids",
                                "value": "",
                                "equals": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2020-12-09T16:13:57.000Z"
                    }
                },
                {
                    "model_id": "48aa2f4b-1e81-40b2-975a-dbf10efe31a8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 22291799835,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "48aa2f4b-1e81-40b2-975a-dbf10efe31a8",
                        "name": "Add Products API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Receive a CPQ quote, product collection, and quote group key in a request, and return a Quote model with all provided products added as quote lines.\nAvailable in: Salesforce CPQ Summer \u201916 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_add_products.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.QuoteAPI.QuoteProductAdder",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.QuoteAPI.QuoteProductAdder",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-12-09T08:13:12.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "48cceb9f-c9ab-4304-8765-83334c062490",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101622,
                        "folder": "f415fc1b-6056-43e8-b182-55bb308d6ac7",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "48cceb9f-c9ab-4304-8765-83334c062490",
                        "name": "Feed Element - Delete",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "dc581ba6-c1e2-4bc3-8d03-82e66cfdad53",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "7745a440-7e10-4679-8759-dd71883e5990",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Access, edit, or delete a feed element. Feed items are the only type of feed element that can be edited.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element_specific.htm",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "FEED_ELEMENT_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feed-elements/:FEED_ELEMENT_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FEED_ELEMENT_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "content-type": true
                            },
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "8b2e0642-4c53-44b5-8079-6f9077f0f4be"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "4adc2ae8-fa65-41b9-8864-f30ef944e96b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405785,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4adc2ae8-fa65-41b9-8864-f30ef944e96b",
                        "name": "Opportunities Early Stage",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "1ae95dca-7c85-40e4-9675-55c2d85057fc"
                        ],
                        "createdAt": "2022-04-21T17:29:32.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "graphqlModeData": {
                            "query": "query opportunitiesClosed {\n  uiapi {\n    query {\n      Opportunity(\n        where: {\n          or: [\n            { StageName: { eq: \"Prospecting\" } }\n            { StageName: { eq: \"Needs Analysis\" } }\n          ]\n        }\n      ) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n            CloseDate {\n              value\n              displayValue\n            }\n            Description {\n              value\n            }\n            StageName {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "4b89875d-cccf-4816-aaf5-48950a9ce7e1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756813,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4b89875d-cccf-4816-aaf5-48950a9ce7e1",
                        "name": "SObject Collections Retrieve",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Executes actions on multiple records in one request. Use SObject Collections to reduce the number of round-trips between the client and server. This resource is available in API version 42.0 and later.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/sobjects/:SOBJECT_API_NAME?ids=&fields=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "ids",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "fields",
                                "value": "",
                                "description": null
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a3861905-9d2c-49f4-bc07-e6b6ba411080"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "4c2dc3db-b20b-47d8-b358-6637bf5ec5f5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31027108981,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4c2dc3db-b20b-47d8-b358-6637bf5ec5f5",
                        "name": "Update Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"externalCredential\": \"test\",\n    \"authenticationProtocol\": \"Custom\",\n    \"principalName\": \"test\",\n    \"principalType\": \"NamedPrincipal\",\n    \"credentials\": {\n        \"testCredential\": {\n            \"value\": \"000000\",\n            \"encrypted\": true\n        }\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Update a credential.",
                        "variables": null,
                        "headers": "",
                        "method": "PUT",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/credential",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-04-26T07:24:57.000Z",
                        "updatedAt": "2023-06-13T07:21:05.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "4c463a3c-2c45-4bb1-a9ad-9459eaca820e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756784,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4c463a3c-2c45-4bb1-a9ad-9459eaca820e",
                        "name": "SObject Collections Create",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"allOrNone\" : false,\n   \"records\" : [{\n      \"attributes\" : {\"type\" : \"Account\"},\n      \"Name\" : \"example.com\",\n      \"BillingCity\" : \"San Francisco\"\n   }, {\n      \"attributes\" : {\"type\" : \"Contact\"},\n      \"LastName\" : \"Johnson\",\n      \"FirstName\" : \"Erica\"\n   }]\n}",
                        "descriptionFormat": null,
                        "description": "Executes actions on multiple records in one request. Use SObject Collections to reduce the number of round-trips between the client and server. This resource is available in API version 42.0 and later.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/sobjects",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "1387efe4-7566-4479-b792-ebb429979d87"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "4d215f7a-dc55-4d54-b237-9179773aa9dd",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426538,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4d215f7a-dc55-4d54-b237-9179773aa9dd",
                        "name": "Get channel member",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_MEMBER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannelMember/:PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "674f6645-83d5-4fbc-a6df-4b9c1c5da5a0",
                                "key": "PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e752840a-9754-462d-aaf0-ff7b40e659f3"
                        ],
                        "createdAt": "2023-06-15T17:45:07.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "4e3f8062-c8a6-4b75-976b-6e0c8a2ae377",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406829,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4e3f8062-c8a6-4b75-976b-6e0c8a2ae377",
                        "name": "Get List View Records and Metadata API Name",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "792b7186-9bdd-4674-9ada-afb3598ff1ed",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns record data and metadata for a list view.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "LIST_VIEW_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-info/:SOBJECT_API_NAME/:LIST_VIEW_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            },
                            {
                                "key": "LIST_VIEW_API_NAME",
                                "value": "",
                                "description": "List view API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "9e077a69-1882-4744-9648-b24e2e32bbb4"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "4e72573a-fc19-4e4e-9592-0cff67b02946",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756750,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4e72573a-fc19-4e4e-9592-0cff67b02946",
                        "name": "Composite Batch",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"haltOnError\": true,\n    \"batchRequests\": [\n        {\n            \"method\": \"GET\",\n            \"url\": \"v{{version}}/query/?q=SELECT+Id,+Name+FROM+Account LIMIT 2\"\n        },\n        {\n            \"method\": \"GET\",\n            \"url\": \"v{{version}}/query/?q=SELECT+Id,+Name+FROM+Opportunity LIMIT 2\"\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Executes up to 25 subrequests in a single request. The response bodies and HTTP statuses of the subrequests in the batch are returned in a single response body. Each subrequest counts against rate limits.\nThe requests in a batch are called subrequests. All subrequests are executed in the context of the same user. Subrequests are independent, and you can\u2019t pass information between them. Subrequests execute serially in their order in the request body. When a subrequest executes successfully, it commits its data. Commits are reflected in the output of later subrequests. If a subrequest fails, commits made by previous subrequests are not rolled back. If a batch request doesn\u2019t complete within 10 minutes, the batch times out and the remaining subrequests aren\u2019t executed.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_batch.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/batch",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "76b0791a-b6f9-4d2f-83f3-d1647847e7d1"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "4ed2ce31-08d7-4178-b49f-a5a3e00fe84c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136722,
                        "folder": "64d700e9-105e-41f3-98e9-0b80d5db101b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4ed2ce31-08d7-4178-b49f-a5a3e00fe84c",
                        "name": "Get Appointment Candidates",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"startTime\": \"string\",\n\t\"endTime\": \"string\",\n\t\"workTypeGroupId\": \"string\",\n\t\"workType\": \"Work Type\",\n\t\"accountId\": \"string\",\n\t\"territoryIds\": \"string[]\",\n\t\"requiredResourceIds\": \"string[]\",\n\t\"schedulingPolicyId\": \"string\",\n\t\"allowConcurrentScheduling\": \"boolean\",\n}",
                        "descriptionFormat": null,
                        "description": "Returns a list of available service resources (appointment candidates) based on work type group and service territories.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/requests_ls_getappointmentcandidates.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/scheduling/getAppointmentCandidates",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "4f664a8a-c44f-48a4-96db-1b6b841f956e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101614,
                        "folder": "f415fc1b-6056-43e8-b182-55bb308d6ac7",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4f664a8a-c44f-48a4-96db-1b6b841f956e",
                        "name": "Feed Elements, Batch Post",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "152bcdbf-95a0-40e9-9140-2477aea701b0",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "d547a2b8-a36c-426b-b16b-8602bb08a2fc",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"inputs\": [\n        {\n            \"richInput\": {\n                \"subjectId\": \"<USER_GROUP_RECORD_ID>\",\n                \"body\": {\n                    \"messageSegments\": [\n                        {\n                            \"type\": \"Text\",\n                            \"text\": \"Post Number 1\"\n                        }\n                    ]\n                },\n                \"capabilities\": {\n                    \"files\": {\n                        \"items\": [\n                            {\n                                \"id\": \"<FILE_ID>\"\n                            }\n                        ]\n                    }\n                },\n                \"feedElementType\": \"FeedItem\"\n            }\n        },\n        {\n            \"richInput\": {\n                \"subjectId\": \"<USER_GROUP_RECORD_ID>\",\n                \"body\": {\n                    \"messageSegments\": [\n                        {\n                            \"type\": \"Text\",\n                            \"text\": \"Post Number 2\"\n                        }\n                    ]\n                },\n                \"feedElementType\": \"FeedItem\"\n            }\n        },\n        {\n            \"richInput\": {\n                \"subjectId\": \"me\",\n                \"body\": {\n                    \"messageSegments\": [\n                        {\n                            \"type\": \"Text\",\n                            \"text\": \"Post Number 3 with Inline\"\n                        },\n                        {\n                            \"type\": \"InlineImage\",\n                            \"fileId\": \"<FILE_ID>\",\n                            \"altText\": \"Test Inline\"\n                        }\n                    ]\n                },\n                \"feedElementType\": \"FeedItem\"\n            }\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Post a batch of up to 500 feed elements.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element_batch_post.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feed-elements/batch",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c9c2ac97-62a6-42e6-ab3f-64e92206a9cb"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "4f93be49-d8d1-4173-b356-ed73d0bcf97d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756962,
                        "folder": "8c8de0a1-32d2-47d5-84a6-e9157881ce6f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "4f93be49-d8d1-4173-b356-ed73d0bcf97d",
                        "name": "Abort a Job Query",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"state\":\"Aborted\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "7acaa3f2-a9e8-4254-ae5f-af4a2b309e39"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "51a04093-31ff-49b0-8cdc-abbdb4168af1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406760,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "51a04093-31ff-49b0-8cdc-abbdb4168af1",
                        "name": "Get List View Metadata per Id",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "9f95c695-700c-438c-970b-181698f7a8bf",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns list view metadata.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "LIST_VIEW_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-info/:LIST_VIEW_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "LIST_VIEW_ID",
                                "value": "",
                                "description": "List view ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4a502d5b-f0d0-4abb-a6b6-99f7239a72cc"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "51de7540-c499-4210-9e22-0ccc8eda11c5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 35269531210,
                        "folder": "dea8f9c8-72fc-40b6-be71-3fa6cd8bbfec",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "51de7540-c499-4210-9e22-0ccc8eda11c5",
                        "name": "Retrieve OpenAPI Schema",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Generate an OpenAPI 3.0 document for the sObjects REST API. This is a [Beta feature](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/openapi_beta.htm) that requires an activation step before it can be used.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "schemaId": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/async/specifications/oas3/:schemaId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "debc2ead-88bb-4a75-8ace-6feef4e34667",
                                "key": "schemaId",
                                "value": "",
                                "description": "Identifier that was returned in the original request to generate the Schema."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b27853aa-026a-41c5-b556-14cb6d33c6a2"
                        ],
                        "createdAt": "2024-02-26T14:10:56.000Z",
                        "updatedAt": "2024-02-26T14:10:56.000Z"
                    }
                },
                {
                    "model_id": "52dc2654-43db-4a07-85c1-563a9d54bcdd",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136493,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "52dc2654-43db-4a07-85c1-563a9d54bcdd",
                        "name": "Relevant Items",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Gets the current user\u2019s most relevant items. Relevant items include records for objects in the user\u2019s global search scope and also most recently used (MRU) objects.\nRelevant items include up to 50 of the most recently viewed or updated records for each object in the user\u2019s global search scope.\nNote\nThe user\u2019s global search scope includes the objects the user interacted with most in the last 30 days, including objects the user pinned from the search results page in the Salesforce Classic.\n\nThen, the resource finds more recent records for each most recently used (MRU) object until the maximum number of records, which is 2,000, is returned.\nThis resource only accesses the relevant item information. Modifying the list of relevant items is not currently supported\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_relevant_items.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/relevantItems",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "lastUpdatedId",
                                "value": "",
                                "description": "Optional. Compares the entire current list of relevant items to a previous version, if available. Specify the lastUpdatedId value returned in a previous response.",
                                "enabled": false
                            },
                            {
                                "key": "sobjects",
                                "value": "",
                                "description": "Optional. To scope the results to a particular object or set of objects, specify the name for one or more sObjects.",
                                "enabled": false
                            },
                            {
                                "key": "sobject.lastUpdatedId",
                                "value": "",
                                "description": "Optional. Compares the current list of relevant items for this particular object to a previous version, if available. Specify the lastUpdatedId value returned in a previous response.\nNote\nYou can only specify this parameter for the sObjects specified in the sobjects parameter.",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "53432e14-9059-4625-a78f-d6beb84cf7b2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136516,
                        "folder": "a18ced53-8c49-40c8-a8d6-bf3f55d8ee54",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "53432e14-9059-4625-a78f-d6beb84cf7b2",
                        "name": "Process Approvals Submit",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"actionType\":\"string\",\n\t\"contextActorId\":\"ID\",\n\t\"contextId\":\"ID\",\n\t\"comments\":\"string\",\n\t\"nextApproverIds\":\"ID[]\",\n\t\"processDefinitionNameOrId\":\"string\",\n\t\"skipEntryCriteria\":\"boolean\",\n}",
                        "descriptionFormat": null,
                        "description": "Returns a list of all approval processes. Can also be used to submit a particular record if that entity supports an approval process and one has already been defined. Records can be approved and rejected if the current user is an assigned approver. When using a POST request to do bulk approvals, the requests that succeed are committed and the requests that don\u2019t succeed send back an error.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_process_approvals.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/process/approvals",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "53b3a5a9-6940-4e85-ad47-477ec2f5cec7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32410404872,
                        "folder": "ff3ea004-70c0-4c5a-b9dd-80ac2e0184d9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "53b3a5a9-6940-4e85-ad47-477ec2f5cec7",
                        "name": "File Content",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "73bcb86c-42ef-4165-a9de-d24cdb148424",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "60ef9ff7-6523-49a4-a2c8-4a90c538f283",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns the binary content of the file, including references to external files. The content is streamed as the body of the response.\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_files_content.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "FILE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/files/:FILE_ID/content",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FILE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-09-05T09:15:42.000Z"
                    }
                },
                {
                    "model_id": "53bed7e0-8ae1-4585-b629-166a2b47e7f5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136863,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "53bed7e0-8ae1-4585-b629-166a2b47e7f5",
                        "name": "SObject Named Layouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves information about alternate named layouts for a given object.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "LAYOUT_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/describe/namedLayouts/:LAYOUT_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "LAYOUT_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "54225e09-935a-4f7f-bfbb-ab643a1aa937",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644747,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "54225e09-935a-4f7f-bfbb-ab643a1aa937",
                        "name": "Bulk Create Job",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "cfbc6120-2a20-4781-a02e-1fd352b93d1e",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "",
                                        "const contentType = pm.response.headers.get(\"Content-Type\");",
                                        "if (contentType.indexOf(\"xml\") !== -1) {",
                                        "    const jsonData = xml2Json(pm.response.text());",
                                        "    context.set(\"_jobId\", jsonData['jobInfo']['id']);    ",
                                        "}",
                                        "else if (contentType.indexOf(\"json\") !== -1) {",
                                        "    const jsonData = pm.response.json();",
                                        "    context.set(\"_jobId\", jsonData.id);",
                                        "}",
                                        "",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"operation\": \"insert\",\n    \"object\": \"Account\",\n    \"contentType\": \"CSV\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nContent-Type: application/json\ncharset: UTF-8\n//Sforce-Disable-Batch-Retry: FALSE\n//Sforce-Line-Ending: CRLF\n//Sforce-Enable-PKChunking: FALSE\n//chunkSize: 10000\n//Accept-Encoding: gzip\n//Content-Encoding: gzip\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/async/{{version}}/job",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n\nconst contentType = pm.response.headers.get(\"Content-Type\");\nif (contentType.indexOf(\"xml\") !== -1) {\n    const jsonData = xml2Json(pm.response.text());\n    context.set(\"_jobId\", jsonData['jobInfo']['id']);    \n}\nelse if (contentType.indexOf(\"json\") !== -1) {\n    const jsonData = pm.response.json();\n    context.set(\"_jobId\", jsonData.id);\n}\n\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "Sforce-Disable-Batch-Retry",
                                "value": "FALSE",
                                "enabled": false
                            },
                            {
                                "key": "Sforce-Line-Ending",
                                "value": "CRLF",
                                "enabled": false
                            },
                            {
                                "key": "Sforce-Enable-PKChunking",
                                "value": "FALSE",
                                "enabled": false
                            },
                            {
                                "key": "chunkSize",
                                "value": "10000",
                                "type": "text",
                                "enabled": false
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip",
                                "enabled": false
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "fb06c644-e1df-44a5-b05b-18e1502b22ce"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "54f860db-3eb6-4947-9bf4-cde933b4894c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101570,
                        "folder": "aecf1654-6eeb-4dac-99ee-c1074ad4dfc0",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "54f860db-3eb6-4947-9bf4-cde933b4894c",
                        "name": "Record Feed Elements",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "3d8f3f81-85ac-4fe0-a894-d7ca430b04f3",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "de6922f9-61d4-4cde-8736-525746e7532f",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns the feed elements for all the records the context user is following, or all the feed elements of the specified recordId. Use this resource to search a feed or to get the feed elements for a specific feed, including another user\u2019s feed. To use this resource to get the feed elements for a group, specify the group ID as the recordId.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resource_feeds_record.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_GROUP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feeds/record/:RECORD_GROUP_ID/feed-elements",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_GROUP_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "54c4393e-b5b6-427a-a0a7-f206ab125083"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "5523d421-a8fd-4cdf-9411-e582bbda409c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667669,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5523d421-a8fd-4cdf-9411-e582bbda409c",
                        "name": "Get Values for All Picklist Fields of a Record Type",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get metadata about a specific object. The response includes metadata describing fields, child relationships, record type, and theme.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_TYPE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/object-info/:SOBJECT_API_NAME/picklist-values/:RECORD_TYPE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API Name"
                            },
                            {
                                "key": "RECORD_TYPE_ID",
                                "value": "",
                                "description": "Record type Id. Use `012000000000000AAA` as default when there are no custom record types."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "050c5672-ad93-44fb-af3e-12c475136e02"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "55740d56-6278-4787-9da6-1403bb9dc8da",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249407061,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "55740d56-6278-4787-9da6-1403bb9dc8da",
                        "name": "Update Last Selected App",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "0dc1efd4-2587-43d1-88e7-f4e9e00fee52",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns metadata for an app, and saves an app as the last selected for a user.",
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "APP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/apps/:APP_ID?formFactor=Large",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "Large",
                                "description": "The form factor for each app that the user has access to (`Large`, `Medium` or `Small`)"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "APP_ID",
                                "value": "",
                                "description": "Application ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "af211319-2052-419c-8184-8e92e008ef0d"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "56d41d86-397d-4d66-8e8a-a7a3e78be92a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928377,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "56d41d86-397d-4d66-8e8a-a7a3e78be92a",
                        "name": "Tooling Query",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Executes a query against an object and returns data that matches the specified criteria. Tooling API exposes objects like EntityDefinition and FieldDefinition that use the external object framework. That is, they don\u2019t exist in the database but are constructed dynamically. Special query rules apply to virtual entities.\nIf the query result is too large, it\u2019s broken up into batches. The response contains the first batch of results and a query identifier. The identifier can be used in a request to retrieve the next batch.",
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "",
                                "equals": false,
                                "description": "SOQL Query",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": false,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a268c1eb-bba0-435a-8d24-1b1b1d7d34f9"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:00.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "57c2df8b-2284-4bbd-9e0f-b608ae55acdc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101134,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "57c2df8b-2284-4bbd-9e0f-b608ae55acdc",
                        "name": "Delete External Credential",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Delete an external credential.",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "DEVELOPER_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/external-credentials/:DEVELOPER_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "8373b9b5-1fde-4616-b2d8-a5e68d7b49ef",
                                "key": "DEVELOPER_NAME",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d4258215-da97-457e-84f7-acc1f39c7e4c"
                        ],
                        "createdAt": "2023-06-13T07:21:05.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z"
                    }
                },
                {
                    "model_id": "57c5f673-1e17-45b2-8e11-57b2787d4a88",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136603,
                        "folder": "46349794-c9c6-4e79-906b-2bf7dcf0ecd1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "57c5f673-1e17-45b2-8e11-57b2787d4a88",
                        "name": "Lightning Exit by Page Metrics",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Return frequency metrics about the standard pages within which users switched from Lightning Experience to Salesforce Classic.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_exitbypagemetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/LightningExitByPageMetrics",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "58a63cf4-b2d3-4ce9-b278-21a406a30bed",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137038,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "58a63cf4-b2d3-4ce9-b278-21a406a30bed",
                        "name": "Compact Layouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of compact layouts for multiple objects. This resource is available in REST API version 31.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/compactLayouts?q=Account,Contact",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Account,Contact",
                                "equals": true,
                                "description": "object list",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "58c7bdeb-7c2f-419c-bff6-7f8e4d907a34",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101994,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "58c7bdeb-7c2f-419c-bff6-7f8e4d907a34",
                        "name": "Group Invites",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "cd6d27a5-c887-4c9e-866a-7c0a14108945",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "037c4a09-3c29-4cfa-b4c5-05c734ea336b",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n   \"invitees\" : {\n      \"emails\": [\n         \"testemail1@sfdcpostman.com\",\n         \"testemail2@sfdcpostman.com\"\n      ]\n   },\n   \"message\" : \"Join this group to participate in the discussion about your favorite feature.\"\n}",
                        "descriptionFormat": null,
                        "description": "Invite internal and external users to join a group.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_groups_invites.htm#connect_resources_groups_invites",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {
                            "GROUP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/groups/group/:GROUP_ID/invite",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "GROUP_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "content-type": true
                            },
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "422b5709-54fc-4f49-a23c-231e3f4e33b4"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "58d83b5e-4017-467d-8a73-cf74e340bcdc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426530,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "58d83b5e-4017-467d-8a73-cf74e340bcdc",
                        "name": "List channel members",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q=SELECT Id, DeveloperName, EventChannel, FilterExpression, SelectedEntity FROM PlatformEventChannelMember",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT Id, DeveloperName, EventChannel, FilterExpression, SelectedEntity FROM PlatformEventChannelMember"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f3f41003-e2a6-45ea-8f69-a6226358834a"
                        ],
                        "createdAt": "2023-06-15T17:45:06.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "58d881fd-451e-4e24-8ef0-1021cd769e1c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136887,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "58d881fd-451e-4e24-8ef0-1021cd769e1c",
                        "name": "SObject Rows Update",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"field API name\": \"value\"\n}",
                        "descriptionFormat": null,
                        "description": "Accesses records based on the specified object ID. Retrieves, updates, or deletes records. This resource can also be used to retrieve field values. Use the GET method to retrieve records or fields, the DELETE method to delete records, and the PATCH method to update records.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "590bc72a-3f47-45bf-a569-4df0280e875f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100898,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "590bc72a-3f47-45bf-a569-4df0280e875f",
                        "name": "Update Named Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"masterLabel\": \"SamplePrivateLabel\",\n   \"type\": \"SecuredEndpoint\",\n   \"calloutUrl\": \"https://api.example.com\",\n   \"externalCredentials\": [\n      {\n         \"developerName\": \"SampleExternalCredential\"\n      }\n   ],\n   \"customHeaders\": [\n      {\n         \"headerName\": \"SampleHeader\",\n         \"headerValue\": \"SampleValue\",\n         \"sequenceNumber\": 1\n      }\n   ],\n   \"calloutOptions\": {\n      \"allowMergeFieldsInBody\": false,\n      \"allowMergeFieldsInHeader\": true,\n      \"generateAuthorizationHeader\": true\n   }\n}",
                        "descriptionFormat": null,
                        "description": "Update a named credential.",
                        "variables": null,
                        "headers": "",
                        "method": "PUT",
                        "pathVariables": {
                            "DEVELOPER_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/named-credential-setup/:DEVELOPER_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "c2f2a17e-6056-453b-a3bb-dc67831bc528",
                                "key": "DEVELOPER_NAME",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "7710a522-558a-40a6-a3ea-525be59f77c1"
                        ],
                        "createdAt": "2023-06-13T07:21:05.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "59a605f0-5fb4-478d-8213-9f5055902f93",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426497,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "59a605f0-5fb4-478d-8213-9f5055902f93",
                        "name": "Get event channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_ID": "0YL4H0000004C93WAE"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel/:PLATFORM_EVENT_CHANNEL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "9e431e2a-eff8-4eca-b825-c1a63d70b5ad",
                                "key": "PLATFORM_EVENT_CHANNEL_ID",
                                "value": "0YL4H0000004C93WAE"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a1b2f175-5461-4f00-8449-6500d273df42"
                        ],
                        "createdAt": "2023-06-15T17:45:06.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "5bdd2eae-e103-4a53-87e6-e8cf049155c9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101859,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5bdd2eae-e103-4a53-87e6-e8cf049155c9",
                        "name": "List of Groups",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "2950ba8d-f28b-4ac8-8c2b-f4702695db7a",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "f976136d-f6ef-4acb-b959-e40d3c1bf9f8",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "A list of all the groups in the organization. Get information about groups or create a group.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_groups_ListOfGroups.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/groups",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "af12dfcd-d457-473e-8208-c2a87b78ca43"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "5cab44a8-b960-4dc8-b694-46daad41b241",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405149,
                        "folder": "ac3debde-ae44-441c-91a8-967c86f69885",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5cab44a8-b960-4dc8-b694-46daad41b241",
                        "name": "Get Active Theme",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a Salesforce org\u2019s active theme. A theme uses colors, images, and banners to change the overall appearance of Salesforce. Administrators can define themes and switch themes to provide a different look. The User Interface API response matches the Admin\u2019s selection.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/themes/active",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "dcefe00a-eeb7-470f-ae0f-eaf296f465c9"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z"
                    }
                },
                {
                    "model_id": "5cafda99-74c5-4872-b99f-079f11698631",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094803001,
                        "folder": "e6191f02-7467-4187-b198-fde6f2cc9fcf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5cafda99-74c5-4872-b99f-079f11698631",
                        "name": "Get event relay feedback",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "EVENT_RELAY_FEEDBACK_ID": "7k4RM000000008AYAQ"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/EventRelayFeedback/:EVENT_RELAY_FEEDBACK_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "a3c20bc3-f675-4b72-a3f0-55f6dfb11702",
                                "key": "EVENT_RELAY_FEEDBACK_ID",
                                "value": "7k4RM000000008AYAQ"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "5d338182-e2f6-4e97-8a46-f4575e3cef82",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426570,
                        "folder": "24361cde-dc20-400d-b30f-a3307639a44b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5d338182-e2f6-4e97-8a46-f4575e3cef82",
                        "name": "Platform Event Schema by Event Name",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Set, reset, or get information about a user password. This resource is available in REST API version 24.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "EVENT_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:EVENT_NAME/eventSchema",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "payloadFormat",
                                "value": "",
                                "description": "(Optional query parameter. Available in API version 43.0 and later.) The format of the returned event schema. This parameter can take one of the following values.\nEXPANDED\u2014The JSON representation of the event schema, which is the default format when payloadFormat is not specified in API version 43.0 and later.\nCOMPACT\u2014A format that adheres to the open-source Apache Avro specification for the record complex type (see Apache Avro Format). Subscribers use the compact schema format to deserialize compact events received in binary form.",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "EVENT_NAME",
                                "value": "",
                                "description": "API Name of the event"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b1e3ec90-ef4c-4782-87e2-fc966cec0904"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z"
                    }
                },
                {
                    "model_id": "5de0bab7-21e1-49e0-a1dd-44b8f020106a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136686,
                        "folder": "dad9f4a8-ba9f-4893-8f64-8a787630735e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5de0bab7-21e1-49e0-a1dd-44b8f020106a",
                        "name": "List View Results",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns detailed information about a list view, including the ID, the columns, and the SOQL query.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "LIST_VIEW_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/listviews/:LIST_VIEW_ID/results",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "limit",
                                "value": "",
                                "description": "The maximum number of records to return, between 1-2000. The default value is 25.",
                                "enabled": false
                            },
                            {
                                "key": "offset",
                                "value": "",
                                "description": "The first record to return. Use this parameter to paginate the results. The default value is 1.",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "LIST_VIEW_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "5defd788-f74b-4110-b1f3-85c3feff33aa",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136906,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5defd788-f74b-4110-b1f3-85c3feff33aa",
                        "name": "SObject Rows by External ID",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Creates new records or updates existing records (upserts records) based on the value of a specified external ID field.\n\nIf the specified value doesn't exist, a new record is created.\nIf a record does exist with that value, the field values specified in the request body are updated.\nIf the value is not unique, the REST API returns a 300 response with the list of matching records.\n\nHEAD, GET, PATCH, DELETE, POST",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "FIELD_NAME": "",
                            "FIELD_VALUE": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:FIELD_NAME/:FIELD_VALUE",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "FIELD_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "FIELD_VALUE",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "5e7bb6ce-2a16-444f-9703-4a54fba4c5b6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32400018815,
                        "folder": "1b966335-7622-4e07-a540-c7f79d72a369",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5e7bb6ce-2a16-444f-9703-4a54fba4c5b6",
                        "name": "Integration Procedure Invocation Using POST",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "NAMESPACE": "",
                            "TYPE_SUBTYPE": ""
                        },
                        "url": "{{_endpoint}}/services/apexrest/:NAMESPACE/v1/integrationprocedure/:TYPE_SUBTYPE/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "NAMESPACE",
                                "value": "",
                                "description": "The namespace is `omnistudio`, `vlocity_ins`, `vlocity_cmt`, or `vlocity_ps`"
                            },
                            {
                                "key": "TYPE_SUBTYPE",
                                "value": "",
                                "description": "Type and SubType of the Integration Procedure separated by an underscore."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-09-04T15:58:45.000Z",
                        "updatedAt": "2023-09-04T15:59:11.000Z"
                    }
                },
                {
                    "model_id": "5e814322-4527-46c8-98db-be6a7da42c75",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644823,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "5e814322-4527-46c8-98db-be6a7da42c75",
                        "name": "Bulk Check Batch Status",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nAccept-Encoding: gzip\nContent-Encoding: gzip\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/async/{{version}}/job/{{_jobId}}/batch",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip"
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "68b81627-a919-4f95-b278-90717cc619dd"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z"
                    }
                },
                {
                    "model_id": "60b845f1-ef76-4a76-ada5-29a4f0b70955",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249407035,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "60b845f1-ef76-4a76-ada5-29a4f0b70955",
                        "name": "Get an App",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "3793ca7d-235b-4cfd-85b4-5ba500fd39ee",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get metadata about an app.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "APP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/apps/:APP_ID?formFactor=Small",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "Small",
                                "description": "The form factor for each app that the user has access to (`Large`, `Medium` or `Small`)"
                            },
                            {
                                "key": "userCustomizations",
                                "value": "true",
                                "description": "If true, gets custom and standard navigation tabs. If false, gets only standard navigation tabs.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "APP_ID",
                                "value": "",
                                "description": "Application ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4b7df340-9fc6-438b-80d5-e409fc8f5b29"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "61e425cb-447e-41c7-b12c-f1e7864bd7d5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136758,
                        "folder": "c1964922-356a-496f-9ea6-e3c036d17fbe",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "61e425cb-447e-41c7-b12c-f1e7864bd7d5",
                        "name": "Data Category Detail",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get data category details and the child categories by a given category.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "GROUP": "",
                            "CATEGORY": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/support/dataCategoryGroups/:GROUP/dataCategories/:CATEGORY",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "sObjectName",
                                "value": "",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "GROUP",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "CATEGORY",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "6200ca13-bc0c-4a45-834c-c78d25815e52",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100682,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6200ca13-bc0c-4a45-834c-c78d25815e52",
                        "name": "List Named Credentials",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a list of named credentials in the org.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/named-credential-setup",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b35f7237-233b-4359-8265-6e3aeb96005f"
                        ],
                        "createdAt": "2023-06-13T07:21:04.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "63208814-bcc7-4728-bc1e-6d3bae30972b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920455,
                        "folder": "e82abac9-16b2-4418-8c0e-9f3b9410514d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "63208814-bcc7-4728-bc1e-6d3bae30972b",
                        "name": "Request Product Information (Bundled Components)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n  \"productContexts\": [\n    {\n      \"product2Id\": \"{{WorkAnywhereBundleProduct}}\"\n    }\n  ],\n  \"retrievalType\": \"IncludeChildComponents\"\n}",
                        "descriptionFormat": null,
                        "description": "Request information for a single bundle product and all it's bundle components. See [Request Product Information](https://developer.salesforce.com/docs/revenue/subscription-management/references/products?meta=Request+Product+Information).",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/catalog-products/actions/get-products",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "635d88ca-a50f-4099-bcf9-e83c33533bf4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879350729,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "635d88ca-a50f-4099-bcf9-e83c33533bf4",
                        "name": "Quote Term Reader API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"context\": {\n        \"templateId\": \"a0v5C000000jTgr\",\n        \"language\": \"es\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": "The Read Product API takes the request\u2019s product ID, pricebook ID, and currency code and returns a Product model. The Product model loads the product from your catalog when the user requests it.\nAvailable in: Salesforce CPQ Summer \u201916 and later\nSpecial Access Rules: Users must have read access to the product2 object.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_read_product.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.QuoteTermAPI.Load&uid=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.QuoteTermAPI.Load",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2020-12-09T16:14:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "641481d6-81e0-4be5-ae46-169592db6460",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644448,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "641481d6-81e0-4be5-ae46-169592db6460",
                        "name": "Web Server Flow 2",
                        "dataMode": "params",
                        "data": [
                            {
                                "key": "code",
                                "value": "",
                                "type": "text"
                            },
                            {
                                "key": "grant_type",
                                "value": "authorization_code",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "client_secret",
                                "value": "{{clientSecret}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            },
                            {
                                "key": "format",
                                "value": "json",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "e015027b-5cda-4842-b259-7afe5da6c113",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "const id = jsonData.id.split('/');",
                                        "",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_accessToken\", jsonData.access_token);",
                                        "context.set(\"_refreshToken\", jsonData.refresh_token);",
                                        "context.set(\"_endpoint\", jsonData.instance_url);",
                                        "context.set(\"_userId\", id.pop());",
                                        "context.set(\"_orgId\", id.pop());"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\nconst id = jsonData.id.split('/');\n\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_accessToken\", jsonData.access_token);\ncontext.set(\"_refreshToken\", jsonData.refresh_token);\ncontext.set(\"_endpoint\", jsonData.instance_url);\ncontext.set(\"_userId\", id.pop());\ncontext.set(\"_orgId\", id.pop());",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d202f6bc-3272-4c93-a913-b17f5610403c"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:22.000Z",
                        "dataOptions": {
                            "params": {}
                        }
                    }
                },
                {
                    "model_id": "64a703b2-e5fe-47d6-98ca-e0071339fdcd",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406640,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "64a703b2-e5fe-47d6-98ca-e0071339fdcd",
                        "name": "Delete a Favorite",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "ac2aa7e3-94d9-424c-af05-30c1bf04ef81",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get a favorite.",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "FAVORITE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites/:FAVORITE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FAVORITE_ID",
                                "value": "",
                                "description": "The ID of a favorite"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a1e789c9-2b34-4fb6-b072-982541daf05d"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "656eb23e-0cef-42bd-97f4-004701e61c7a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928497,
                        "folder": "d8d52cc2-f78c-4a2e-90cd-8338dc74cf8d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "656eb23e-0cef-42bd-97f4-004701e61c7a",
                        "name": "Get Sandbox Status",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Lists all sandboxes.",
                        "variables": null,
                        "headers": "// Content-Type: application/json",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q=SELECT SandboxName, Status, StartDate FROM SandboxProcess WHERE SandboxInfoId='<SANDBOX_INFO_ID>' ORDER BY StartDate DESC LIMIT 200",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT SandboxName, Status, StartDate FROM SandboxProcess WHERE SandboxInfoId='<SANDBOX_INFO_ID>' ORDER BY StartDate DESC LIMIT 200",
                                "description": "SOQL Query"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0fc4cc2e-2d0b-4fc4-826c-b9e0664825c8"
                        ],
                        "createdAt": "2024-01-02T11:32:00.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "66db3a33-8c5b-4192-b8e1-d8888ed9d175",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136441,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "66db3a33-8c5b-4192-b8e1-d8888ed9d175",
                        "name": "Search for Records Suggested by Autocomplete and Instant Results",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns a list of suggested records whose names match the user\u2019s search string. The suggestions resource provides autocomplete results and instant results for users to navigate directly to likely relevant records, before performing a full search.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_suggest_records.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/search/suggestions?q&sobject",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "type",
                                "value": "",
                                "description": "Required when the sobject value is feedItem. Including this parameter for all other sobject values doesn\u2019t affect the query. Specifies that the type of Feed is questions. Valid value: question.",
                                "enabled": false
                            },
                            {
                                "key": "fields",
                                "value": "",
                                "description": "Optional. Used for creating lookup queries. Specify multiple fields using a comma-separated list. Specifies which lookup fields to be returned in the response.",
                                "enabled": false
                            },
                            {
                                "key": "dynamicFields",
                                "value": "",
                                "description": "Optional. Available in API version 48.0 and later. Used to return additional dynamic fields. Specify multiple options using a comma-separated list. For example, if dynamicFields=secondaryField then each suggested record in the results contains an additional field besides Id and Name (or Title) based on the next eligible field in the search layout.",
                                "enabled": false
                            },
                            {
                                "key": "groupId",
                                "value": "",
                                "description": "Optional. Specifies one or more unique identifiers of one or more groups that the question to return was posted to. Specify multiple groups using a comma-separated list. This parameter is only applicable when the parameter type equals question. Don\u2019t use with the userId.",
                                "enabled": false
                            },
                            {
                                "key": "ignoreUnsupportedSObjects",
                                "value": "",
                                "description": "Optional. Specifies what to do if unsupported objects are included in the request. If false and an unsupported object is included, an error is returned. If true and an unsupported object is included, the object is ignored and no error is returned. See the Unsupported Objects section for reference. The default is false.",
                                "enabled": false
                            },
                            {
                                "key": "limit",
                                "value": "",
                                "description": "Optional. Specifies the maximum number of suggested records to return. If a limit isn\u2019t specified, 5 records are returned by default. If there are more suggested records than the limit specified, the response body\u2019s hasMoreResults property is true.",
                                "enabled": false
                            },
                            {
                                "key": "networkId",
                                "value": "",
                                "description": "Optional. Specifies one or more unique identifiers for the community(ies) that the question to return is associated to. Specify multiple communities using a comma-separated list. This parameter is only applicable when the parameter type equals question or parameter sobject equals user.",
                                "enabled": false
                            },
                            {
                                "key": "topicId",
                                "value": "",
                                "description": "Optional. Specifies the unique identifier of the single topic that the question to return was tagged as. This parameter is only applicable when the parameter type equals question.",
                                "enabled": false
                            },
                            {
                                "key": "userId",
                                "value": "",
                                "description": "Optional. Specifies one or more unique identifiers of one or more users who authored the question to return. Specify multiple users using a comma-separated list. This parameter is only applicable when the parameter type equals question. Don\u2019t use with the groupId.",
                                "enabled": false
                            },
                            {
                                "key": "useSearchScope",
                                "value": "",
                                "description": "Optional. Available in API version 40.0 and later. The default value is false. If false, the objects specified in the request are used to suggest records. If true, in addition to the objects specified in the request, the user's search scope is used to suggest records. The search scope is the list of objects a user uses most frequently.\nIf the request doesn\u2019t specify an object, use useSearchScope=true.\nIf useSearchScope=true and the user's search scope is empty, the default search scope is used to suggest records.\nOnly the first 10 objects are used to suggest records.\nObjects specified in the sobject parameter are prioritized over objects in the user's search scope.\nValues for the ignoreUnsupportedSObjects parameter aren\u2019t applied to the objects in the search scope.",
                                "enabled": false
                            },
                            {
                                "key": "where",
                                "value": "",
                                "description": "Optional. A filter that follows the same syntax as the SOQL WHERE clause. URLs encode the expression.\nUse the clause for an object, or globally for all compatible objects. An example of an object-specific clause is: account.where=name%20LIKE%20%27Smith%25%27. An example of a global clause is: where=name%20LIKE%20%27Smith%25%27. The parameter must be lower case. Any object-specific where clauses override the global where clause. You can\u2019t use this parameter for the Question object.",
                                "enabled": false
                            },
                            {
                                "key": "q",
                                "value": "",
                                "equals": false
                            },
                            {
                                "key": "sobject",
                                "value": "",
                                "equals": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "6709d450-9882-43e4-b07f-7e172c41b551",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101578,
                        "folder": "f415fc1b-6056-43e8-b182-55bb308d6ac7",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6709d450-9882-43e4-b07f-7e172c41b551",
                        "name": "Feed Elements, Post and Search",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "19099510-e121-4b86-8442-0ba340a0fff7",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "54558f8e-b91e-42e3-8d45-b05b03ac639f",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Feed item and comment bodies have a 10,000 character limit. Because this limit can change, we recommend that clients make a describeSObjects() call on the FeedItem or FeedComment object. To determine the maximum number of allowed characters, look at the length of the Body or CommentBody field.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element.htm",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feed-elements?feedElementType=FeedItem&subjectId=<USER_GROUP_RECORD_ID>&text=New Feed Item",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "feedElementType",
                                "value": "FeedItem",
                                "equals": true,
                                "description": "Feed elements are the top-level objects that a feed contains. The feed element type describes the characteristics of that feed element. One of these values:\nBundle\u2014A container of feed elements. A bundle also has a body made up of message segments that can always be gracefully degraded to text-only values.\nFeedItem\u2014A feed item has a single parent and is scoped to one community or across all communities. A feed item can have capabilities such as bookmarks, canvas, content, comment, link, poll. Feed items have a body made up of message segments that can always be gracefully degraded to text-only values.\nRecommendation\u2014A recommendation is a feed element with a recommendations capability. A recommendation suggests records to follow, groups to join, or applications that are helpful to the context user.",
                                "enabled": true
                            },
                            {
                                "key": "subjectId",
                                "value": "<USER_GROUP_RECORD_ID>",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "text",
                                "value": "New Feed Item",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "content-type": true
                            },
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5a08bd22-bb99-4415-9ea9-2945b82191bc"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z"
                    }
                },
                {
                    "model_id": "67e14a49-7766-44dd-ac2c-9415d156715f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101820,
                        "folder": "c56a8e29-0e41-44bf-8d93-c53ba2f85caa",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "67e14a49-7766-44dd-ac2c-9415d156715f",
                        "name": "Comment - Edit",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"body\": {\n        \"messageSegments\": [\n            {\n                \"type\": \"Text\",\n                \"text\": \"Editing a comment\"\n            }\n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Get information about, edit, or delete a comment.\nTo post a comment, use Feed Elements Capability, Comments Items.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_comments_specific.htm#connect_resources_comments_specific",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "PATCH",
                        "pathVariables": {
                            "COMMENT_ID": "0D7..."
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/comments/:COMMENT_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "COMMENT_ID",
                                "value": "0D7...",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c999a455-da87-4d6d-b0a8-ee8f7e779cfb"
                        ],
                        "createdAt": "2023-06-15T17:45:03.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "684df392-aebc-4ff8-9ff7-30f6e4e88b74",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 25720767599,
                        "folder": "405271ed-e8df-47fe-a5ff-b5e753ab15c1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "684df392-aebc-4ff8-9ff7-30f6e4e88b74",
                        "name": "Launch Flow",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"inputs\": [\n        {}\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Launches an Autolaunched Flow with the supplied input parameters.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {
                            "flowApiName": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/custom/flow/:flowApiName",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "id": "de7d7279-5b11-4c31-8b51-4b87082cbd4a",
                                "key": "flowApiName",
                                "value": "",
                                "description": "Flow API Name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2022-07-05T12:19:05.000Z",
                        "updatedAt": "2022-07-05T12:19:05.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "68751336-b446-4df1-b608-800154da58c1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920840,
                        "folder": "131daa8d-24fe-44e6-a11f-7aa9dd1699e5",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "68751336-b446-4df1-b608-800154da58c1",
                        "name": "Initiate Amend Quantity",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n  \"assetIds\": {\n    \"assetIdArray\": [\n      \"{{assetID}}\"\n    ]\n  },\n  \"startDate\": \"2023-08-18T00:00:00\",\n  \"quantityChange\": 5,\n  \"amendmentOutputType\": \"order\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/asset-management/assets/collection/actions/initiate-amend-quantity",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:03.000Z",
                        "updatedAt": "2023-08-09T08:13:03.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "68a2e511-c2b3-4041-9d9f-edfedbd1f20f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101274,
                        "folder": "8bc6d60f-982c-4bfd-826a-4f120aae3eed",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "68a2e511-c2b3-4041-9d9f-edfedbd1f20f",
                        "name": "Delete Subscription",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "d4c2ac40-ef4e-4459-8c62-dac8bee60ba3",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "98b8d123-f45c-4514-b8e5-fee44c55b022",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Information about the specified subscription. Also used to delete a subscription, for example, to unfollow a record or a topic.\nA subscription ID is returned as part of the response body for follower and following resources, for example, /records/recordId/followers. In addition, subscriptions IDs are also returned in many summary response bodies, such as group summary or user summary.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_subscriptions.htm",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "SUBSCRIPTION_ID": "0E8..."
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/subscriptions/:SUBSCRIPTION_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SUBSCRIPTION_ID",
                                "value": "0E8...",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6f3d5092-5048-4757-a171-e1acbcbdb96b"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z"
                    }
                },
                {
                    "model_id": "69630ff2-7e8a-4f89-95aa-be14733d5f28",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531352,
                        "folder": "7e43b99d-493a-4173-92d6-56f0d34c2bba",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "69630ff2-7e8a-4f89-95aa-be14733d5f28",
                        "name": "Expression Set Invocation",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n  \"inputs\": [{}],\n  \"options\": {}\n}",
                        "descriptionFormat": null,
                        "description": "[https://developer.salesforce.com/docs/atlas.en-us.246.0.industries_reference.meta/industries_reference/connect_resources_bre_expression_set.htm](https://developer.salesforce.com/docs/atlas.en-us.246.0.industries_reference.meta/industries_reference/connect_resources_bre_expression_set.htm)\n\n**WATCH OUT**: path **expressionSet** has no dash [gjeffcock@salesforce.com](https://gjeffcock@salesforce.com)\n\n# Expression Set Invocation (POST)\n\nInvokes expression sets in Business Rule Engine.Resource\n\n```\n/connect/business-rules/expressionSet/${expressionSetName}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/vXX.X/connect\n/business-rules/expressionSet/${expressionSetName}\n\n ```\n\nAvailable version\n\n55.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nRequest body for POST\n\nJSON example 1\n\n```\n{\n  \"inputs\": [\n    {\n      \"age\": \"25\",\n      \"state\": \"CA\"\n      \"PatientId\":\"001xx000003GYjnAAG\"\n    }\n   \n  ],\n  \"options\": {\n    \"effectiveDate\": \"2022-12-03T10:15:30Z\",\n    \"useDatesOnly\": \"true\"\n  }\n}\n\n ```\n\nJSON example 2\n\n```\n{\n  \"inputs\": [\n    {\n      \"age\": \"25\",\n      \"state\": \"CA\"\n      \"PatientId\":\"001xx000003GYjnAAG\"\n      \"__actionContextCode\":\"001xx000003GYjnAAG\"    }\n   \n  ],\n  \"options\": {\n    \"effectiveDate\": \"2022-12-03T10:15:30Z\",\n    \"useDatesOnly\": \"true\"\n  }\n}\n\n ```\n\nNote\n\nYou can use more than one\u00a0actionContextCode\u00a0for multiple sets of inputs, passed in a single API call.\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| inputs | Map\\[\\] | List of inputs passed to an expression set. An input may contain multiple variables.<br><br>Note<br><br>If the expression set uses a field alias as a variable, append Id to the object alias to which the field alias belongs, and pass the ID of the source object linked to the object alias. | Required | 55.0 |\n| options | [Expression Set Options Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_options.htm) | The options for executing an expression set. | Optional | 55.0 |\n\nResponse body for POST\n\n[Business Rules Result](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_business_rules_result.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "expressionSetAPIName": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/expressionset/:expressionSetAPIName",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "49caf044-4d5b-48ef-8f80-8f7e1a94b316",
                                "key": "expressionSetAPIName",
                                "value": "",
                                "description": "The API name of an expression set is unique within your Salesforce instance."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "3793d477-44bd-4ed3-af8f-9a5da26ac9f0",
                            "fa44e62d-2077-45a3-a3a6-ca9ec6a7fae5",
                            "0964972c-2d72-4052-8fb6-72750e1e6a8a"
                        ],
                        "createdAt": "2023-09-20T11:56:50.000Z",
                        "updatedAt": "2023-09-20T11:56:53.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "6a928dcc-4e89-4263-8011-97ce3989c7d4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802888,
                        "folder": "5defa1ba-7991-433f-8270-e798f19a2ea6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6a928dcc-4e89-4263-8011-97ce3989c7d4",
                        "name": "Update named credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"MyNamedCredential\",\n    \"Metadata\": {\n        \"label\": \"My Named Credential\",\n        \"endpoint\" : \"arn:aws:AWS_REGION:AWS_ACCOUNT_ID\",\n        \"principalType\" : \"Anonymous\",\n        \"protocol\": \"NoAuthentication\" \n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "NAMED_CREDENTIAL_ID": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/NamedCredential/:NAMED_CREDENTIAL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "80ec6c3a-e7a1-47f5-b750-a0f7af37adce",
                                "key": "NAMED_CREDENTIAL_ID",
                                "value": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "6ae500f1-f1ae-4d17-9ffa-8962cce69ab9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136700,
                        "folder": "64d700e9-105e-41f3-98e9-0b80d5db101b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6ae500f1-f1ae-4d17-9ffa-8962cce69ab9",
                        "name": "Scheduling",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Return frequency metrics about the standard pages within which users switched from Lightning Experience to Salesforce Classic.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_exitbypagemetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/scheduling",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "6af17534-0638-4063-ac83-7c4f4eac66c5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802480,
                        "folder": "0c12ce56-9808-412b-8bff-4bd321828392",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6af17534-0638-4063-ac83-7c4f4eac66c5",
                        "name": "Publish multiple events with SOAP call",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:ns2=\"urn:partner.soap.sforce.com\">\n    <SOAP-ENV:Header>\n        <ns2:SessionHeader>\n            <ns2:sessionId>{{_accessToken}}</ns2:sessionId>\n        </ns2:SessionHeader>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <ns2:create>\n            <ns2:sObjects>\n                <ns1:type>Carbon_Comparison__e</ns1:type>\n                <Annual_Mileage__c>12000</Annual_Mileage__c>\n                <Current_Vehicle__c>Fast car 1</Current_Vehicle__c>\n                <Model_Year__c>2019</Model_Year__c>\n            </ns2:sObjects>\n            <ns2:sObjects>\n                <ns1:type>Carbon_Comparison__e</ns1:type>\n                <Annual_Mileage__c>12000</Annual_Mileage__c>\n                <Current_Vehicle__c>Fast car 2</Current_Vehicle__c>\n                <Model_Year__c>2019</Model_Year__c>\n            </ns2:sObjects>\n        </ns2:create>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: text/xml\ncharset: UTF-8\nSOAPAction: create\nAccept: text/xml",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/Soap/u/{{version}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "text/xml"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "create"
                            },
                            {
                                "key": "Accept",
                                "value": "text/xml"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:08.000Z",
                        "updatedAt": "2023-06-15T17:45:08.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "xml"
                            }
                        }
                    }
                },
                {
                    "model_id": "6b28cf09-c9b6-46ca-9b7b-c9b61fa6b4f0",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136557,
                        "folder": "46349794-c9c6-4e79-906b-2bf7dcf0ecd1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6b28cf09-c9b6-46ca-9b7b-c9b61fa6b4f0",
                        "name": "Lightning Usage by Browser",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Return Lightning Experience usage results grouped by browser instance.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_usagebybrowsermetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/LightningUsageByBrowserMetrics",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "6b5019b5-c2df-4808-9278-4bd84cf2bc47",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918963,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6b5019b5-c2df-4808-9278-4bd84cf2bc47",
                        "name": "Get Default Tax Treatment",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"defaultTaxTreatment\", jsonData.records[0].Id);"
                                    ],
                                    "type": "text/javascript",
                                    "id": "dc73bc0e-52d1-44da-953a-87be6ba89236"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Id, Name from TaxTreatment Where name='No Tax Treatment'",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"defaultTaxTreatment\", jsonData.records[0].Id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Id, Name from TaxTreatment Where name='No Tax Treatment'"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "6b540029-cb02-467a-be8a-66247dc2db52",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317957,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6b540029-cb02-467a-be8a-66247dc2db52",
                        "name": "Get User Info",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This requests uses an access token to get user information from Salesforce using the standard `/userinfo` endpoint.",
                        "variables": null,
                        "headers": "Authorization: Bearer <Token>\nContent-Type: application/json",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/userinfo",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <Token>",
                                "description": "Replace <token> with your access token"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:18.000Z"
                    }
                },
                {
                    "model_id": "6b6a9a72-ef5e-43f8-810c-9ad8785fb81e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756983,
                        "folder": "8c8de0a1-32d2-47d5-84a6-e9157881ce6f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6b6a9a72-ef5e-43f8-810c-9ad8785fb81e",
                        "name": "Delete Job Query",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "DELETE",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "480a9929-c4cd-4bb1-9f30-c834a0630e63"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "6b77824d-aa9f-4957-8d95-11e0d865a34b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928475,
                        "folder": "d8d52cc2-f78c-4a2e-90cd-8338dc74cf8d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6b77824d-aa9f-4957-8d95-11e0d865a34b",
                        "name": "Create/Clone Sandbox",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"SandboxName\": \"devSandbox\",\n    \"LicenseType\": \"DEVELOPER\",\n    \"TemplateId\": null,\n    \"HistoryDays\": 0,\n    \"CopyChatter\": false,\n    \"AutoActivate\": false,\n    \"ApexClassId\": null,\n    \"Description\": \"My new fresh sandbox\",\n    \"SourceId\": null\n}",
                        "descriptionFormat": null,
                        "description": "Creates or clones a sandbox. If you wish to clone, fill the SourceId body field with the org Id of the source sandbox.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/SandboxInfo",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "3c85da31-874c-47b5-93b5-92a236ba2817"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "6b8001de-f41c-455b-96e3-338863a8e2e4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644545,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6b8001de-f41c-455b-96e3-338863a8e2e4",
                        "name": "Device Flow 2",
                        "dataMode": "params",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "device",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "format",
                                "value": "json",
                                "type": "text"
                            },
                            {
                                "key": "code",
                                "value": "{{_deviceCode}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "e015027b-5cda-4842-b259-7afe5da6c113",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_refreshToken\", jsonData.refresh_token);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_refreshToken\", jsonData.refresh_token);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a6f46151-208f-4ce9-a941-779a2b8aef3a"
                        ],
                        "createdAt": "2023-04-20T07:50:22.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "params": null
                        }
                    }
                },
                {
                    "model_id": "6d3a4293-8d80-4b53-a978-011614e2b195",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136991,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6d3a4293-8d80-4b53-a978-011614e2b195",
                        "name": "SObject Rich Text Image Retrieve",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves the specified image data from a specific rich text area field in a given record.\ncontentReferenceId\tThe reference ID that uniquely identifies an image within a rich text area field.\nYou can obtain the reference by retrieving information for the object. The description will show the contents of the rich text area field",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": "",
                            "FIELD_NAME": "",
                            "CONTENT_REFERENCE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:RECORD_ID/richTextImageFields/:FIELD_NAME/:CONTENT_REFERENCE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "FIELD_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "CONTENT_REFERENCE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "6d96af1b-a604-4889-92e4-9cc0b4d55861",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101945,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6d96af1b-a604-4889-92e4-9cc0b4d55861",
                        "name": "List of Groups - POST",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "5cb67961-0ae0-47ee-a756-3f33bd2e2ac2",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "952f5e9e-7831-4878-a94f-42255b82cf63",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "A list of all the groups in the organization. Get information about groups or create a group.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_groups_ListOfGroups.htm",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/groups?name=New Chatter Group  (Private Access)&visibility=PrivateAccess&description=Created via API&information=Private Information&isArchived=false&isAutoArchiveDisabled=false&isBroadcast=false&canHaveChatterGuests\t=true",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "name",
                                "value": "New Chatter Group  (Private Access)",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "visibility",
                                "value": "PrivateAccess",
                                "equals": true,
                                "description": "PrivateAccess\u2014Only members of the group can see posts to this group.\nPublicAccess\u2014All users within the community can see posts to this group.\nUnlisted\u2014Reserved for future use.",
                                "enabled": true
                            },
                            {
                                "key": "description",
                                "value": "Created via API",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "information",
                                "value": "Private Information",
                                "equals": true,
                                "description": "If the group is private, the \u201cInformation\u201d section is visible only to members.",
                                "enabled": true
                            },
                            {
                                "key": "isArchived",
                                "value": "false",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "isAutoArchiveDisabled",
                                "value": "false",
                                "equals": true,
                                "description": "true if automatic archiving is turned off for the group, false otherwise. Defaults to false. If true, if there are no posts or comments for 90 days the group is archived.",
                                "enabled": true
                            },
                            {
                                "key": "isBroadcast",
                                "value": "false",
                                "equals": true,
                                "description": "true if only group owners and managers can create posts in the group, false otherwise.",
                                "enabled": true
                            },
                            {
                                "key": "canHaveChatterGuests\t",
                                "value": "true",
                                "equals": true,
                                "description": "true if this group allows Chatter customers, false otherwise. After this property is set to true, it cannot be set to false.",
                                "enabled": true
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d314cdc1-80a4-4e64-a719-40a91105e3ac"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "6daba55c-945a-4b36-8fef-b4dfe751a505",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756695,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6daba55c-945a-4b36-8fef-b4dfe751a505",
                        "name": "Get Job Failed Record Results",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}/failedResults",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4169a062-3235-4b62-8c05-23212cb0804b"
                        ],
                        "createdAt": "2020-11-25T10:08:39.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z"
                    }
                },
                {
                    "model_id": "6ec500c9-aed4-4c1d-9bed-59ec3400e2e8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802767,
                        "folder": "5b076f48-d83b-4f7e-9daa-2b228fd88a37",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "6ec500c9-aed4-4c1d-9bed-59ec3400e2e8",
                        "name": "Create channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Account_Channel__chn\",\n    \"Metadata\": {\n        \"channelType\": \"data\",\n        \"label\": \"Account Channel\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2022-12-16T08:29:27.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "7052a020-9a6e-40f1-93e8-94db9d89af09",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100881,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7052a020-9a6e-40f1-93e8-94db9d89af09",
                        "name": "Update External Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"masterLabel\": \"Sample External Credential\",\n   \"authenticationProtocol\": \"Custom\",\n   \"principals\": [\n      {\n         \"principalName\": \"SamplePrincipal\",\n         \"principalType\": \"NamedPrincipal\",\n         \"sequenceNumber\": 1\n      }\n   ],\n   \"customHeaders\": [\n      {\n         \"headerName\": \"SampleHeader\",\n         \"headerValue\": \"SampleHeaderValue\",\n         \"sequenceNumber\": 1\n      }\n   ]\n}",
                        "descriptionFormat": null,
                        "description": "Update an external credential.",
                        "variables": null,
                        "headers": "",
                        "method": "PUT",
                        "pathVariables": {
                            "DEVELOPER_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/external-credentials/:DEVELOPER_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "9c43c0cc-e8a3-4e2e-aa17-ce694dd47d87",
                                "key": "DEVELOPER_NAME",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0cd8ef07-b070-4621-91e9-70af2c8204c9"
                        ],
                        "createdAt": "2023-06-13T07:21:05.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "70664e2a-06c9-4ebf-a78b-03e17139c349",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406440,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "70664e2a-06c9-4ebf-a78b-03e17139c349",
                        "name": "Get List View Header Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "a2cda8f9-86d5-4b05-8727-50fe66dcb0eb",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on records in related lists.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "LIST_VIEW_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/list-view/:LIST_VIEW_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "LIST_VIEW_IDS",
                                "value": "",
                                "description": "A single list view ID, or a comma-delimited list of list view IDs."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f375cb59-4f23-488d-adc6-d42458a6d927"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "70738361-026f-4b14-a118-b0872cc54a76",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920781,
                        "folder": "131daa8d-24fe-44e6-a11f-7aa9dd1699e5",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "70738361-026f-4b14-a118-b0872cc54a76",
                        "name": "Initiate Cancellation",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n  \"assetIds\": {\n    \"assetIdArray\": [\n      \"{{assetID}}\"\n    ]\n  },\n  \"cancellationDate\": \"2023-08-21T00:00:00\",\n  \"cancellationOutputType\": \"order\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/asset-management/assets/collection/actions/initiate-cancellation",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:02.000Z",
                        "updatedAt": "2023-08-09T08:13:02.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "75e6d1e7-c2d5-47bd-9e94-172ba75879ec",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667726,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "75e6d1e7-c2d5-47bd-9e94-172ba75879ec",
                        "name": "Create a Record",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "92e1dda7-6db6-48a1-a64f-991cf241e1ba",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"allowSaveOnDuplicate\": false,\n    \"apiName\": \"Object\",\n    \"fields\": {\n        \"FieldAPIName\": \"FieldValue\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Create a record. First, make a request to the Clone Record Default or Create Record Default resources to get the default metadata and data for the record.\nAs of API version 43.0, if you pass read-only fields in a request body, the response is an Error with Output.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/records",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5df36a98-29f5-4039-bd31-a51155c9c35c"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-09-27T16:15:08.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "7758bba3-32ee-4e02-8312-12a2c9966a8a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249406584,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7758bba3-32ee-4e02-8312-12a2c9966a8a",
                        "name": "Get Favorites",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "b4b125e4-b2ac-4f33-8fc0-682968d6dda5",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get all of a user\u2019s favorites.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "65dddd15-31bb-4a31-a3f5-52101c619824"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "78db3035-2b4d-4ac4-9291-c2b3e652c1ca",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879350635,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "78db3035-2b4d-4ac4-9291-c2b3e652c1ca",
                        "name": "Create and Save Quote Proposal API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"saver\": \"SBQQ.QuoteDocumentAPI.Save\",\n    \"model\": {\n        \"name\": \"test\",\n        \"quoteId\": \"<SFDC_ID>\",\n        \"templateId\": \"<SFDC_ID>\",\n        \"outputFormat\": \"PDF\",\n        \"language\": \"en_US\",\n        \"paperSize\": \"Default\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": "The Read Product API takes the request\u2019s product ID, pricebook ID, and currency code and returns a Product model. The Product model loads the product from your catalog when the user requests it.\nAvailable in: Salesforce CPQ Summer \u201916 and later\nSpecial Access Rules: Users must have read access to the product2 object.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_read_product.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=QuoteDocumentAPI.SaveProposal",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "QuoteDocumentAPI.SaveProposal",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2020-12-09T16:14:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "79369559-ea63-44cb-9182-7a2adbae9036",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405845,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "79369559-ea63-44cb-9182-7a2adbae9036",
                        "name": "Get Global Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "6cf898ac-0be4-4386-ae2b-725d8161053c",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on record detail pages.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/global",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "actionTypes",
                                "value": "",
                                "description": "The action type (`CustomButton`, `ProductivityAction`, `QuickAction` or `StandardButton`)",
                                "enabled": false
                            },
                            {
                                "key": "apiNames",
                                "value": "",
                                "description": "The API names of one or more actions to be retrieved. Use this parameter only when passing `retrievalMode=All`.",
                                "enabled": false
                            },
                            {
                                "key": "formFactor",
                                "value": "",
                                "description": "The layout display size (`Large` (default), `Medium` or `Small`).",
                                "enabled": false
                            },
                            {
                                "key": "retrievalMode",
                                "value": "",
                                "description": "When the action context is Record, this parameter indicates which actions to retrieve from the record page. Either `All` or `PageLayout` (default).",
                                "enabled": false
                            },
                            {
                                "key": "sections",
                                "value": "",
                                "description": "The section of the user interface that the actions reside in (`ActivityComposer`, `CollaborateComposer`, `Page` or `SingleActionLinks`).",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "dd6868d3-e6cc-4462-afc8-0b745858b74b"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "7980ea12-fbcf-400d-8477-66fd3e787b7f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928391,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7980ea12-fbcf-400d-8477-66fd3e787b7f",
                        "name": "Tooling Run Tests Sync",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "[\n    {\n        \"className\": \"YourClassName\",\n        \"testMethods\": [\n            \"testMethod1\",\n            \"testMethod2\",\n            \"testMethod3\"\n        ]\n    },\n    {\n        \"maxFailedTests\": \"2\"\n    }\n]\n\nor\n\n{\n    \"tests\": [\n        {\n            \"className\": \"YourClassName\",\n            \"testMethods\": [\n                \"testMethod1\",\n                \"testMethod2\",\n                \"testMethod3\"\n            ]\n        }\n    ],\n    \"maxFailedTests\": \"integer value\",\n    \"testLevel\": \"TestLevel enum value\",\n    \"skipCodeCoverage\": \"boolean value\"\n}\n",
                        "descriptionFormat": null,
                        "description": "Runs one or more methods within one or more Apex classes, using the asynchronous test execution mechanism. In the request body, you can specify test class names and IDs, suite names and IDs, the maximum number of failed tests to allow, and the test level, as comma-separated lists or as an array. You can also indicate whether to opt out of collecting code coverage information during the test run (available in API version 43.0 and later).",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/runTestsSynchronous",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "008ab061-89da-49b7-bff7-18d24c11be92"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2024-01-02T11:32:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "7ab493f8-1c66-4220-a2e5-a7c735a29852",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136852,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7ab493f8-1c66-4220-a2e5-a7c735a29852",
                        "name": "SObject Get Updated",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves the list of individual records that have been updated (added or changed) within the given timespan for the specified object. SObject Get Updated is available in API version 29.0 and later.\n\nThis resource is commonly used in data replication applications. Note the following considerations:\nResults are returned for no more than 30 days previous to the day the call is executed.\nYour client application can replicate any objects to which it has sufficient permissions. For example, to replicate all data for your organization, your client application must be logged in with \u201cView All Data\u201d access rights to the specified object. Similarly, the objects must be within your sharing rules.\nThere is a limit of 600,000 IDs returned from this resource. If more than 600,000 IDs would be returned, EXCEEDED_ID_LIMIT is returned. You can correct the error by choosing start and end dates that are closer together.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/updated/?start=&end=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "start",
                                "value": ""
                            },
                            {
                                "key": "end",
                                "value": ""
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "7b008deb-87d0-4dd9-bae6-14a49d415eda",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667522,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7b008deb-87d0-4dd9-bae6-14a49d415eda",
                        "name": "Query",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Executes the specified SOQL query.\n\nIf the query results are too large, the response contains the first batch of results and a query identifier in the nextRecordsUrl field of the response. The identifier can be used in an additional request to retrieve the next batch.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/query/?q=SELECT FIELDS(All) FROM ACCOUNT ORDER BY Name LIMIT 5",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT FIELDS(All) FROM ACCOUNT ORDER BY Name LIMIT 5",
                                "description": "A SOQL query. Note that you will need to replace spaces with \u201c+\u201d characters in your query string to create a valid URI. An example query parameter string might look like: \u201cSELECT+Name+FROM+MyObject\u201d. If the SOQL query string is invalid, a MALFORMED_QUERY response is returned."
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e6f66956-461b-442c-8b72-5419858bad50"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z"
                    }
                },
                {
                    "model_id": "7b60adc6-9fdf-4db1-92c8-c203057ec5fd",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405825,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7b60adc6-9fdf-4db1-92c8-c203057ec5fd",
                        "name": "SObject Describe",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/describe",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5de3bf96-efec-4607-83ac-18b920cefcf6"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z"
                    }
                },
                {
                    "model_id": "7c09d9e2-a722-4b7a-9eda-d3bc82ad0c72",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 19476011120,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7c09d9e2-a722-4b7a-9eda-d3bc82ad0c72",
                        "name": "Get Values for a Picklist Field",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get metadata about a specific object. The response includes metadata describing fields, child relationships, record type, and theme.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "Account",
                            "RECORD_TYPE_ID": "012000000000000AAA",
                            "FIELD_API_NAME": "Industry"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/object-info/:SOBJECT_API_NAME/picklist-values/:RECORD_TYPE_ID/:FIELD_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "Account",
                                "description": "Object API Name"
                            },
                            {
                                "key": "RECORD_TYPE_ID",
                                "value": "012000000000000AAA",
                                "description": "Record type Id. Use `012000000000000AAA` as default when there are no custom record types."
                            },
                            {
                                "key": "FIELD_API_NAME",
                                "value": "Industry",
                                "description": "Field API Name (optional)"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b49665e5-f4c5-4fb6-9802-cbdf1d6aad57"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-05-04T12:49:39.000Z"
                    }
                },
                {
                    "model_id": "7d9ddd72-fd29-4603-a785-345f57ff7f24",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644721,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7d9ddd72-fd29-4603-a785-345f57ff7f24",
                        "name": "ID Token",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/id/{{_orgId}}/{{_userId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0c269a55-9135-448e-b62f-69da1e0f7bb8"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z"
                    }
                },
                {
                    "model_id": "7ed890f9-9569-403f-9771-fb441bec7327",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406931,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7ed890f9-9569-403f-9771-fb441bec7327",
                        "name": "Get Most Recently Used List View Records and Metadata",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "a7e2463b-411a-4068-91b1-98b9aa03bda0",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns record data and metadata for an object\u2019s most recently used (MRU) list view.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/mru-list-ui/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "7fba7de1-78b0-4a0f-bc10-8c5bb1c9bf59"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "7f08b554-594a-49fc-956b-22fc331bb4e2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802789,
                        "folder": "5b076f48-d83b-4f7e-9daa-2b228fd88a37",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7f08b554-594a-49fc-956b-22fc331bb4e2",
                        "name": "Create channel member",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Account_Channel_chn_AccountChangeEvent\",\n    \"Metadata\": {\n        \"eventChannel\": \"Account_Channel__chn\",\n        \"selectedEntity\": \"AccountChangeEvent\"\n    }\n}\n",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannelMember",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2022-12-16T08:29:27.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "7ff80620-1210-4aa5-8886-32e9bc39884e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249407091,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "7ff80620-1210-4aa5-8886-32e9bc39884e",
                        "name": "Get Last Selected App",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "e0c2dfda-dca3-4055-a287-65ec6ec730bf",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Retrieves the app the current user last selected or the app the user sees by default.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/apps/selected?formFactor=Large",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "Large",
                                "description": "The form factor for each app that the user has access to (`Large`, `Medium` or `Small`)"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "36f15fb4-63a4-4e8e-af9d-60fbb8e8b873"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-10-23T09:17:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "815deb29-327f-4692-940f-f60d12f0f21b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33930635857,
                        "folder": "28b8570a-7b88-474c-9e9e-087ec3b06edf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "815deb29-327f-4692-940f-f60d12f0f21b",
                        "name": "OAuth App Users Tokens",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists all tokens for a user of the external client app. See\u00a0[Refresh Token by User and App](https://developer.salesforce.com/docs/atlas.en-us.246.0.chatterapi.meta/chatterapi/connect_resources_usage_app_id_user_id_tokens.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/usage/{{_appId}}/{{_userId}}/tokens",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e88aee13-19b2-48e6-9df8-8e908523b3e3"
                        ],
                        "createdAt": "2023-12-01T09:03:45.000Z",
                        "updatedAt": "2023-12-01T09:03:45.000Z"
                    }
                },
                {
                    "model_id": "8160962b-e4d1-46d2-bc21-fc102d87100c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100110,
                        "folder": "d5a3ab8d-73a7-4572-8541-9dfd668f09a8",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8160962b-e4d1-46d2-bc21-fc102d87100c",
                        "name": "User Photo",
                        "dataMode": "params",
                        "data": [
                            {
                                "key": "json",
                                "value": "{\"cropY\":\"0\",\"cropX\":\"0\",\"cropSize\":\"200\"}",
                                "type": "text"
                            },
                            {
                                "key": "fileUpload",
                                "type": "file",
                                "value": null
                            }
                        ],
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get, post, and crop a user photo.\nTo use an image from the Files page as a user photo, pass the file ID in the fileId property of the request body or in the fileId request parameter. Images uploaded on the User page don\u2019t have a file ID and can\u2019t be used as the fileId.\n\nTo upload a binary file as the user photo, you must send it in a multipart/form-data message. For information about how to create the multipart/form-data message, see Uploading Binary Files.\n\nTo display user profile photos in a feed, cache the user photos. Then use the photoVersionId property of the Photo response body to determine when you need to update a photo. This technique helps you avoid running over limits and may improve mobile client performance.",
                        "variables": null,
                        "headers": "//Content-Type: multipart/form-data\n//Content-Disposition: form-data; name=\"photo\"\n//Content-Type: application/json; charset=UTF-8\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/user-profiles/me/photo",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "multipart/form-data",
                                "enabled": false
                            },
                            {
                                "key": "Content-Disposition",
                                "value": "form-data; name=\"photo\"",
                                "enabled": false
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json; charset=UTF-8",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2f736d74-9d66-4803-b807-14d9effd0586"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:56.000Z",
                        "dataOptions": {
                            "params": {}
                        }
                    }
                },
                {
                    "model_id": "81a8d70d-c758-4bc0-944f-4ba92878343a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249401818,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "81a8d70d-c758-4bc0-944f-4ba92878343a",
                        "name": "Apex REST",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Gets the list of icons and colors used by themes in the Salesforce application. Theme information is provided for objects in your organization that use icons and colors in the Salesforce UI.\n\nThe If-Modified-Since header can be used with this resource, with a date format of EEE, dd MMM yyyy HH:mm:ss z. When this header is used, if the object metadata has not changed since the provided date, a 304 Not Modified status code is returned, with no response body.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_themes.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "urlMapping": ""
                        },
                        "url": "{{_endpoint}}/services/apexrest/:urlMapping",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "urlMapping",
                                "value": "",
                                "description": "Value of `urlMapping` as defined in `@RestResource` annotation in the Apex class."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2022-07-04T16:54:02.000Z",
                        "updatedAt": "2023-10-23T09:17:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "84bfe681-c11d-4370-8df4-8c2e493c9d03",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 21928037120,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "84bfe681-c11d-4370-8df4-8c2e493c9d03",
                        "name": "Composite Graph",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"graphs\": [\n        {\n            \"graphId\": \"graph1\",\n            \"compositeRequest\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"/services/data/v{{version}}/sobjects/Account/\",\n                    \"referenceId\": \"newAccount\",\n                    \"body\": {\n                        \"Name\": \"ACME Inc.\",\n                        \"Custom__c\": \"Hello world\"\n                    }\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"/services/data/v{{version}}/sobjects/Account/@{newAccount.id}\",\n                    \"referenceId\": \"newAccountInfo\"\n                }\n            ]\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Composite graphs provide an enhanced way to perform composite requests, which execute a series of REST API requests in a single call.\nRegular composite requests allow you to execute a series of REST API requests in a single call. And you can use the output of one request as the input to a subsequent request.\n\nComposite graphs extend this by allowing you to assemble a more complicated and complete series of related objects and records.\n\nComposite graphs also enable you to ensure that the steps in a given set of operations are either all completed or all not completed. This avoids requiring you to check for a mix of successful and unsuccessful results.\n\nRegular composite requests have a limit of 25 subrequests. Composite graphs increase this limit to 500. This gives a single API call much greater power.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_graph_introduction.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/graph",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "8fd0acfb-0083-4a26-9edb-5c3f42ab2485"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-11-18T08:24:44.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "856120d4-6f94-471d-94fa-4b725aee1adf",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 35078293513,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "856120d4-6f94-471d-94fa-4b725aee1adf",
                        "name": "Composite",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"compositeRequest\": [\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/Account\",\n            \"referenceId\": \"refAccount\",\n            \"body\": {\n                \"Name\": \"Sample Account\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/Contact\",\n            \"referenceId\": \"refContact\",\n            \"body\": {\n                \"LastName\": \"Sample Contact\",\n                \"AccountId\": \"@{refAccount.id}\"\n            }\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Executes a series of REST API requests in a single call. You can use the output of one request as the input to a subsequent request. The response bodies and HTTP statuses of the requests are returned in a single response body. The entire request counts as a single call toward your API limits.\nThe requests in a composite call are called subrequests. All subrequests are executed in the context of the same user. In a subrequest\u2019s body, you specify a reference ID that maps to the subrequest\u2019s response. You can then refer to the ID in the url or body fields of later subrequests by using a JavaScript-like reference notation.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_composite.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "65c2e518-a8de-4642-9945-3ba28e3700b2"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2024-02-14T14:16:01.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "8562b87b-5a01-4009-946c-4ebb2c32f679",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100156,
                        "folder": "d5a3ab8d-73a7-4572-8541-9dfd668f09a8",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8562b87b-5a01-4009-946c-4ebb2c32f679",
                        "name": "User Messages, General",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "70abf7f7-dce6-4ba5-9f27-ba969686518c",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "a4412043-6e5d-4ed2-b9ed-eb523abdccd8",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns all the messages for all the private conversations for the context user. Also used to search across all messages and post a message.\nTo return all private conversations for the context user, see User Conversations, General.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_users_messages_general.htm",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/users/me/messages?text=This is a private message&recipients=<USER1_ID>,<USER2_ID>",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "text",
                                "value": "This is a private message",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "inReplyTo",
                                "value": "<MESSAGE_ID>",
                                "description": "ID of an existing message that identifies which conversation this message is part of. Specify either recipients or inReplyTo. Specify one or the other, not both.",
                                "enabled": false,
                                "equals": true
                            },
                            {
                                "key": "recipients",
                                "value": "<USER1_ID>,<USER2_ID>",
                                "equals": true,
                                "description": "Comma-separated list of User IDs"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c42b32ef-1bb5-4f93-8eea-8d679cc0a45c"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:56.000Z"
                    }
                },
                {
                    "model_id": "85f5ceae-b03f-423d-9187-4ba23e6b5930",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405510,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "85f5ceae-b03f-423d-9187-4ba23e6b5930",
                        "name": "Accounts with Cursors (Pagination)",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "caeaa42f-66c2-47f2-8fc4-255dc58b2fdf"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query accountsWithCursors($first: Int, $after: String) {\n  uiapi {\n    query {\n      Account(first: $first, after: $after) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n          }\n        }\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n      }\n    }\n  }\n}",
                            "variables": "{\n    \"first\": 3,\n    \"after\": null\n}"
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "86589c08-860a-43ac-9563-3ddca1367342",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 25705436368,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "86589c08-860a-43ac-9563-3ddca1367342",
                        "name": "Download file",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists the available objects and their metadata for your organization\u2019s data. In addition, it provides the organization encoding, as well as the maximum batch size permitted in queries.\n\nYou can use the If-Modified-Since header with this resource, with the date format EEE, dd MMM yyyy HH:mm:ss z. When using this header, if no available object\u2019s metadata has changed since the provided date, a 304 Not Modified status code is returned with no response body.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v54.0/sobjects/ContentVersion/0681k0000020wLFAAY/VersionData",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2022-07-04T16:54:02.000Z",
                        "updatedAt": "2022-07-04T16:54:02.000Z"
                    }
                },
                {
                    "model_id": "867c9cd1-d5a7-484f-abc6-6c71eeb754d7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17964491391,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "867c9cd1-d5a7-484f-abc6-6c71eeb754d7",
                        "name": "Tooling Completion",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves available code completions of the referenced type for Apex system method symbols (type=apex). Available from API version 28.0 or later.",
                        "variables": null,
                        "headers": "Accept: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/completions?type=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "type",
                                "value": "",
                                "equals": true,
                                "description": "apex or visualforce",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "description": null,
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2020-12-17T15:57:58.000Z"
                    }
                },
                {
                    "model_id": "86997863-e89c-4cf4-a299-c6830dc08119",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100059,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "86997863-e89c-4cf4-a299-c6830dc08119",
                        "name": "Delete Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"externalCredential\": \"SampleExternalCredential\",\n    \"principalType\": \"NamedPrincipal\",\n    \"principalName\": \"SamplePrincipal\"\n}",
                        "descriptionFormat": null,
                        "description": "Delete a credential.",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/credential",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-04-26T07:24:57.000Z",
                        "updatedAt": "2023-11-22T12:37:56.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "88472a02-2d6a-4b05-8881-2cc4fc5973fc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 35198063954,
                        "folder": "7b7c497c-6d2e-47ba-9f84-dd7630cd8781",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "88472a02-2d6a-4b05-8881-2cc4fc5973fc",
                        "name": "Collections",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns credentials for all consumers associated with an external client app. See [OAuth Credentials by App ID](https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_credentials_by_app_id.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/credentials/{{_appId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2024-02-21T15:29:25.000Z",
                        "updatedAt": "2024-02-21T15:29:25.000Z"
                    }
                },
                {
                    "model_id": "88aefb60-8140-4695-95fe-3663d647e94e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136379,
                        "folder": "bb87facf-ed63-40fb-bbec-944d053618b2",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "88aefb60-8140-4695-95fe-3663d647e94e",
                        "name": "Get event log file",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "2258a005-c7a6-427f-b5ba-17bc26c500e7",
                                    "exec": [
                                        "const template = `",
                                        "<script src=\"https://unpkg.com/csv-visualizer@latest/dist/csv-visualizer.min.js\"></script>",
                                        "<script>",
                                        "pm.getData((err, data) => {",
                                        "    CsvVisualizer.visualize(data.csvString, document.body, { parserOptions: { skipEmptyLines: true }});",
                                        "});",
                                        "</script>`;",
                                        "const csvString = pm.response.text();",
                                        "pm.visualizer.set(template, { csvString });"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "id": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/EventLogFile/:id/LogFile",
                        "preRequestScript": null,
                        "tests": "const template = `\n<script src=\"https://unpkg.com/csv-visualizer@latest/dist/csv-visualizer.min.js\"></script>\n<script>\npm.getData((err, data) => {\n    CsvVisualizer.visualize(data.csvString, document.body, { parserOptions: { skipEmptyLines: true }});\n});\n</script>`;\nconst csvString = pm.response.text();\npm.visualizer.set(template, { csvString });",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "b3b023ea-683a-4105-a585-e1706b8e9c70",
                                "key": "id",
                                "value": null,
                                "description": "Log event Id"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2021-09-07T13:51:56.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "88c2f742-57d2-45fc-9ac0-b3ed6c10d6da",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879349972,
                        "folder": "b52c96fc-1c6a-4293-a1e4-87482d736c0d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "88c2f742-57d2-45fc-9ac0-b3ed6c10d6da",
                        "name": "Configuration Validator API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "The Configuration Validator API runs selection, validation, and alert product rules and configurator-scoped price rules against the input configuration model and returns an updated configuration model.\nAvailable in: Salesforce CPQ Spring \u201917 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_config_validator.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.ConfigAPI.ConfigurationValidator&uid=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.ConfigAPI.ConfigurationValidator",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2020-12-09T16:13:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "8ac74e8e-6285-4b8e-9b5c-5fc3a73b73e5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 19444586171,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8ac74e8e-6285-4b8e-9b5c-5fc3a73b73e5",
                        "name": "Post Tooling SObject",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"Name\":\"test\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-04-30T07:56:46.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "8b4def20-20a5-483a-9c56-b398b1900402",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 19444586160,
                        "folder": "f8855583-344f-42b8-badf-4b4e51d22ba3",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8b4def20-20a5-483a-9c56-b398b1900402",
                        "name": "Prediction models",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get available prediction definitions.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "PREDICTION_DEFINITION_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/smartdatadiscovery/predictionDefinitions/:PREDICTION_DEFINITION_ID/models",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "PREDICTION_DEFINITION_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4a83a2d6-12b2-4383-9610-dfcecfac8ebf"
                        ],
                        "createdAt": "2021-03-04T14:11:26.000Z",
                        "updatedAt": "2021-04-30T07:56:46.000Z"
                    }
                },
                {
                    "model_id": "8ba445f8-d603-4b4a-8504-debe1396fb08",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879349966,
                        "folder": "b52c96fc-1c6a-4293-a1e4-87482d736c0d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8ba445f8-d603-4b4a-8504-debe1396fb08",
                        "name": "Configuration Loader API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "The Configuration Loader API returns all the data for the product, including its product options and configuration model. When configuring a nested bundle, set the parentProductproperty to the parent product to inherit configuration attributes on the nested bundle.\nAvailable in: Salesforce CPQ Spring \u201917 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_config_loader.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.ConfigAPI.ConfigLoader&uid",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.ConfigAPI.ConfigLoader",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": false,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2020-12-09T16:13:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "8bfeac9b-2bb8-4b93-a35f-f400c8783595",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33930635884,
                        "folder": "28b8570a-7b88-474c-9e9e-087ec3b06edf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8bfeac9b-2bb8-4b93-a35f-f400c8783595",
                        "name": "OAuth App Users",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists all users for the external client app indicated by the app ID. See\u00a0[OAuth Users by App ID](https://developer.salesforce.com/docs/atlas.en-us.246.0.chatterapi.meta/chatterapi/connect_resources_usage_app_id_users.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/usage/{{_appId}}/users?page=0&pageSize=100",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "page",
                                "value": "0",
                                "equals": true,
                                "description": "Page number for the usage information. Defaults to 0.",
                                "enabled": true
                            },
                            {
                                "key": "pageSize",
                                "value": "100",
                                "equals": true,
                                "description": "Number of usage entries per page. Defaults to 100.",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "45e653f2-d915-401f-beac-bf4bd92f8f99"
                        ],
                        "createdAt": "2023-12-01T09:03:45.000Z",
                        "updatedAt": "2023-12-01T09:03:45.000Z"
                    }
                },
                {
                    "model_id": "8c53591e-8108-4ee9-9619-39c5ec5f61c2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756654,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8c53591e-8108-4ee9-9619-39c5ec5f61c2",
                        "name": "Get Job Info",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "ba8852d3-69bc-46b7-ba43-bddf4866d6e0"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z"
                    }
                },
                {
                    "model_id": "8d78150c-8ef5-49e1-a21c-b49e9e803c66",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137017,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8d78150c-8ef5-49e1-a21c-b49e9e803c66",
                        "name": "SObject User Password",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Set, reset, or get information about a user password. This resource is available in REST API version 24.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "USER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/User/:USER_ID/password",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "USER_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "8e4d01f1-2f3c-4cd5-8aff-7b0be9bef405",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667528130,
                        "folder": "1c891a62-2cde-478e-a6bc-0adc964ee29a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "8e4d01f1-2f3c-4cd5-8aff-7b0be9bef405",
                        "name": "SOAP DescribeMetadata",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "1e999bfa-cbc5-4c91-9973-2f0e72015dee",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://soap.sforce.com/2006/04/metadata\">\n\t<soapenv:Header>\n\t<tns:SessionHeader>\n\t\t<tns:sessionId>{{_accessToken}}</tns:sessionId>\n\t</tns:SessionHeader>\n\t</soapenv:Header>\n\t<soapenv:Body>\n\t\t<tns:describeMetadata>\n\t\t\t<asOfVersion>{{version}}</asOfVersion>\n\t\t</tns:describeMetadata>\n\t</soapenv:Body>\n</soapenv:Envelope>",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: text/xml\ncharset: UTF-8\nSOAPAction: login\nAccept: text/xml\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/Soap/m/{{version}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "text/xml",
                                "type": "text"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "login"
                            },
                            {
                                "key": "Accept",
                                "value": "text/xml",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "129899e5-5ccf-400f-a5f7-f64ff8fca313"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-09-20T11:56:49.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "9080664d-f56b-478d-8dcc-0bc7249416d2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802776,
                        "folder": "5b076f48-d83b-4f7e-9daa-2b228fd88a37",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9080664d-f56b-478d-8dcc-0bc7249416d2",
                        "name": "Update channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Account_Channel__chn\",\n    \"Metadata\": {\n        \"channelType\": \"data\",\n        \"label\": \"Account Channel 2\",\n        \"urls\": null\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_ID": "0YLRM0000004DlP4AU"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel/:PLATFORM_EVENT_CHANNEL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "729d1b9c-7851-4d97-a730-41b02593f0e1",
                                "key": "PLATFORM_EVENT_CHANNEL_ID",
                                "value": "0YLRM0000004DlP4AU"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "912e191b-a2be-4b3c-8992-ea56290ce1c4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406532,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "912e191b-a2be-4b3c-8992-ea56290ce1c4",
                        "name": "Get MRU List View Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "1e14b55a-5ae6-4ed5-90de-866aed30bba8",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the header actions on the most recently used (MRU) list view for objects.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAMES": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/mru-list/:SOBJECT_API_NAMES",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAMES",
                                "value": "",
                                "description": "An object name, or a comma-delimited list of object names."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b4a5eaca-2e86-4f53-ae57-cede3bbe0770"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "9192eab4-ebf9-4ab9-8303-dcf484cc5c8f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920739,
                        "folder": "131daa8d-24fe-44e6-a11f-7aa9dd1699e5",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9192eab4-ebf9-4ab9-8303-dcf484cc5c8f",
                        "name": "CreateAssetFromOrder",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"inputs\": [\n        {\n            \"orderId\": \"{{currentOrder}}\"\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/standard/createOrUpdateAssetFromOrder",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:02.000Z",
                        "updatedAt": "2023-08-09T08:13:02.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "91e36fa7-b706-4796-b506-2d875f0fb0cf",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136477,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "91e36fa7-b706-4796-b506-2d875f0fb0cf",
                        "name": "Search Suggested Queries",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns a list of suggested searches based on the user\u2019s query string text matching searches that other users have performed in Salesforce Knowledge. Provides a way to improve search effectiveness, before the user performs a search.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_suggest_queries.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/search/suggestSearchQueries?q&language",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "channel",
                                "value": "",
                                "description": "Optional. Specifies the Salesforce Knowledge channel where the article can be viewed. Valid values:\nAllChannels\u2013Visible in all channels the user has access to\nApp\u2013Visible in the internal Salesforce Knowledge application\nPkb\u2013Visible in the public knowledge base\nCsp\u2013Visible in the Customer Portal\nPrm\u2013Visible in the Partner Portal\nIf channel isn\u2019t specified, the default value is determined by the type of user.\nPkb for a guest user\nCsp for a Customer Portal user\nPrm for a Partner Portal user\nApp for any other type of user\nIf channel is specified, the specified value may not be the actual value requested, because of certain requirements.\nFor guest, Customer Portal, and Partner Portal users, the specified value must match the default value for each user type. If the values don\u2019t match or AllChannels is specified, then App replaces the specified value.\nFor all users other than guest, Customer Portal, and Partner Portal users:\nIf Pkb, Csp, Prm, or App are specified, then the specified value is used.\nIf AllChannels is specified, then App replaces the specified value.",
                                "enabled": false
                            },
                            {
                                "key": "limit",
                                "value": "",
                                "equals": false,
                                "description": "Optional. Specifies the maximum number of suggested searches to return. If there are more suggested queries than the limit specified, the response body\u2019s hasMoreResults property is true.",
                                "enabled": false
                            },
                            {
                                "key": "q",
                                "value": "",
                                "equals": false
                            },
                            {
                                "key": "language",
                                "value": "",
                                "equals": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "93ad04d4-3de9-4cd6-8eb8-6bfbc79e449a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136786,
                        "folder": "c1964922-356a-496f-9ea6-e3c036d17fbe",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "93ad04d4-3de9-4cd6-8eb8-6bfbc79e449a",
                        "name": "Retrieve Knowledge Language Settings",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns the existing Knowledge language settings, including the default knowledge language and a list of supported Knowledge language information.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_knowledge_retrieve_language.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/knowledgeManagement/settings",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "93e5a6b3-f21a-47b1-a4ea-8d03817bc3ac",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756667,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "93e5a6b3-f21a-47b1-a4ea-8d03817bc3ac",
                        "name": "Get All Jobs",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "9462aa5d-9938-4527-a176-042d5e086603"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z"
                    }
                },
                {
                    "model_id": "94813975-30c9-4232-a8a1-db975927623c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802830,
                        "folder": "29e5186d-8f97-485e-b089-03b246165280",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "94813975-30c9-4232-a8a1-db975927623c",
                        "name": "Create channel member",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Carbon_ComparisonChannel_chn_Carbon_Comparison_e\",\n    \"Metadata\": {\n        \"eventChannel\": \"Carbon_ComparisonChannel__chn\",\n        \"selectedEntity\": \"Carbon_Comparison__e\",\n        \"urls\": null\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannelMember",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "94b3100a-82db-4db9-8221-9c7a55bf7557",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317924,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "94b3100a-82db-4db9-8221-9c7a55bf7557",
                        "name": "Passwordless Login - Initialize",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": "{\n    \"username\": \"<username>\",\n    \"recaptcha\": \"<recaptcha-token>\",\n    \"verificationmethod\": \"email or sms\"\n}",
                        "descriptionFormat": null,
                        "description": "Submits the passwordless login data to the init/passwordless/login endpoint and returns a request identifier. At the same time, an OTP is sent out to the end users via email or sms. Passwordless login data is passed in the request body, and is formatted with JSON, with 3 keys: `username`, `recaptcha`, and `verificationmethod`. All 3 keys are strings.\n\nThis request returns JSON, and includes an identifier (request identifier).",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/auth/headless/init/passwordless/login",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "content-type": true
                            }
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-09-08T16:03:17.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "94c5b12e-2dda-461e-9a43-47b7a385f40b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32400031452,
                        "folder": "1b966335-7622-4e07-a540-c7f79d72a369",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "94c5b12e-2dda-461e-9a43-47b7a385f40b",
                        "name": "Integration Procedure Invocation Using GET",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "NAMESPACE": "",
                            "TYPE_SUBTYPE": ""
                        },
                        "url": "{{_endpoint}}/services/apexrest/:NAMESPACE/v1/integrationprocedure/:TYPE_SUBTYPE/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "NAMESPACE",
                                "value": "",
                                "description": "The namespace: `omnistudio`, `vlocity_ins`, `vlocity_cmt`, or `vlocity_ps`"
                            },
                            {
                                "key": "TYPE_SUBTYPE",
                                "value": "",
                                "description": "Type and SubType of the Integration Procedure separated by an underscore."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-09-04T15:50:57.000Z",
                        "updatedAt": "2023-09-04T16:00:46.000Z"
                    }
                },
                {
                    "model_id": "961fd880-c4dc-42d0-9e91-42e84bbc7ad2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003919549,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "961fd880-c4dc-42d0-9e91-42e84bbc7ad2",
                        "name": "Get Product Relationship Type",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "7c531e97-5b90-44b6-8ee0-3060f4c93bd3",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"BundleProductRelationshipType\", jsonData.records[0].Id);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select ID, Name from productrelationshiptype where Name IN ('Bundle PRT') ",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"BundleProductRelationshipType\", jsonData.records[0].Id);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select ID, Name from productrelationshiptype where Name IN ('Bundle PRT') "
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "96a5574e-f33f-4107-ac48-d8d2e123e1f2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 35198063962,
                        "folder": "7b7c497c-6d2e-47ba-9f84-dd7630cd8781",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "96a5574e-f33f-4107-ac48-d8d2e123e1f2",
                        "name": "Resources",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns credentials for a specific consumer. Use parameters to determine whether the request should return the key, the secret, or both key and secret. See [OAuth Credentials by Consumer ID](https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_credentials_by_app_and_consumer_id.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/credentials/{{_appId}}/{{_consumerId}}?part=Key",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "part",
                                "value": "Key",
                                "description": "Key, Secret, or KeyAndSecret"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2024-02-21T15:29:25.000Z",
                        "updatedAt": "2024-02-21T15:29:25.000Z"
                    }
                },
                {
                    "model_id": "9732be8d-d870-456c-8242-25d7cda266e7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317931,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9732be8d-d870-456c-8242-25d7cda266e7",
                        "name": "Passwordless Login - Authorize",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "response_type",
                                "value": "code_credentials",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            },
                            {
                                "key": "scope",
                                "value": "",
                                "description": "Comma seperated list of scopes, optional",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "After you send your passwordless login data to initialize, this request allows you to process that login data, and as a part of this request you also verify the users email or sms number. The request itself is a authorization call for the Code and Credential flow. It includes 3 specific headers: `Auth-Request-Type` which is set to `passwordless-login`, `Auth-Verification-Type` which is set to email or sms, and an Authorization Basic header, which is the base64 encoded result of `identifier:otp` where `identifier` is the value returned in your initialize call, and `otp` is the value sent to the end user via email or sms.\n\nThe response from this API is the Auth Code, which is then exchanged for the Access Token.",
                        "variables": null,
                        "headers": "Auth-Request-Type: passwordless-login\nAuth-Verification-Type: <email or sms>\nAuthorization: Basic <base64Encoded identifier:otp>",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/authorize",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Auth-Request-Type",
                                "value": "passwordless-login",
                                "description": "Required for passwordless login"
                            },
                            {
                                "key": "Auth-Verification-Type",
                                "value": "<email or sms>",
                                "description": "Must match init verification method, email or sms"
                            },
                            {
                                "key": "Authorization",
                                "value": "Basic <base64Encoded identifier:otp>",
                                "description": "Base 64 encoded <Identifier:OTP>"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-09-08T16:03:17.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "97584a70-ffc2-47b5-8e1a-7bb7631a26b3",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644798,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "97584a70-ffc2-47b5-8e1a-7bb7631a26b3",
                        "name": "Bulk Close Job",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"state\" : \"Closed\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nContent-Type: application/json\ncharset: UTF-8\n//Accept-Encoding: gzip\n//Content-Encoding: gzip\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/async/{{version}}/job/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip",
                                "enabled": false
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "25018958-cfbd-466d-8298-e15eb78388e7"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "9849b13f-e35e-4846-be2d-142660535fe7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100863,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9849b13f-e35e-4846-be2d-142660535fe7",
                        "name": "Create Named Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"developerName\": \"SamplePrivate\",\n   \"masterLabel\": \"SamplePrivateLabel\",\n   \"type\": \"SecuredEndpoint\",\n   \"calloutUrl\": \"https://api.example.com\",\n   \"externalCredentials\": [\n      {\n         \"developerName\": \"SampleExternalCredential\"\n      }\n   ],\n   \"customHeaders\": [\n      {\n         \"headerName\": \"SampleHeader\",\n         \"headerValue\": \"SampleValue\",\n         \"sequenceNumber\": 1\n      }\n   ],\n   \"calloutOptions\": {\n      \"allowMergeFieldsInBody\": false,\n      \"allowMergeFieldsInHeader\": true,\n      \"generateAuthorizationHeader\": true\n   }\n}",
                        "descriptionFormat": null,
                        "description": "Create a named credential.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/named-credential-setup",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "811aa040-5651-4f36-82ba-21eefdb0fca3"
                        ],
                        "createdAt": "2023-06-13T07:21:05.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "98dd04dc-1d99-4025-b4dc-02fc704aa7fe",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136876,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "98dd04dc-1d99-4025-b4dc-02fc704aa7fe",
                        "name": "SObject Rows",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Accesses records based on the specified object ID. Retrieves, updates, or deletes records. This resource can also be used to retrieve field values. Use the GET method to retrieve records or fields, the DELETE method to delete records, and the PATCH method to update records.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "9a133279-9123-4942-a39a-96575e52f386",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667532,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9a133279-9123-4942-a39a-96575e52f386",
                        "name": "QueryAll",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Executes the specified SOQL query. Unlike the Query resource, QueryAll will return records that have been deleted because of a merge or delete. QueryAll will also return information about archived Task and Event records. QueryAll is available in API version 29.0 and later.\n\nIf the query results are too large, the response contains the first batch of results and a query identifier in the nextRecordsUrl field of the response. The identifier can be used in an additional request to retrieve the next batch. Note that even though nextRecordsUrl has query in the URL, it will still provide remaining results from the initial QueryAll request. The remaining results will include deleted records that matched the initial query.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_queryall.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/queryAll/?q=SELECT+name+from+Account",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT+name+from+Account",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "explain",
                                "value": "",
                                "description": "A SOQL query to get performance feedback on. Use explain instead of q to get a response that details how Salesforce will process your query. You can use this feedback to further optimize your queries. You can also use a report or list view ID in place of the query string to get feedback on how Salesforce will process your report or list view.",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4c667552-b041-4c44-a362-0d02a4e1e936"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z"
                    }
                },
                {
                    "model_id": "9bf73427-202c-481e-99f8-9e16817bfe78",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405750,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9bf73427-202c-481e-99f8-9e16817bfe78",
                        "name": "Opportunities Closing Soon",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "9900e55a-868d-4ab4-9493-55c038b593b3"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "graphqlModeData": {
                            "query": "query opportunitiesClosingSoon($month: Long) {\n  uiapi {\n    query {\n      Opportunity(\n        where: {\n          StageName: { eq: \"Negotiation/Review\" }\n          CloseDate: { CALENDAR_MONTH: { value: { eq: $month } } }\n        }\n      ) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n            StageName {\n              value\n            }\n            CloseDate {\n              value\n              displayValue\n            }\n            Description {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": "{\n    \"month\": 10\n}"
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "9cc53d18-6291-4014-9e2f-0aee60f9803d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644567,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9cc53d18-6291-4014-9e2f-0aee60f9803d",
                        "name": "Refresh Token",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "refresh_token",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "client_secret",
                                "value": "{{clientSecret}}",
                                "type": "text"
                            },
                            {
                                "key": "refresh_token",
                                "value": "{{_refreshToken}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "9f43ff7d-45e1-4818-88f9-2595f7804019",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_accessToken\", jsonData.access_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\n\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_accessToken\", jsonData.access_token);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f307408f-66f1-42be-bfe0-52daf668fe27"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "urlencoded": {}
                        }
                    }
                },
                {
                    "model_id": "9d9428d7-3c48-481a-90be-e9e7303b5a3e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667547,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9d9428d7-3c48-481a-90be-e9e7303b5a3e",
                        "name": "Tabs",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "f a survey field can be translated or is already translated into a particular language, you can add or change the translated value of the survey field.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/request_survey_translate_add_change.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tabs",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b60d8c8c-a3af-4439-bc51-4a6fa5d89418"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "9db2386c-d7a3-486c-bf5b-3a37e1218216",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644502,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9db2386c-d7a3-486c-bf5b-3a37e1218216",
                        "name": "Client Credentials Flow - basic authorization header",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "client_credentials",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text",
                                "enabled": false
                            },
                            {
                                "key": "client_secret",
                                "value": "{{clientSecret}}",
                                "type": "text",
                                "enabled": false
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "7cd8aa3e-4b6b-49a5-93cc-59151d1c69a0",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "",
                                        "if(!jsonData.error){",
                                        "    const id = jsonData.id.split('/');",
                                        "    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "    context.set(\"_accessToken\", jsonData.access_token);",
                                        "    context.set(\"_endpoint\", jsonData.instance_url);",
                                        "    context.set(\"_userId\", id.pop());",
                                        "    context.set(\"_orgId\", id.pop());",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "26881ba5-4628-48f3-9e12-6992664a17f5",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "",
                                        "const basicAuth = context.get(\"clientId\") + \":\" + context.get(\"clientSecret\");",
                                        "const basicAuthEncoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(basicAuth));",
                                        "",
                                        "pm.environment.set(\"clientCredential_basicAuthEncoded\", basicAuthEncoded);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\nAuthorization: Basic {{clientCredential_basicAuthEncoded}}",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n\nconst basicAuth = context.get(\"clientId\") + \":\" + context.get(\"clientSecret\");\nconst basicAuthEncoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(basicAuth));\n\npm.environment.set(\"clientCredential_basicAuthEncoded\", basicAuthEncoded);",
                        "tests": "const jsonData = pm.response.json();\n\nif(!jsonData.error){\n    const id = jsonData.id.split('/');\n    const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n    context.set(\"_accessToken\", jsonData.access_token);\n    context.set(\"_endpoint\", jsonData.instance_url);\n    context.set(\"_userId\", id.pop());\n    context.set(\"_orgId\", id.pop());\n}",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded",
                                "description": null
                            },
                            {
                                "key": "Authorization",
                                "value": "Basic {{clientCredential_basicAuthEncoded}}",
                                "description": "Base64 encoded basic credentials (see pre-request script)"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableCookies": true,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d7de31d9-f539-4cb2-82da-b0d29474be45"
                        ],
                        "createdAt": "2023-02-13T14:41:46.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "9e1705fa-e4c0-4c8f-9469-8588fe4b91bb",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100212,
                        "folder": "d5a3ab8d-73a7-4572-8541-9dfd668f09a8",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9e1705fa-e4c0-4c8f-9469-8588fe4b91bb",
                        "name": "Following - POST",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "c9b9d837-d7de-4395-ac65-3ef8fffe5933",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "f325bc3d-7927-42b7-a6b4-396a2a89aa31",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of people, groups, records, topics, and files that the specified user is following. Also used to follow records.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_users_FollowingUsers.htm?search_text=following",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "USER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/users/:USER_ID/following?subjectId=<RECORD_ID>",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "subjectId",
                                "value": "<RECORD_ID>"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "USER_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "1c1c9ccc-260c-4d14-8d1c-2bd0d713cb6b"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "9ea2ceac-3786-4810-bd13-627bbb800f18",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317898,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9ea2ceac-3786-4810-bd13-627bbb800f18",
                        "name": "Forgot Password - Initialize",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": "{\n    \"username\": \"<username>\",\n    \"recaptcha\": \"<recaptcha token>\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/auth/headless/forgot_password",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true,
                                "accept-encoding": true,
                                "connection": true,
                                "user-agent": true
                            },
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "9ea3bf27-e9f7-4e97-b711-a8a47fa555b9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137072,
                        "folder": "405271ed-e8df-47fe-a5ff-b5e753ab15c1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9ea3bf27-e9f7-4e97-b711-a8a47fa555b9",
                        "name": "Quick Actions",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of global actions and object-specific actions. This resource is available in REST API version 28.0 and later. When working with actions, also refer to SObject Quick Actions.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_quickactions.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/quickActions",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "9eb24145-f8a7-4a82-9a6a-f2dd3e4d0d62",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644432,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9eb24145-f8a7-4a82-9a6a-f2dd3e4d0d62",
                        "name": "Web Server Flow 1",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/authorize?response_type=code&client_id={{clientId}}&redirect_uri={{redirectUrl}}&scope=full refresh_token",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "response_type",
                                "value": "code",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "scope",
                                "value": "full refresh_token",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c117eb9e-75d0-48d9-a2ef-f4233be2aa90"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:22.000Z"
                    }
                },
                {
                    "model_id": "9f0953f4-0d2d-4446-8739-7ad86b9b8aa0",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136959,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9f0953f4-0d2d-4446-8739-7ad86b9b8aa0",
                        "name": "Describe SObject Layouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of layouts and descriptions. The list of fields and the layout name are returned.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/describe/layouts/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "9f444439-e0bb-407b-b5b0-d1f05bb19add",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644832,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9f444439-e0bb-407b-b5b0-d1f05bb19add",
                        "name": "Bulk Retrieve Batch Result",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nAccept-Encoding: gzip\nContent-Encoding: gzip\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/async/{{version}}/job/{{_jobId}}/batch/{{_batchId}}/result",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip"
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4533b57e-7ea8-4907-86ca-21603d2e08f8"
                        ],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z"
                    }
                },
                {
                    "model_id": "9f89d448-011b-4bad-b3c3-de3b9bca253c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 22291801912,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9f89d448-011b-4bad-b3c3-de3b9bca253c",
                        "name": "Calculate Quote API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "The Calculate Quote API calculates the prices of a CPQ quote.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_quote_api_calculate_final.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.QuoteAPI.QuoteCalculator",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.QuoteAPI.QuoteCalculator",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-12-09T08:13:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "9fa67ac2-4711-42be-a7df-e61011818ad3",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405808,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "9fa67ac2-4711-42be-a7df-e61011818ad3",
                        "name": "Opportunities Not Closed",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b4fca642-8ba9-4a51-9bae-cf55e597be99"
                        ],
                        "createdAt": "2022-04-21T17:29:32.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "graphqlModeData": {
                            "query": "query opportunitiesNotClosed {\n  uiapi {\n    query {\n      Opportunity(\n        where: {\n          not: {\n            or: [\n              { StageName: { eq: \"Closed Won\" } }\n              { StageName: { eq: \"Closed Lost\" } }\n            ]\n          }\n        }\n      ) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n            CloseDate {\n              value\n              displayValue\n            }\n            StageName {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "a0021bc6-a724-4e22-a98f-a4c004dca157",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644578,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a0021bc6-a724-4e22-a98f-a4c004dca157",
                        "name": "Revoke Token",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "token",
                                "value": "{{_accessToken}}",
                                "type": "text",
                                "description": "If an access token is included, Salesforce invalidates it and revokes the token. If a refresh token is included, Salesforce revokes it and any associated access tokens."
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "d9d10dc2-a538-4488-b415-ebfa6ace20fa",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/revoke",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded",
                                "description": null
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "299dcb32-acc4-4c2e-b86c-c03b4e84f252"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "urlencoded": {}
                        }
                    }
                },
                {
                    "model_id": "a180220c-e1dc-4278-9989-bad1ad279785",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136734,
                        "folder": "c1964922-356a-496f-9ea6-e3c036d17fbe",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a180220c-e1dc-4278-9989-bad1ad279785",
                        "name": "Embedded Service Configuration Describe",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves the values for your Embedded Service deployment configuration, including the branding colors, font, and site URL.\n\nYou must be logged in to the account that owns the EmbeddedServiceConfigDeveloperName you are querying.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "EMBEDDED_SERVICE_CONFIG_DEVELOPERNAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/support/embeddedservice/configuration/:EMBEDDED_SERVICE_CONFIG_DEVELOPERNAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "EMBEDDED_SERVICE_CONFIG_DEVELOPERNAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "a21045a1-6c77-4cd6-9cde-e7982300d21f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100817,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a21045a1-6c77-4cd6-9cde-e7982300d21f",
                        "name": "Create Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"authenticationProtocol\": \"Custom\",\n    \"credentials\": {},\n    \"externalCredential\": \"SampleExternalCredential\",\n    \"principalName\": \"SamplePrincipal\",\n    \"principalType\": \"NamedPrincipal\"\n}",
                        "descriptionFormat": null,
                        "description": "Create a credential.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/credential",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a7181c45-5519-4d01-b9d4-263b2ea3a30d"
                        ],
                        "createdAt": "2023-04-26T07:24:57.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "a251c0f0-2178-4595-b34c-8f6577d9fd11",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756935,
                        "folder": "fa9ee1b8-e83c-462e-a369-886b317f1908",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a251c0f0-2178-4595-b34c-8f6577d9fd11",
                        "name": "Get All Query Jobs",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query?isPkChunkingEnabled=false&jobType&concurrencyMode&queryLocator",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "isPkChunkingEnabled",
                                "value": "false",
                                "equals": true,
                                "description": "If set to true, the request only returns information about jobs where PK Chunking is enabled",
                                "enabled": true
                            },
                            {
                                "key": "jobType",
                                "value": "",
                                "equals": false,
                                "description": "BigObjectIngest Classic V2Query",
                                "enabled": true
                            },
                            {
                                "key": "concurrencyMode",
                                "value": "",
                                "equals": false,
                                "description": "serial parallel",
                                "enabled": true
                            },
                            {
                                "key": "queryLocator",
                                "value": "",
                                "equals": false,
                                "description": "use the value from the nextRecordsUrl from the previous set",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "96be60d6-94b4-4aa9-91d9-0d53123cabda"
                        ],
                        "createdAt": "2021-06-14T13:11:42.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z"
                    }
                },
                {
                    "model_id": "a2d3a13f-c234-47ea-9e13-39fac50ce53d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667499,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a2d3a13f-c234-47ea-9e13-39fac50ce53d",
                        "name": "Resources by Version",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "9277211d-cdc5-4fc6-9a6a-cf13a4c03b58",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Lists available resources for the specified API version, including resource name and URI.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "98d51191-17e8-4f2c-8661-58028af56781"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-09-27T16:15:05.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "a3ab6ad9-7893-4b74-a4f6-ff12b27d9314",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136777,
                        "folder": "c1964922-356a-496f-9ea6-e3c036d17fbe",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a3ab6ad9-7893-4b74-a4f6-ff12b27d9314",
                        "name": "Articles Details",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get all online article fields, accessible to the user.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "ARTICLE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/support/knowledgeArticles/:ARTICLE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "channel",
                                "value": "",
                                "description": "Optional, defaults to user\u2019s context. For information on channel values, see Valid channel Values.\nApp: Visible in the internal Salesforce Knowledge application\nPkb: Visible in the public knowledge base\nCsp: Visible in the Customer Portal\nPrm: Visible in the Partner Portal",
                                "enabled": false
                            },
                            {
                                "key": "updateViewStat",
                                "value": "",
                                "description": "Optional, defaults to true. If true, API updates the view count in the given channel as well as the total view count.",
                                "enabled": false
                            },
                            {
                                "key": "isUrlName",
                                "value": "",
                                "description": "Optional, defaults to false. If true, indicates that the last portion of the endpoint is a URL name instead of an article ID. Available in API v44.0 and later",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "ARTICLE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "a530d935-44f8-4099-8c9c-9b89768c27bc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756610,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a530d935-44f8-4099-8c9c-9b89768c27bc",
                        "name": "Upload Job Data",
                        "dataMode": "binary",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: text/csv\n",
                        "method": "PUT",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}/batches",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "text/csv"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "edf1ee21-bf84-42e0-9f2c-b28794d1d6ae"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z",
                        "dataOptions": {
                            "binary": {}
                        }
                    }
                },
                {
                    "model_id": "a53a6981-4175-4784-a568-9d829fbd12eb",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100647,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a53a6981-4175-4784-a568-9d829fbd12eb",
                        "name": "List External Credentials",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get external credentials that the user can authenticate to.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/external-credentials",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "30d39ac1-5da0-4232-88e8-b74ebee6acd6"
                        ],
                        "createdAt": "2023-04-26T07:24:57.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "a5cdd23a-3036-4a2e-b95f-4d4c2855ecdd",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406574,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a5cdd23a-3036-4a2e-b95f-4d4c2855ecdd",
                        "name": "Get a Favorite",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "407fbeef-3be2-40eb-8812-d75fbfda997b",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get a favorite.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "FAVORITE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites/:FAVORITE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FAVORITE_ID",
                                "value": "",
                                "description": "The ID of a favorite"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "03ae5704-59ec-402f-b389-b8c2a44a354c"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "a6966369-ea04-48b7-8164-3d5b9e71672d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136532,
                        "folder": "46349794-c9c6-4e79-906b-2bf7dcf0ecd1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a6966369-ea04-48b7-8164-3d5b9e71672d",
                        "name": "Lightning Toggle Metrics",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Return details about users who switched between Salesforce Classic and Lightning Experience.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_togglemetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/LightningToggleMetrics",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:40.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "a6df5c22-6a59-4575-8cba-7d89fff5722e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 22291801130,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a6df5c22-6a59-4575-8cba-7d89fff5722e",
                        "name": "Validate Quote API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Validate a CPQ quote and return any validation errors.\nAvailable in: Salesforce CPQ Winter \u201919 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_validate_quote.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=QuoteAPI.QuoteValidator",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "QuoteAPI.QuoteValidator",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-12-09T08:13:16.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "a78fcfee-faa6-44e5-8a3c-1ae5503e9f01",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317734,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a78fcfee-faa6-44e5-8a3c-1ae5503e9f01",
                        "name": "Username Password Login - Authorize",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "response_type",
                                "value": "code_credentials",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            },
                            {
                                "key": "scope",
                                "value": "",
                                "description": "Comma seperated list of scopes, optional",
                                "type": "text",
                                "enabled": false
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This request allows named users to use their username and password to get an access token and refresh token from Salesforce in a headless manner. There are two headers that must be included, the first is the `Auth-Request-Type` which must be set to `Named-User`, and then there is the `Authorization` Basic header which contains the base 64 encoded username:password of the user.\n\nThe result of this API call, is an Auth Code, which is then exchanged with another call at the token endpoint.",
                        "variables": null,
                        "headers": "Auth-Request-Type: Named-User\nAuthorization: Basic <username:password>",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/authorize",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Auth-Request-Type",
                                "value": "Named-User",
                                "description": "Required for Username Password Login"
                            },
                            {
                                "key": "Authorization",
                                "value": "Basic <username:password>",
                                "description": "Base 64 encoded username:password"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "a8c373fb-d30a-4756-8b62-7c2844e12610",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531233,
                        "folder": "59ef795f-54b0-4d73-b818-c6a935409f1f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a8c373fb-d30a-4756-8b62-7c2844e12610",
                        "name": "Expression Set Update",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"apiName\": \"myExpressionSet\",\n    \"contextDefinitions\": [],\n    \"name\": \"myExpressionSet2\",\n    \"usageType\": \"Bre\",\n    \"versions\": [\n        {\n            \"apiName\": \"myExpressionSet_V1\",\n            \"enabled\": false,\n            \"id\": \"9QMHo000000LBjOOAW\",\n            \"name\": \"myExpressionSet V1\",\n            \"showExplExternally\": false,\n            \"startDate\": \"2023-09-06T10:35:11.000Z\",\n            \"steps\": [],\n            \"variables\": [],\n            \"versionNumber\": 1\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "# Expression Set Update (PATCH)\n\nEndpoints to read, and update expression set.Resource\n\n```\n/connect/business-rules/expression-set/${expressionSetId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect\n            /business-rules/expressionSet/$11Oxx0000006PcLEAU\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nDELETE, GET, PATCH\n\nResponse body for GET\n\n[Expression Set Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_expression_set_output.htm)\n\nRequest body for PATCH\n\nRoot XML tag\n\nJSON example\n\n```\n{\n  \"name\": \"CTX Mapping ES\",\n  \"apiName\": \"CTX_Mapping_ES_1\",\n  \"description\": \"...\",\n  \"usageType\": \"Bre\",\n  \"contextDefinitions\": [\n    {\n      \"id\": \"11Oxx0000006PcLEAU\"\n    }\n  ],\n  \"versions\": [\n    {\n      \"name\": \"CTX_Mapping_ES_1 V1\",\n      \"apiName\": \"CTX_Mapping_ES_1_V1\",\n      \"description\": \"Sample CTX Mapping\",\n      \"startDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"endDate\": \"2022-11-14T20:31:47.000+0000\",\n      \"versionNumber\": 1,\n      \"rank\": 1,\n      \"enabled\": true,\n      \"showExplExternally\": false,\n      \"steps\": [\n        {\n          \"name\": \"Condition1\",\n          \"description\": \"Condition step for conditions w.r.t product\",\n          \"sequenceNumber\": 1,\n          \"resultIncluded\": true,\n          \"stepType\": \"Condition\",\n          \"conditionExpression\": {\n            \"expression\": \"productName == 'iPhone' && productColor == 'Red'\",\n            \"resultParameter\": \"condition_output__1\"\n          }\n        }\n      ],\n      \"variables\": [\n        {\n          \"name\": \"productName\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productName\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"productColor\",\n          \"collection\": false,\n          \"dataType\": \"Text\",\n          \"description\": \"productColor\",\n          \"input\": true,\n          \"output\": false,\n          \"type\": \"Variable\"\n        },\n        {\n          \"name\": \"condition_output__1\",\n          \"dataType\": \"Boolean\",\n          \"description\": \"condition_output__1\",\n          \"input\": false,\n          \"output\": true,\n          \"resultStep\": \"Condition1\",\n          \"type\": \"Variable\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| apiName | String | Unique name of the expression set. | Required | 58.0 |\n| context\u200bDefinitions | [Context Definition Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_context_definition_input.htm) | List of context definitions in an expression set. | Optional | 58.0 |\n| description | String | Description of the expression set. | Optional | 58.0 |\n| name | String | Name of the expression set. | Required | 58.0 |\n| usage\u200bType | String | Usage type of the expression set.<br><br>Valid values are:<br><br>- AiAccelerator\u200bSubscriberChurn\u200bPrediction\u2014Used for Industries Einstein<br>    <br>- Bre\u2014Used for Business Rules Engine<br>    <br>- CustomLoyalty\u2014Used for Loyalty Management<br>    <br>- DefaultPricing\u2014Used for Pricing Plans in Enterprise Product Catalog (EPC) by Communications Cloud<br>    <br>- Qualification\u2014Used for Industries Communications, Media, and Energy (CME)<br>    <br>- RecordAlert\u2014Used for Financial Services Cloud<br>    <br>- ShipAndDebit\u2014Used for Manufacturing Cloud<br>    <br>- TierProcessing\u2014Used for Loyalty Management<br>    <br>- TransactionJournal\u2014Used for Loyalty Management<br>    <br>- WarrantyClaim\u2014Used for Manufacturing Cloud | Required | 58.0 |\n| versions | [Expression Set Version Input](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_expression_set_version.htm)\\[\\] | List of the expression set versions. | Optional | 58.0 |\n\nResponse body for PATCH\n\n[Expression Set Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_expression_set_output.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "expressionSetId": "9QLHo000000LBjJOAW"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/expression-set/:expressionSetId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "379865bd-8bd8-48af-a851-bc6bd5a8c729",
                                "key": "expressionSetId",
                                "value": "9QLHo000000LBjJOAW",
                                "description": "Expression Set Id: For Example 9QLHo000000LBjEOAW"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c3191ff4-a21d-435a-8154-5f5d69f50ba3",
                            "c682c48f-12c8-4fdb-8c14-a0c43b07eb83",
                            "ddce5e9b-aa2c-41e4-adfe-89a1ed46bfc1",
                            "9d43f246-439f-4260-9181-c4963beef057",
                            "d2cfd323-7389-457f-88d3-8607c29caeda"
                        ],
                        "createdAt": "2023-09-20T11:56:50.000Z",
                        "updatedAt": "2023-09-20T11:56:53.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "a9222e8f-852b-445a-824a-c618df665425",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531585,
                        "folder": "14f5dc82-4bc9-4a71-9679-c066c9ddd4cc",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a9222e8f-852b-445a-824a-c618df665425",
                        "name": "Delete Table",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "# Decision Table Definitions ( DELETE)\n\nDelete a decision table definition associated with a decision table.\n\nResource\n\n```\n/connect/business-rules/decision-table/definitions/${decisionTableId}\n\n ```\n\nResource Example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/decision-table/definitions/0lDxx00000002Ur\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nDELETE\n\nResponse body for DELETE\n\n[Decision Table Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_output.htm)\n\n# Decision Table Output\n\nOutput representation of the decision table details.JSON example for GET, POST, and PATCH\n\n```\n{\n   \"code\":\"200\",\n   \"decisionTable\":{\n      \"collectOperator\":\"Count\",\n      \"conditionCriteria\":\"1 OR 2 OR 3\",\n      \"conditionType\":\"Any\",\n      \"decisionResultPolicy\":\"UniqueValues\",\n      \"description\":\"Eligiblity of Products using Qualification Rules\",\n      \"id\":\"0lDxx00000000BJ\",\n      \"parameters\":[\n         {\n            \"fieldName\":\"IsDeleted\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":1,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"CreatedById\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"usage\":\"Output\"\n         },\n         {\n            \"fieldName\":\"Title\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":3,\n            \"usage\":\"Input\"\n         },\n         {\n            \"fieldName\":\"Id\",\n            \"isGroupByField\":false,\n            \"isPriority\":false,\n            \"operator\":\"Equals\",\n            \"sequence\":2,\n            \"usage\":\"Input\"\n         }\n      ],\n      \"setupName\":\"Product Qualificiation eligibility3\",\n      \"sourceCriteria\":[\n         \n      ],\n      \"sourceObject\":\"AccountFeed\",\n      \"sourceType\":\"SingleSobject\",\n      \"sourceconditionLogic\":\"1 AND 2 AND 3\",\n      \"status\":\"Draft\"\n   },\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\nJSON example for DELETE\n\n```\n{\n   \"code\":\"200\",\n   \"isSuccess\":true,\n   \"message\":\"\"\n}\n\n ```\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| code | String | Response code from the API request. | Small, 58.0 | 58.0 |\n| decisionTable | [Decision Table Definition Output](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_definition_output.htm) | Details of the decision table definition associated with the decision table. | Small, 58.0 | 58.0 |\n| isSuccess | Boolean | Indicates whether the API request is successful (true) or not (false). | Small, 58.0 | 58.0 |\n| message | String | Error message when the API request fails. | Small, 58.0 | 58.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "decisionTableId": "0lDHo0000008Pny"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-table/definitions/:decisionTableId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "94514c7c-e00f-49a0-b289-af5aa17fe52a",
                                "key": "decisionTableId",
                                "value": "0lDHo0000008Pny",
                                "description": "Decision Table Id"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "fda978bf-bc44-419c-ad7c-f3c1bd822286"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:54.000Z"
                    }
                },
                {
                    "model_id": "a9e9aec9-6dc2-4231-ba81-05345fb88014",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667686,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "a9e9aec9-6dc2-4231-ba81-05345fb88014",
                        "name": "Get a Record",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a record\u2019s data.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/records/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "childRelationships",
                                "value": "",
                                "description": "A collection of child relationship names. The records with those child relationship names are included in the response. Specify names in the format ObjectApiName.ChildRelationshipName or ObjectApiName.ChildRelationshipName.FieldApiName. For example, to specify the Contacts relationship on an Account, use Account.Contacts. You can get child relationships one level deep.\nTo get a relationship name, look in the Object Info response body.",
                                "enabled": false
                            },
                            {
                                "key": "fields",
                                "value": "",
                                "description": "Specifies the fields to return. If this property is specified, the response is a union of fields and optionalFields.\nIf the context user doesn\u2019t have access to a field, an error is returned.\n\nIf you\u2019re not sure whether the context user has access to a field and you don\u2019t want the request to fail if they don\u2019t, use the optionalFields parameter.\n\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "layoutTypes",
                                "value": "",
                                "description": "Specifies the fields to return. If this property is specified, the response is a union of layoutTypes, modes, and optionalFields.\nA collection containing any of these values:\nCompact\u2014Use this value to get a layout that contains a record\u2019s key fields.\nFull\u2014(Default) Use this value to get a full layout.",
                                "enabled": false
                            },
                            {
                                "key": "modes",
                                "value": "",
                                "description": "The access mode for the record. This value determines which fields to get from a layout. Layouts have different fields for create, edit, and view modes. For example, formula fields are rendered in view mode, but not in create mode because they\u2019re calculated at run time, like formulas in a spreadsheet. A collection containing any of these values:\nCreate\u2014Use this mode if you intend to build UI that lets a user create a record. This mode is used by the /ui-api/record-defaults/create/<SOBJECT_API_NAME> resource.\nEdit\u2014Use this mode if you intend to build UI that lets a user edit a record. This mode is used by the /ui-api/record-defaults/clone/<RECORD_ID> resource.\nView\u2014(Default) Use this mode if you intend to build UI that displays a record.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "A collection of optional field names. If a field is accessible to the context user, it\u2019s included in the response. If a field isn\u2019t accessible to the context user, it isn\u2019t included in the response, but it doesn\u2019t cause an error.\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The maximum number of child records to return on a page. The default value is 5.",
                                "enabled": false
                            },
                            {
                                "key": "updateMru",
                                "value": "",
                                "description": "To add to the most recently used (MRU) list view, set to true. The default value is false.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "959cd1ec-4c9c-4cac-a3dc-b5a9e090bff9"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "aa909a7c-5275-41c2-8189-46d74c948fd2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003919526,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "aa909a7c-5275-41c2-8189-46d74c948fd2",
                        "name": "GetPBEs(VirtualRouter)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "39b19f57-631a-4cc0-87f8-224b6b0de874",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"VirtualRouterEvergrnPBE\", jsonData.records[0].Id);",
                                        "context.set(\"VirtualRouterTermedPBE\", jsonData.records[1].Id);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select ID, Name, ProductSellingModel.Name from pricebookentry where Product2.Name IN ('Virtual Router') order by ProductSellingModel.Name ASC",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"VirtualRouterEvergrnPBE\", jsonData.records[0].Id);\ncontext.set(\"VirtualRouterTermedPBE\", jsonData.records[1].Id);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select ID, Name, ProductSellingModel.Name from pricebookentry where Product2.Name IN ('Virtual Router') order by ProductSellingModel.Name ASC"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ab2f3e4c-ca76-414e-a3db-e23dea19a1ee",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317975,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ab2f3e4c-ca76-414e-a3db-e23dea19a1ee",
                        "name": "Revoke Token",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "token",
                                "value": "{{_accessToken}}",
                                "description": "Replace with a valid access token or refresh token. ",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This calls the standard revoke endpoint, passing in your access token. This endpoint should be called as part of your logout process to invalidate the access and refresh token. ",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/revoke",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:18.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "abf7e95f-00d8-415d-a029-4a498044ba8f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667810,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "abf7e95f-00d8-415d-a029-4a498044ba8f",
                        "name": "Get Lookup Field Suggestions for a Specified Object",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "a083c979-b4e6-406e-a716-2f43b313d9bf",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "When a user edits a lookup field, use this resource to search for and display suggestions for a specified object. You can search for most recently used matches, for matching names, or for any match in a searchable field. You can also specify lookup filter bindings for dependent lookups.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "FIELD_API_NAME": "",
                            "TARGET_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/lookups/:SOBJECT_API_NAME/:FIELD_API_NAME/:TARGET_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "dependentFieldBindings",
                                "value": "",
                                "description": "The dependent field bindings for dependent lookups. These field bindings represent the lookup filter that restricts the valid values for the field.\nSpecify field bindings in a comma-separated list in the format dependentFieldBindings=<FIELD_API_NAME1>\u200b=[FIELD_VALUE1],<FIELD_API_NAME2>=[FIELD_VALUE2].\n\nTo know whether a field is a dependent lookup, check the Object Info response body for a non-null filteredLookupInfo property. Specify the name and a value for each field in the controllingFields property. Get the field values from the Record response body. Both responses are returned from the /ui-api/record-ui/<RECORD_IDS> resource.",
                                "enabled": false
                            },
                            {
                                "key": "page",
                                "value": "",
                                "description": "The page number. The default value is 1.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The number of items per page. The default value is 25.\n",
                                "enabled": false
                            },
                            {
                                "key": "q",
                                "value": "",
                                "description": "The term the user is searching for.\nWhen searchType=Search, specify at least 2 characters. A wildcard at the end of the search term is implied. For example, q=ca returns Cat and Cats.\n\nWhen searchType=TypeAhead, specify at least 3 characters. A wildcard at the end of the search term is implied. You can\u2019t use a ?.",
                                "enabled": false
                            },
                            {
                                "key": "searchType",
                                "value": "",
                                "description": "The type of search to perform. One of these values:\nRecent\u2014Return most recently used matches.\nSearch\u2014Search for records with searchable fields that match the query term.\nTypeAhead\u2014Search for records whose names start with the query term.\nThe default value is Recent.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "The API name of a source object."
                            },
                            {
                                "key": "FIELD_API_NAME",
                                "value": "",
                                "description": "The API name of a lookup field on the source object."
                            },
                            {
                                "key": "TARGET_API_NAME",
                                "value": "",
                                "description": "The API name of the target (lookup) object."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "1bb9abde-3853-4cb9-8b43-a3b21f25bad3"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-09-27T16:15:09.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "acb86c38-c2da-4ed4-b95a-b83a18da4fab",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667656,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "acb86c38-c2da-4ed4-b95a-b83a18da4fab",
                        "name": "Get a Directory of Supported Objects",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a Salesforce org\u2019s active theme. A theme uses colors, images, and banners to change the overall appearance of Salesforce. Administrators can define themes and switch themes to provide a different look. The User Interface API response matches the Admin\u2019s selection.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/object-info",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d2370f95-2b86-43ca-b397-a89030c2118d"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-09-27T16:15:07.000Z"
                    }
                },
                {
                    "model_id": "ad548909-9f94-4990-8ed3-eb4a28ef5095",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136545,
                        "folder": "46349794-c9c6-4e79-906b-2bf7dcf0ecd1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ad548909-9f94-4990-8ed3-eb4a28ef5095",
                        "name": "Lightning Usage by Page",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Represents standard pages users viewed most frequently in Lightning Experience.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_usagebypagemetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/LightningUsageByBrowserMetrics",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "ae3218e5-8447-42b7-8005-631818122c2c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531745,
                        "folder": "6870b8d9-c32e-4a44-9175-1cefa2d4ed93",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ae3218e5-8447-42b7-8005-631818122c2c",
                        "name": "Retrieve lookup tables",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "# Lookup Tables (GET)\n\nRetrieve lookup tables.Resource\n\n```\n/connect/business-rules/lookup-tables\n\n ```\n\nResource example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/lookup-tables?searchKey=D&usageType=Bre&lookupTypes=DecisionTable,DecisionMatrix\n\n ```\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect/business-rules/lookup-tables?searchKey=D&usageType=Bre\n\n ```\n\nAvailable version59.0Requires ChatterNoHTTP methodsGETRequest parameters for GET\n\n| Parameter Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| lookupTypes | String | Type of lookup table. Valid values are:<br><br>- DecisionMatrix<br>    <br>- DecisionTable | Optional | 59.0 |\n| searchKey | String | The search text entered by the user to retrieve a list of lookup tables. | Required | 59.0 |\n| usageType | String | Usage type of the lookup table. Valid values are:<br><br>- AiAccelerator\u200bSubscriberChurn\u200bPrediction\u2014Used for Industries Einstein<br>    <br>- Bre\u2014Used for Business Rules Engine<br>    <br>- CustomLoyalty\u2014Used for Loyalty Management<br>    <br>- DefaultPricing\u2014Used for Pricing Plans in Enterprise Product Catalog (EPC) by Communications Cloud<br>    <br>- Qualification\u2014Used for Industries Communications, Media, and Energy (CME)<br>    <br>- RecordAlert\u2014Used for Financial Services Cloud<br>    <br>- ShipAndDebit\u2014Used for Manufacturing Cloud<br>    <br>- TierProcessing\u2014Used for Loyalty Management<br>    <br>- TransactionJournal\u2014Used for Loyalty Management<br>    <br>- WarrantyClaim\u2014Used for Manufacturing Cloud | Required | 59.0 |\n\nResponse body for GET[Lookup Tables Result List](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_lookup_tables_result_list.htm)",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/lookup-tables?searchKey=my&usageType=Bre&lookupTypes=DecisionTable",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "searchKey",
                                "value": "my"
                            },
                            {
                                "key": "usageType",
                                "value": "Bre"
                            },
                            {
                                "key": "lookupTypes",
                                "value": "DecisionTable",
                                "description": "Optional: Type of lookup table. Valid values are: DecisionMatrix, DecisionTable"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e3725ee2-bbda-4cc7-9f74-7f0198aa0796"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:55.000Z"
                    }
                },
                {
                    "model_id": "ae719bae-8b5e-426e-90ee-1a462822c4a4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756603,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ae719bae-8b5e-426e-90ee-1a462822c4a4",
                        "name": "Create job",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "72b64079-5e34-431f-90f1-63b541872e5e",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "",
                                        "const response = JSON.parse(pm.response.text())",
                                        "context.set(\"_jobId\", response.id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"object\": \"Asset\",\n    \"operation\": \"update\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n\nconst response = JSON.parse(pm.response.text())\ncontext.set(\"_jobId\", response.id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e2eacc37-2b7d-45ca-82a6-9d283f9da59b"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "ae93bfcf-ada9-4bed-ad99-b51a3d477a57",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879350837,
                        "folder": "18c19817-3a82-4403-92bc-d96276452c77",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ae93bfcf-ada9-4bed-ad99-b51a3d477a57",
                        "name": "Generate Quote Document API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"saver\": \"SBQQ.QuoteDocumentAPI.Save\",\n    \"model\": {\n        \"name\": \"test\",\n        \"quoteId\": \"<SFDC_ID>\",\n        \"templateId\": \"<SFDC_ID>\",\n        \"outputFormat\": \"PDF\",\n        \"language\": \"en_US\",\n        \"paperSize\": \"Default\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Creates and saves a CPQ quote document.\nAvailable in: Salesforce CPQ Winter \u201919 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_generate_proposal.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=QuoteDocumentAPI.SaveProposal",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "QuoteDocumentAPI.SaveProposal",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2020-12-09T16:14:02.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "aeaa2450-957f-4942-986e-5f6e2a03379d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 19444586157,
                        "folder": "f8855583-344f-42b8-badf-4b4e51d22ba3",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "aeaa2450-957f-4942-986e-5f6e2a03379d",
                        "name": "Prediction definition metadata",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get available prediction definitions.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "PREDICTION_DEFINITION_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/smartdatadiscovery/predictionDefinitions/:PREDICTION_DEFINITION_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "PREDICTION_DEFINITION_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "baec160a-fab5-483a-91ac-6d3687d8fc2b"
                        ],
                        "createdAt": "2021-03-04T14:11:26.000Z",
                        "updatedAt": "2021-04-30T07:56:46.000Z"
                    }
                },
                {
                    "model_id": "af7b7320-9fb8-494c-b90e-ffd35fc0b0f3",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405705,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "af7b7320-9fb8-494c-b90e-ffd35fc0b0f3",
                        "name": "Contacts with Account Name",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "abfde7e1-ca5f-412f-8e22-3fd4b098a473"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query contactsByTheirAccountName {\n  uiapi {\n    query {\n      Contact(orderBy: { Account: { Name: { order: DESC } } }) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n            Account {\n              Name {\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": ""
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "b090c54a-1de9-4f27-be55-d5cd7eac6c94",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756843,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b090c54a-1de9-4f27-be55-d5cd7eac6c94",
                        "name": "SObject Collections Update",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"allOrNone\" : false,\n   \"records\" : [{\n      \"attributes\" : {\"type\" : \"Account\"},\n      \"id\" : \"<account-id>\",\n      \"NumberOfEmployees\" : 27000\n   }]\n}",
                        "descriptionFormat": null,
                        "description": "Executes actions on multiple records in one request. Use SObject Collections to reduce the number of round-trips between the client and server. This resource is available in API version 42.0 and later.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/sobjects",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e837b88d-407a-4375-8c1a-cee61581ce1f"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "b0fa7e2c-36af-4a1d-961e-757e2693f185",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136767,
                        "folder": "c1964922-356a-496f-9ea6-e3c036d17fbe",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b0fa7e2c-36af-4a1d-961e-757e2693f185",
                        "name": "Articles List",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get a page of online articles for the given language and category through either search or query.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/support/knowledgeArticles",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "",
                                "description": "Optional, Performs an SOSL search. If the query string is null, empty, or not given, an SOQL query runs.",
                                "enabled": false
                            },
                            {
                                "key": "channel",
                                "value": "",
                                "description": "Optional, defaults to user\u2019s context. For information on channel values, see Valid channel values.\nApp: Visible in the internal Salesforce Knowledge application\nPkb: Visible in the public knowledge base\nCsp: Visible in the Customer Portal\nPrm: Visible in the Partner Portal",
                                "enabled": false
                            },
                            {
                                "key": "categories",
                                "value": "",
                                "description": "Optional, defaults to None. Category group must be unique in each group:category pair, otherwise you get ARGUMENT_OBJECT_PARSE_ERROR",
                                "enabled": false
                            },
                            {
                                "key": "queryMethod",
                                "value": "",
                                "description": "values are: AT, BELOW, ABOVE, ABOVE_OR_BELOW. Only valid when categories are specified, defaults to ABOVE_OR_BELOW",
                                "enabled": false
                            },
                            {
                                "key": "sort",
                                "value": "",
                                "description": "Optional, a sortable field name LastPublishedDate, CreatedDate, Title, ViewScore. Defaults to LastPublishedDate for query and relevance for search.",
                                "enabled": false
                            },
                            {
                                "key": "order",
                                "value": "",
                                "description": "Optional, either ASC or DESC, defaults to DESC. Valid only when sort is valid",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "Optional, defaults to 20. Valid range 1 to 100",
                                "enabled": false
                            },
                            {
                                "key": "pageNumber",
                                "value": "",
                                "description": "Optional, defaults to 1",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "b2dd1834-4f98-4ef9-9c63-c45f138b4ce6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644681,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b2dd1834-4f98-4ef9-9c63-c45f138b4ce6",
                        "name": "OpenID Connect Dynamic Client Registration Endpoint",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": "{\n    \"redirect_uris\": [\n        \"http://localhost\"\n    ],\n    \"response_types\": [\n        \"code\",\n        \"token\",\n        \"id_token\"\n    ],\n    \"grant_types\": [\n        \"authorization_code\",\n        \"implicit\",\n        \"refresh_token\"\n    ],\n    \"application_type\": \"web\",\n    \"contacts\": [\n        \"abc@sf.com\",\n        \"ve7jtb@example.org\"\n    ],\n    \"client_name\": \"Example Olivier\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\nAccept: application/json\nAuthorization: Bearer {{init_access_token}}\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/register",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{init_access_token}}",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "fc1cf234-80df-4bf5-b134-6231794596b2"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "b2fa6634-fb6c-43e5-ad48-cc0f217fb071",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918896,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b2fa6634-fb6c-43e5-ad48-cc0f217fb071",
                        "name": "Get Default Billing Contact",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"defaultBillToContact\", jsonData.records[0].Id);"
                                    ],
                                    "type": "text/javascript",
                                    "id": "97435410-9ce9-4cd7-ae76-6bb5e16a4973"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Id, Name from Contact Where AccountId='{{defaultAccount}}' LIMIT 1",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"defaultBillToContact\", jsonData.records[0].Id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Id, Name from Contact Where AccountId='{{defaultAccount}}' LIMIT 1"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:12:59.000Z",
                        "updatedAt": "2023-08-09T08:12:59.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "b3a86e93-b247-43dc-8a95-2bb649502862",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667790,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b3a86e93-b247-43dc-8a95-2bb649502862",
                        "name": "Delete a Record",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "64545a58-31df-45e9-8a53-ba8046ed22b5",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Update a record's data.\nUser Interface API enforces Salesforce validation rules. If a validation rule fails, the response is an Error with Output.\n\nWhen you make a PATCH request to update a record, make sure that the record hasn\u2019t changed since the user started editing it. To find out whether it\u2019s safe to save a record, pass the If-Modified-Since HTTP header in the request.\n\nAs of API version 43.0, if you pass read-only fields in a request body, the response is an Error with Output.",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/records/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "536dbbcb-2666-4d10-a947-97bbe75c0608"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-09-27T16:15:08.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "b4f7b55f-6ccf-43f8-863d-9795eec963a8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137053,
                        "folder": "405271ed-e8df-47fe-a5ff-b5e753ab15c1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b4f7b55f-6ccf-43f8-863d-9795eec963a8",
                        "name": "Standard Invocable Actions",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns the list of actions that can be statically invoked. You can also get basic information for each type of action.\nThis resource is available in REST API version 32.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/standard",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "b51fb5bf-aa6a-4703-a20c-061fd3557a6a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 19941645568,
                        "folder": "fa9ee1b8-e83c-462e-a369-886b317f1908",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b51fb5bf-aa6a-4703-a20c-061fd3557a6a",
                        "name": "Get Job Query Result",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\nAccept: test/csv\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query/{{_jobId}}/results",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "locator",
                                "value": "",
                                "enabled": false
                            },
                            {
                                "key": "maxRecords",
                                "value": "",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "enabled": true,
                                "key": "Accept",
                                "type": "text",
                                "value": "test/csv"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2021-06-14T13:11:42.000Z",
                        "updatedAt": "2021-06-14T13:11:42.000Z"
                    }
                },
                {
                    "model_id": "b54afb04-e607-4cba-8ccc-45cfed1abec8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33930635831,
                        "folder": "28b8570a-7b88-474c-9e9e-087ec3b06edf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b54afb04-e607-4cba-8ccc-45cfed1abec8",
                        "name": "OAuth Tokens Revoke",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Revokes all tokens available for the external client app. See\u00a0[Refresh Token by App ID](https://developer.salesforce.com/docs/atlas.en-us.246.0.chatterapi.meta/chatterapi/connect_resources_usage_app_id_tokens.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>\n",
                        "method": "DELETE",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/usage/{{_appId}}/tokens",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-12-01T09:03:45.000Z",
                        "updatedAt": "2023-12-01T09:03:45.000Z"
                    }
                },
                {
                    "model_id": "b5980c6d-87d9-4317-ab52-d33d146ffd32",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 35269531159,
                        "folder": "dea8f9c8-72fc-40b6-be71-3fa6cd8bbfec",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b5980c6d-87d9-4317-ab52-d33d146ffd32",
                        "name": "Request OpenAPI Schema",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"resources\": [\n        YOUR_SOBJECT_SELECTORS\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Requests an Open API document for the selected SObject REST API resources.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/async/specifications/oas3",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d032fb58-0cec-44af-a908-05cfebdc3990"
                        ],
                        "createdAt": "2024-02-26T14:10:56.000Z",
                        "updatedAt": "2024-02-26T14:10:56.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "b667fedb-33b0-4588-93ed-1dbb1b7ce3b9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100416,
                        "folder": "ff3ea004-70c0-4c5a-b9dd-80ac2e0184d9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b667fedb-33b0-4588-93ed-1dbb1b7ce3b9",
                        "name": "File Information - Delete",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "9031c61e-ea73-4ee2-99a5-63681f9cfb57",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "227ed560-c879-428d-b775-451f76be367b",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get information about a specified file, including references to external files. Upload a new version of an existing file, including references to external files. Rename a file, move a file to a different folder, and delete a file.\nTo upload a new version of an existing file, make a POST request. Upload the new version as a binary part in a multipart/form-data request. See Uploading Binary Files. To upload a new file to the Files home, use /connect/files/users/me.Get information about a specified file, including references to external files.\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_files_information.htm",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "FILE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/files/:FILE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FILE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "807bb8e8-bb70-4ca1-9dc0-8b923f338348"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "b6d3850c-b266-4370-8446-31f3fe9ceb50",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644414,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b6d3850c-b266-4370-8446-31f3fe9ceb50",
                        "name": "User Agent Flow",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "02652872-4a09-4e09-8f7b-2b753f7eca23",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "const id = jsonData.id.split('/');",
                                        "",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_accessToken\", jsonData.access_token);",
                                        "context.set(\"_refreshToken\", jsonData.refresh_token);",
                                        "context.set(\"_endpoint\", jsonData.instance_url);",
                                        "context.set(\"_userId\", id.pop());",
                                        "context.set(\"_orgId\", id.pop());"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/authorize?response_type=token&client_id={{clientId}}&redirect_uri={{redirectUrl}}&display=touch&login_hint&nonce=awesome",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\nconst id = jsonData.id.split('/');\n\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_accessToken\", jsonData.access_token);\ncontext.set(\"_refreshToken\", jsonData.refresh_token);\ncontext.set(\"_endpoint\", jsonData.instance_url);\ncontext.set(\"_userId\", id.pop());\ncontext.set(\"_orgId\", id.pop());",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "response_type",
                                "value": "token",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "display",
                                "value": "touch",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "login_hint",
                                "value": "",
                                "equals": false,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "nonce",
                                "value": "awesome",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e673f83d-0e86-410e-8a77-a20048cdc392"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:22.000Z"
                    }
                },
                {
                    "model_id": "b7541c74-0fb7-4874-b48b-c935cae78244",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406914,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b7541c74-0fb7-4874-b48b-c935cae78244",
                        "name": "Get Most Recently Used List View Metadata",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "612c2e6c-9710-4d66-ba22-d318e21b4e48",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns metadata for an object\u2019s most recently viewed (MRU) list view.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/mru-list-info/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "944f0ca9-c2bf-4d18-8e28-5b691608c8a6"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "b7bf4b6c-a92c-4750-bd53-3dededc317a5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094801299,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b7bf4b6c-a92c-4750-bd53-3dededc317a5",
                        "name": "SOAP Login",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "4378f8ae-6354-4578-9fef-6f8b7e9e5c67",
                                    "exec": [
                                        "const result = xml2Json(pm.response.text())[\"soapenv:Envelope\"][\"soapenv:Body\"].loginResponse.result;",
                                        "const url = result.serverUrl.split(\"/\");",
                                        "",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_accessToken\", result.sessionId);",
                                        "context.set(\"_endpoint\", url[0] + \"//\" + url[2]);",
                                        "context.set(\"_userId\", result.userId);",
                                        "context.set(\"_orgId\", result.userInfo.organizationId);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<env:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <env:Body>\n    <n1:login xmlns:n1=\"urn:partner.soap.sforce.com\">\n      <n1:username><![CDATA[{{username}}]]></n1:username>\n      <n1:password><![CDATA[{{password}}{{secretToken}}]]></n1:password>\n    </n1:login>\n  </env:Body>\n</env:Envelope>",
                        "descriptionFormat": null,
                        "description": "Logs in to the login server and starts a client session.\n\nMake sure to set the `url`, `username`, `password` and `secretToken` environment variables before sending this request.\nOn success, the request will automatically collect your authentication token for later use.",
                        "variables": null,
                        "headers": "Content-Type: text/xml; charset=UTF-8\nSOAPAction: login\nAccept: text/xml\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/Soap/u/{{version}}",
                        "preRequestScript": null,
                        "tests": "const result = xml2Json(pm.response.text())[\"soapenv:Envelope\"][\"soapenv:Body\"].loginResponse.result;\nconst url = result.serverUrl.split(\"/\");\n\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_accessToken\", result.sessionId);\ncontext.set(\"_endpoint\", url[0] + \"//\" + url[2]);\ncontext.set(\"_userId\", result.userId);\ncontext.set(\"_orgId\", result.userInfo.organizationId);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "text/xml; charset=UTF-8",
                                "type": "text"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "login",
                                "type": "text"
                            },
                            {
                                "key": "Accept",
                                "value": "text/xml",
                                "description": null,
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5d0d0271-5262-4d60-8da1-3c713c4adab6"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-06-15T17:45:00.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "b85ab9cc-e450-42b8-b6e7-a424651e486f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667514,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b85ab9cc-e450-42b8-b6e7-a424651e486f",
                        "name": "AppMenu",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of items in either the Salesforce app drop-down menu or the Salesforce for Android, iOS, and mobile web navigation menu.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/appMenu/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "ec3d0450-0a53-4ba5-af84-2a3f616b72a3"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z"
                    }
                },
                {
                    "model_id": "b935872a-f593-43f7-89a8-5440f8694c8a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644763,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "b935872a-f593-43f7-89a8-5440f8694c8a",
                        "name": "Bulk Spec",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "Salesforce Field,Csv Header,Value,Hint\nName,Full Name,,",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nContent-Type: text/csv\ncharset: UTF-8\nAccept-Encoding: gzip\nContent-Encoding: gzip\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/async/{{version}}/job/{{_jobId}}/spec",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "text/csv"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip"
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "cfdcbd31-1249-4ea8-8ee5-2102729011ac"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "bac550e0-a6ec-48fc-989d-828fbc3ddf7e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920814,
                        "folder": "131daa8d-24fe-44e6-a11f-7aa9dd1699e5",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bac550e0-a6ec-48fc-989d-828fbc3ddf7e",
                        "name": "Initiate Renewal",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n  \"assetIds\": {\n    \"assetIdArray\": [\n      \"{{assetID}}\"\n    ]\n  }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/asset-management/assets/collection/actions/initiate-renewal",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:03.000Z",
                        "updatedAt": "2023-08-09T08:13:03.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "bb7dd17b-8e1d-470e-80b0-26440781c864",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426488,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bb7dd17b-8e1d-470e-80b0-26440781c864",
                        "name": "List event channels",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/query/?q=SELECT Id, DeveloperName, MasterLabel, ChannelType FROM PlatformEventChannel",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "SELECT Id, DeveloperName, MasterLabel, ChannelType FROM PlatformEventChannel"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5afcd329-0e20-4d9d-8eed-3b541563a27b"
                        ],
                        "createdAt": "2023-06-15T17:45:05.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z"
                    }
                },
                {
                    "model_id": "bda687f5-55aa-44e3-8ba1-abe9455c38b0",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136797,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bda687f5-55aa-44e3-8ba1-abe9455c38b0",
                        "name": "Describe Global",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists the available objects and their metadata for your organization\u2019s data. In addition, it provides the organization encoding, as well as the maximum batch size permitted in queries.\n\nYou can use the If-Modified-Since header with this resource, with the date format EEE, dd MMM yyyy HH:mm:ss z. When using this header, if no available object\u2019s metadata has changed since the provided date, a 304 Not Modified status code is returned with no response body.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "bdfef494-b14d-4f22-8b84-a5f0d5b20bb1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802951,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bdfef494-b14d-4f22-8b84-a5f0d5b20bb1",
                        "name": "Get event relay",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "EVENT_RELAY_CONFIG_ID": "7k2RM000000008ZYAQ"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/EventRelayConfig/:EVENT_RELAY_CONFIG_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "92cce0a2-9892-4049-a830-4013e4d76bc3",
                                "key": "EVENT_RELAY_CONFIG_ID",
                                "value": "7k2RM000000008ZYAQ"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "be610152-af12-4e3d-950d-9e6f191d9933",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920577,
                        "folder": "0382b6d8-acdb-42fd-b4e6-9dfc2abc9a06",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "be610152-af12-4e3d-950d-9e6f191d9933",
                        "name": "Create or Update Quote",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"pricingPref\": \"skip\",\n    \"graph\": {\n        \"graphId\": \"refQuoteGraph\",\n        \"records\": [\n            {\n                \"referenceId\": \"refQuote\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"Quote\",\n                        \"method\": \"POST\"\n                    },\n                    \"Name\": \"Quote_{{$randomCompanyName}}\",\n                    \"Pricebook2Id\": \"{{standardPricebook}}\"                    \n                }\n            },\n            {\n                \"referenceId\": \"refQuoteLineItem1\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"QuoteLineItem\",\n                        \"method\": \"POST\"\n                    },\n                    \"QuoteId\": \"@{refQuote.id}\",\n                    \"PricebookEntryId\": \"{{VirtualRouterTermedPBE}}\",\n                    \"Product2Id\": \"{{VirtualRouterProduct}}\",\n                    \"Quantity\": 5.0,\n                    \"UnitPrice\": 35.0,\n                    \"PeriodBoundary\": \"Anniversary\",\n                    \"BillingFrequency\": \"Monthly\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"EndDate\": \"2024-01-01\"                    \n                }\n            },\n            {\n                \"referenceId\": \"refQuoteLineItem2\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"QuoteLineItem\",\n                        \"method\": \"POST\"\n                    },\n                    \"QuoteId\": \"@{refQuote.id}\",\n                    \"PricebookEntryId\": \"{{SLABronzeEvergrnMonthPBE}}\",\n                    \"Product2Id\": \"{{SLA_BronzeProduct}}\",\n                    \"Quantity\": 1.0,\n                    \"UnitPrice\": 10.0,\n                    \"PeriodBoundary\": \"DayOfPeriod\",\n                    \"PeriodBoundaryDay\": 4,\n                    \"BillingFrequency\": \"Monthly\",\n                    \"StartDate\": \"2023-01-01\"\n                }\n            }\n\n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "This example creates a quote for the following products.\n\n- 5 Virtual Routers sold on a 1-year termed subscription at $35/item\n- 1 Bronze Service Level Agreement sold on an evergreen subscription at $10/month\n    \n\nSee [place quote](https://developer.salesforce.com/docs/revenue/subscription-management/references/quotes?meta=Create+or+update+a+quote+with+place+quote).",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/quotes/actions/place",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "be81be24-c866-4b8d-a091-2c8936254fef",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644619,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "be81be24-c866-4b8d-a091-2c8936254fef",
                        "name": "OpenID Connect Discovery Endpoint",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/.well-known/openid-configuration",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "6187adca-c09e-470b-9db0-77c29387f1e1"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z"
                    }
                },
                {
                    "model_id": "bef7859f-e763-405b-a71b-b90d0cb1ca6f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101937,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bef7859f-e763-405b-a71b-b90d0cb1ca6f",
                        "name": "Group Members\u2014Private",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "ac69fd3e-1ae9-4dfb-b509-d81b6d280303",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "8ad5ec81-7ef1-414e-ac0f-1f08e60bf336",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Request membership in a private group or get the status of requests to a join a private group.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_groups_GroupMembersRequests.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "GROUP_ID": "0F9..."
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/groups/:GROUP_ID/members/requests",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "status",
                                "value": "Accepted",
                                "description": "Optional. If you include this parameter, results are filtered to include those that match the specified status. Valid values:\nAccepted\nDeclined\nPending",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "GROUP_ID",
                                "value": "0F9...",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "16fa6248-386b-4d12-9ec5-3301d01b8070"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "bf257e30-3bd3-47c9-bc5b-35eb7f8730f9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136973,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bf257e30-3bd3-47c9-bc5b-35eb7f8730f9",
                        "name": "SObject PlatformAction",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "PlatformAction is a virtual read-only object. It enables you to query for actions displayed in the UI, given a user, a context, device format, and a record ID. Examples include standard and custom buttons, quick actions, and productivity actions.\nReturns the description of the PlatformAction.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/PlatformAction",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "bf509b36-73ff-4ed5-8984-cd3f892de5f4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644394,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "bf509b36-73ff-4ed5-8984-cd3f892de5f4",
                        "name": "JWT Bearer Token Flow",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
                                "type": "text"
                            },
                            {
                                "key": "assertion",
                                "value": "",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "3226662b-4688-4fae-bd1d-54baa3afd83b",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "const id = jsonData.id.split('/');",
                                        "",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_accessToken\", jsonData.access_token);",
                                        "context.set(\"_endpoint\", jsonData.instance_url);",
                                        "context.set(\"_userId\", id.pop());",
                                        "context.set(\"_orgId\", id.pop());"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "JWT Auth",
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\nconst id = jsonData.id.split('/');\n\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_accessToken\", jsonData.access_token);\ncontext.set(\"_endpoint\", jsonData.instance_url);\ncontext.set(\"_userId\", id.pop());\ncontext.set(\"_orgId\", id.pop());",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "48e20ad6-0d18-45eb-8ba6-68edf08d2421"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-17T14:18:22.000Z",
                        "dataOptions": {
                            "urlencoded": {}
                        }
                    }
                },
                {
                    "model_id": "c0aad2d9-a260-4e39-9415-ed1b1af2f542",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644533,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c0aad2d9-a260-4e39-9415-ed1b1af2f542",
                        "name": "Device Flow 1",
                        "dataMode": "params",
                        "data": [
                            {
                                "key": "response_type",
                                "value": "device_code",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "format",
                                "value": "json",
                                "type": "text"
                            },
                            {
                                "key": "scope",
                                "value": "full refresh_token",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "e015027b-5cda-4842-b259-7afe5da6c113",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_deviceCode\", jsonData.device_code);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_deviceCode\", jsonData.device_code);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "11328c34-87a1-41be-9b83-f4c8653b0752"
                        ],
                        "createdAt": "2023-04-20T07:50:22.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "params": null
                        }
                    }
                },
                {
                    "model_id": "c1691b45-ecce-4afa-8793-386637e3bcd2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802858,
                        "folder": "5defa1ba-7991-433f-8270-e798f19a2ea6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c1691b45-ecce-4afa-8793-386637e3bcd2",
                        "name": "Get named credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "NAMED_CREDENTIAL_ID": "0XA4H000000TNRhWAO"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/NamedCredential/:NAMED_CREDENTIAL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "73572bb8-2268-4135-b0da-04ffe2aff4d9",
                                "key": "NAMED_CREDENTIAL_ID",
                                "value": "0XA4H000000TNRhWAO"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "c270f7fa-788b-40be-9089-15eda8a9115e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644604,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c270f7fa-788b-40be-9089-15eda8a9115e",
                        "name": "User Info",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/userinfo",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a324b0c1-77da-4f83-b6f1-fce031a2ec07"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z"
                    }
                },
                {
                    "model_id": "c340e5c5-64e2-489f-bf33-d1688b6f8513",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 18772491215,
                        "folder": "f8855583-344f-42b8-badf-4b4e51d22ba3",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c340e5c5-64e2-489f-bf33-d1688b6f8513",
                        "name": "Prediction definitions",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get available prediction definitions.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/smartdatadiscovery/predictionDefinitions",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [
                            "7aa66c41-d925-4c5f-8e15-6c81d3dd5b52"
                        ],
                        "createdAt": "2021-03-04T14:11:26.000Z",
                        "updatedAt": "2021-03-04T14:11:26.000Z"
                    }
                },
                {
                    "model_id": "c3a5a981-1e72-41e4-a22d-dc83602e98bc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101398,
                        "folder": "aecf1654-6eeb-4dac-99ee-c1074ad4dfc0",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c3a5a981-1e72-41e4-a22d-dc83602e98bc",
                        "name": "User Profile Feed Elements",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "de5449ec-ea7d-412a-ad45-29887b502bc6",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "e7dc9499-68a9-44d6-8938-325cd1c3cebe",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns feed elements created when a user changes records that can be tracked in a feed, feed elements whose parent is the user, and feed elements that mention the user. This feed is different than the news feed, which returns more feed items, including group updates. You can post feed items to the user-profile feed. You can get another user\u2019s user profile feed.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resource_feeds_user_profile.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "USER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/feeds/user-profile/:USER_ID/feed-elements",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "USER_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f585f9a9-a612-4b58-bef8-e2dbe3751098"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:58.000Z"
                    }
                },
                {
                    "model_id": "c3fe5e82-4115-473e-8cb5-32682613e80d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928413,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c3fe5e82-4115-473e-8cb5-32682613e80d",
                        "name": "Get Tooling Describe",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists the available Tooling API objects and their metadata.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4438f8b8-b46a-43e6-9aa1-9908d63c007e"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z"
                    }
                },
                {
                    "model_id": "c4cb9422-6dd1-49e9-b1dd-b5810fab8d21",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 22291801608,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c4cb9422-6dd1-49e9-b1dd-b5810fab8d21",
                        "name": "Read Quote API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "The Read Quote API reads a quote from a CPQ quote ID.\nAvailable in: Salesforce CPQ Summer \u201916 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_read_quote.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?reader=SBQQ.QuoteAPI.QuoteReader&uid=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "reader",
                                "value": "SBQQ.QuoteAPI.QuoteReader",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-12-09T08:13:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "c5348950-3f4c-4f8f-b06c-bbcf02700c30",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136695,
                        "folder": "dad9f4a8-ba9f-4893-8f64-8a787630735e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c5348950-3f4c-4f8f-b06c-bbcf02700c30",
                        "name": "Recently Viewed Items",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Gets the most recently accessed items that were viewed or referenced by the current user. Salesforce stores information about record views in the interface and uses it to generate a list of recently viewed and referenced records, such as in the sidebar and for the auto-complete options in search.\n\nThis resource only accesses most recently used item information. If you want to modify the list of recently viewed items, you\u2019ll need to update recently viewed information directly by using a SOQL Query with a FOR VIEW or FOR REFERENCE clause.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_recent_items.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/listviews/recent?limit",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "limit",
                                "value": ""
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "c6518d8e-b706-431b-8335-5e6d552d5d6e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136390,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c6518d8e-b706-431b-8335-5e6d552d5d6e",
                        "name": "Search",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Executes the specified SOSL search. The search string must be URL-encoded.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/search?q",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "",
                                "equals": false,
                                "description": "A SOSL statement that is properly URL-encoded.",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "c6aae049-ca47-48be-b2b8-c3b30272667b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136523,
                        "folder": "a18ced53-8c49-40c8-a8d6-bf3f55d8ee54",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c6aae049-ca47-48be-b2b8-c3b30272667b",
                        "name": "Process Rules",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of all active workflow rules. If a rule has actions, the actions will be listed under the rule. Can also be used to trigger all workflow rules that are associated with a specified record. The actions for a rule are only fired if the rule\u2019s criteria is met. When using a POST request, if anything fails, the whole transaction is rolled back.\n\nCross-object workflow rules cannot be invoked using the REST API.\n\nTo get a list of the workflow rules or to trigger one or more workflow rules, the URI is: /vXX.X/process/rules/\nTo get the rules for a particular object: /vXX.X/process/rules/SObjectName\nTo get the metadata for a particular rule: /vXX.X/process/rules/SObjectName/workflowRuleId\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_process_rules.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/process/rules",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "c6ec531d-2021-453a-9fa9-19d093d5e5f1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756922,
                        "folder": "fa9ee1b8-e83c-462e-a369-886b317f1908",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c6ec531d-2021-453a-9fa9-19d093d5e5f1",
                        "name": "Get Job Info Query",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "enabled": false,
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f076b1cb-637e-4a72-a29f-4587f5dd0742"
                        ],
                        "createdAt": "2021-06-14T13:11:42.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z"
                    }
                },
                {
                    "model_id": "c865ec75-494d-48a1-bc4e-555fec53b003",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667532067,
                        "folder": "fe83d2c1-74e5-406a-8435-6adafe40108a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c865ec75-494d-48a1-bc4e-555fec53b003",
                        "name": "Invoke",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"datasetLinkName\": \"transactionMapping\",\n    \"conditions\": [\n        {\n            \"conditionsList\": [\n                {\n                    \"fieldName\": \"Product__c\",\n                    \"value\": \"Nike\",\n                    \"operator\": \"Matches\" //Operator is optional\n                },\n                {\n                    \"fieldName\": \"Price__c\",\n                    \"value\": 1000,\n                    \"operator\": \"GreaterThan\"\n                }\n            ]\n        },\n        {\n            \"conditionsList\": [\n                {\n                    \"fieldName\": \"Product__c\",\n                    \"value\": \"Adidas\",\n                    \"operator\": \"Matches\" //Operator is optional\n                },\n                {\n                    \"fieldName\": \"Price__c\",\n                    \"value\": 1500,\n                    \"operator\": \"GreaterThan\"\n                }\n            ]\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "# Invoke Decision Tables\n\nInvoke a decision table by passing multiple input conditions within the same request.Resource\n\n```\n/connect/business-rules/decision-table/lookup/${decisionTableId}\n\n ```\n\nResource example\n\n```\nhttps://yourInstance.salesforce.com/services/data/v59.0/connect\n/business-rules/decision-table/lookup/${0lDD2000000004NMAQ}\n\n ```\n\nAvailable version\n\n58.0\n\nRequires Chatter\n\nNo\n\nHTTP methods\n\nPOST\n\nRequest body for POST\n\nJSON example\n\n```\n{\n   \"datasetLinkName\" : \"transactionMapping\",\n   \u201cconditions\u201d :[\n      {\n        \u201cconditionsList\u201d: [\n          {\n              \"fieldName\": \"Product__c\",\n              \"value\": \"Nike\",\n              \"operator\": \"Matches\" //Operator is optional\n          },\n          {\n              \"fieldName\": \"Price__c\",\n              \"value\": 1000,\n              \"operator\": \"GreaterThan\"\n          }\n        ]\n      },\n      {\n        \u201cconditionsList\u201d: [\n          {\n              \"fieldName\": \"Product__c\",\n              \"value\": \"Adidas\",\n              \"operator\": \"Matches\" //Operator is optional\n          },\n          {\n              \"fieldName\": \"Price__c\",\n              \"value\": 1500,\n              \"operator\": \"GreaterThan\"\n          }\n        ]\n\n ```\n\nProperties\n\n| Name | Type | Description | Required or Optional | Available Version |\n| --- | --- | --- | --- | --- |\n| conditions | [Decision Table Condition List](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_requests_decision_table_condition_list_input.htm) | The list of decision table conditions on which the decision table executes and provides outcomes. | Required | 58.0 |\n| datasetLinkName | String | The API name of the dataset link provided as an input for the decision table execution. | Optional | 58.0 |\n\nResponse body for POST\n\n[Decision Table Bulk Outcome](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_bulk_outcome.htm)\n\n# Decision Table Bulk Outcome\n\nOutput representation of the decision table bulk look-up.\n\n| Property Name | Type | Description | Filter Group and Version | Available Version |\n| --- | --- | --- | --- | --- |\n| outputs | [Decision Table Outcome](https://developer.salesforce.com/docs/atlas.en-us.industries_reference.meta/industries_reference/connect_responses_decision_table_outcome.htm) | List of the output of the Decision Table bulk lookup. | Small, 58.0 | 58.0 |",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "decisionTableId": "0lDHo0000008Po3"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/business-rules/decision-table/lookup/:decisionTableId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "18fba86f-4d63-44f1-a813-8de4417e4cdd",
                                "key": "decisionTableId",
                                "value": "0lDHo0000008Po3",
                                "description": "Decision Table Id"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "4016045d-c18d-4242-8cae-d25977d74541",
                            "48f5e16a-2e32-4113-9882-05fca7377046",
                            "caab64df-ff4a-42e3-82c7-5b093153981f"
                        ],
                        "createdAt": "2023-09-20T11:56:54.000Z",
                        "updatedAt": "2023-09-20T11:56:56.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "c8b12b42-c92b-4998-9819-68654327098f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771101738,
                        "folder": "c56a8e29-0e41-44bf-8d93-c53ba2f85caa",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c8b12b42-c92b-4998-9819-68654327098f",
                        "name": "Comment",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "4595b8aa-c5b0-4d48-ac58-57cb0ebb8c52",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "8f1cdb8b-4f29-4d6c-8898-928a99e3f86e",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"body\": {\n        \"messageSegments\": [\n            {\n                \"type\": \"Text\",\n                \"text\": \"Editing a comment\"\n            }\n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Get information about, edit, or delete a comment.\nTo post a comment, use Feed Elements Capability, Comments Items.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_comments_specific.htm#connect_resources_comments_specific",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "COMMENT_ID": "0D7..."
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/comments/:COMMENT_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "COMMENT_ID",
                                "value": "0D7...",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "dc5e7791-a6bc-4871-a59f-37d2890ec31d"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "c8f4f6fb-5e0b-4a1d-a3cb-8115d953e5d8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928529,
                        "folder": "d8d52cc2-f78c-4a2e-90cd-8338dc74cf8d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c8f4f6fb-5e0b-4a1d-a3cb-8115d953e5d8",
                        "name": "Delete Sandbox",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Deletes a sandbox.",
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "SANDBOX_INFO_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/SandboxInfo/:SANDBOX_INFO_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SANDBOX_INFO_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0baab751-4697-464c-bf9e-1fdee33e990f"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z"
                    }
                },
                {
                    "model_id": "c9a1a6f7-015e-47dc-99b5-5f2a9234c9a3",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405765,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "c9a1a6f7-015e-47dc-99b5-5f2a9234c9a3",
                        "name": "Opportunities Closing Soon (Explicit AND)",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "de96c32d-515b-4da8-9daf-bff2d8598b45"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "graphqlModeData": {
                            "query": "query opportunitiesClosingSoonExplicitAND($month: Long) {\n  uiapi {\n    query {\n      Opportunity(\n        where: {\n          and: [\n            { StageName: { eq: \"Negotiation/Review\" } }\n            { CloseDate: { CALENDAR_MONTH: { value: { eq: $month } } } }\n          ]\n        }\n      ) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n            StageName {\n              value\n            }\n            CloseDate {\n              value\n              displayValue\n            }\n            Description {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": "{\n    \"month\": 10\n}"
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "ca109c05-54fe-4d82-9139-94f9de428fe7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928386,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ca109c05-54fe-4d82-9139-94f9de428fe7",
                        "name": "Tooling Run Tests Async",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"classNames\": \"comma-separated list of class names\",\n    \"classids\": \"comma-separated list of class IDs\",\n    \"suiteNames\": \"comma-separated list of test suite names\",\n    \"suiteids\": \"comma-separated list of test suite IDs\",\n    \"maxFailedTests\": \"integer value\",\n    \"testLevel\": \"TestLevel enum value\",\n    \"skipCodeCoverage\": \"boolean value\"\n}\n\nor \n\n{\n    \"tests\": [\n        {\n            \"className\": \"YourClassName\",\n            \"testMethods\": [\n                \"testMethod1\",\n                \"testMethod2\",\n                \"testMethod3\"\n            ]\n        }\n    ],\n    \"maxFailedTests\": \"integer value\",\n    \"testLevel\": \"TestLevel enum value\",\n    \"skipCodeCoverage\": \"boolean value\"\n}\n",
                        "descriptionFormat": null,
                        "description": "Runs one or more methods within one or more Apex classes, using the asynchronous test execution mechanism. In the request body, you can specify test class names and IDs, suite names and IDs, the maximum number of failed tests to allow, and the test level, as comma-separated lists or as an array. You can also indicate whether to opt out of collecting code coverage information during the test run (available in API version 43.0 and later).",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/runTestsAsynchronous",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "8751bad0-4c1f-4dbb-8231-06bcc413bfac"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2024-01-02T11:32:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "cbb0ccbf-32da-4841-b5a1-ca3dcf00bc7a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136911,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cbb0ccbf-32da-4841-b5a1-ca3dcf00bc7a",
                        "name": "SObject Blob Retrieve",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves the specified blob field from an individual record.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": "",
                            "BLOB_FIELD": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:RECORD_ID/:BLOB_FIELD",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "BLOB_FIELD",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "cc0de9ce-202d-4e32-a8fe-f55dffc09b29",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249407166,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cc0de9ce-202d-4e32-a8fe-f55dffc09b29",
                        "name": "Get Personalized Navigation Items",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "ecb330b8-0fcb-4962-add4-0231320df3e6",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get a user\u2019s personalized navigation items (tabs).",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "APP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/apps/:APP_ID/user-nav-items",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "Large",
                                "description": "The form factor for each app that the user has access to (`Large`, `Medium` or `Small`)",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "APP_ID",
                                "value": "",
                                "description": "Application ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "90c136b3-7e9b-400a-8db2-feec08afc2b4",
                            "b0fb254c-ed64-4de6-b683-184a26f6f245"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "cc262546-7912-46ff-a4c2-cce9f9e78fa3",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136982,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cc262546-7912-46ff-a4c2-cce9f9e78fa3",
                        "name": "SObject Quick Actions",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of actions and their details. This resource is available in REST API version 28.0 and later. When working with actions, also refer to Quick Actions.\n\nTo return a specific object\u2019s actions as well as global actions, use: /vXX.X/sobjects/object/quickActions/\nTo return a specific action, use /vXX.X/sobjects/object/quickActions/{action name}\nTo return a specific action\u2019s descriptive detail, use /vXX.X/sobjects/object/quickActions/{action name}/describe/\nTo return a specific action\u2019s default values, including default field values, use services/data/vXX.X/sobjects/object/quickActions/{action name}/defaultValues/\nIn API version 28.0, to evaluate the default values for an action, use vXX.X/sobjects/object/quickActions/{action name}/defaultValues/{parent id}\nIn API version 29.0 and greater, to evaluate the default values for an action, use vXX.X/sobjects/object/quickActions/{action name}/defaultValues/{context id}\nThis returns the default values specific to the {context id} object.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/quickActions/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "ccd73723-daaa-433c-ae91-17c8fa24646e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406505,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ccd73723-daaa-433c-ae91-17c8fa24646e",
                        "name": "Get Lightning Page Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "bb7a60d1-5007-479a-b9bf-d76976176df4",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on Lightning pages (FlexiPages).",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "FLEXIPAGE_NAMES": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/flexipage/:FLEXIPAGE_NAMES",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FLEXIPAGE_NAMES",
                                "value": "",
                                "description": "A Lightning page name, or a comma-delimited list of Lightning page names."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "31c7217c-feae-4ec9-95a6-19a0635046e2"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "cd357c51-8b6e-4e59-aa4a-e2d077fb6e39",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920549,
                        "folder": "9beb8ae0-1f53-4782-9f9d-f17d6f2f09a2",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cd357c51-8b6e-4e59-aa4a-e2d077fb6e39",
                        "name": "Calculate Price (New Sale with Discounts)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"listPricebookId\": \"{{standardPricebook}}\",\n    \"pricingFlow\": \"GET_PRICE_USING_CONTEXT\",\n    \"graph\": {\n        \"graphId\": \"1\",\n        \"records\": [\n            {\n                \"referenceId\": \"ref_sales_txn\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionShape\"\n                    },\n                    \"CurrencyIsoCode\": \"USD\"\n                }\n            },\n            {\n                \"referenceId\": \"Item_1_Evergreen\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"ProductId\": \"{{SLA_BronzeProduct}}\",\n                    \"ProductSellingModelId\": \"{{EvergreenMonthlyPSM}}\",\n                    \"Quantity\": 3.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                    \"CurrencyIsoCode\": \"USD\"\n                }\n            },\n            {\n                \"referenceId\": \"Item_2_Termed\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"EndDate\": \"2024-01-01\",\n                    \"ProductId\": \"{{VirtualRouterProduct}}\",\n                    \"ProductSellingModelId\": \"{{TermMonthlyPSM}}\",\n                    \"Quantity\": 100.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                    \"CurrencyIsoCode\": \"USD\"\n                }\n            },\n            {\n                \"referenceId\": \"Order_Level_Discount\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"PriceAdjustmentGroupShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"AdjustmentType\": \"AdjustmentPercentage\",\n                    \"AdjustmentValue\": -20,\n                    \"AdjustmentSource\": \"Discretionary\"\n                }\n            },\n            {\n                \"referenceId\": \"Line_Level_Discount\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"PriceAdjustmentItemShape\"\n                    },\n                    \"SalesTransactionItemShapeId\": \"@{Item_1_Evergreen.Id}\",\n                    \"AdjustmentType\": \"AdjustmentAmount\",\n                    \"AdjustmentValue\": -10,\n                    \"AdjustmentSource\": \"Discretionary\",\n                    \"AdjustmentAmountScope\": \"Unit\"\n                }\n            }                        \n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Calculate the price of a sales transaction, including a top-level and a line-level discount. The top-level discount specifies 20% off the entire sales transaction, while the line-level discount specifies $10 off the sales transaction item.\n\nIn this example, the sales transaction is an order and the sales transaction item is an order item.",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/pricing/salestransaction/actions/calculate-price",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "ce2b9b4e-e704-4de8-85cf-b90a3b19482e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136667,
                        "folder": "dad9f4a8-ba9f-4893-8f64-8a787630735e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ce2b9b4e-e704-4de8-85cf-b90a3b19482e",
                        "name": "List View Describe",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns detailed information about a list view, including the ID, the columns, and the SOQL query.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "QUERY_LOCATOR": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/listviews/:QUERY_LOCATOR/describe",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "QUERY_LOCATOR",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "ce48f749-914e-4376-b680-636c78b5b5b5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771102006,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ce48f749-914e-4376-b680-636c78b5b5b5",
                        "name": "Group Members",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "5c1c604e-715c-41df-9cc7-abd4e11c042a",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "fcd5b17f-578f-42ef-b690-8b10c54b2f6a",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Members of a specified group. Get the members and add a member to a group. To add a member, the context user must be the group owner or moderator.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_groups_GroupMembers.htm",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "GROUP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/groups/:GROUP_ID/members?userId=<USER1_ID>",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "userId",
                                "value": "<USER1_ID>"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "GROUP_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a15df547-046b-4a51-a2d2-320445c3f7f6"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "ce5a0bda-70f3-4493-a0ed-29fabc6d4cf5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 22291802439,
                        "folder": "142df3f9-cfba-4816-82f2-60d90d49cce6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ce5a0bda-70f3-4493-a0ed-29fabc6d4cf5",
                        "name": "Save Quote API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "The Save Quote API saves a CPQ quote.\nAvailable in: Salesforce CPQ Summer \u201916 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_quote_api_save_final.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-12-09T08:13:21.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "cefec203-d21a-447e-9b09-97fb9626097e",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920626,
                        "folder": "3c82a7a0-5ad6-4a3a-a198-d4f733671bac",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cefec203-d21a-447e-9b09-97fb9626097e",
                        "name": "Create Order (One-Time)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"allOrNone\": true,\n    \"compositeRequest\": [\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/Order\",\n            \"referenceId\": \"refOrder\",\n            \"body\": {\n                \"AccountId\": \"{{defaultAccount}}\",\n                \"EffectiveDate\": \"2022-01-01\",\n                \"Pricebook2Id\": \"{{standardPricebook}}\",\n                \"BillToContactId\": \"{{defaultBillToContact}}\",\n                \"Status\": \"Draft\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/AppUsageAssignment\",\n            \"referenceId\": \"refAppTag\",\n            \"body\": {\n                \"AppUsageType\": \"SubscriptionManagement\",\n                \"RecordId\": \"@{refOrder.id}\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/OrderAction\",\n            \"referenceId\": \"refOrderAction\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"Type\": \"New Sale\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/OrderItem\",\n            \"referenceId\": \"refOrderItem\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"OrderActionId\": \"@{refOrderAction.id}\",\n                \"PricebookEntryId\": \"{{ClassTrainingOneTimePBE}}\",\n                \"Quantity\": 2.0,\n                \"UnitPrice\": 25.0,\n                \"NetUnitPrice\": 25.0,\n                \"TotalLineAmount\": 50.0,\n                \"TaxTreatmentId\": \"{{defaultTaxTreatment}}\"\n            }\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Creates a Subscription Management order with a single order item (label: Order Product). The order item has a one-time product selling model.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:02.000Z",
                        "updatedAt": "2023-08-09T08:13:02.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "cf39d5c8-553b-4014-9177-3e8edaf81a9f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802728,
                        "folder": "24361cde-dc20-400d-b30f-a3307639a44b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cf39d5c8-553b-4014-9177-3e8edaf81a9f",
                        "name": "Platform Event Schema by Schema ID",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Set, reset, or get information about a user password. This resource is available in REST API version 24.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SCHEMA_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/event/eventSchema/:SCHEMA_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "payloadFormat",
                                "value": "",
                                "description": "(Optional query parameter. Available in API version 43.0 and later.) The format of the returned event schema. This parameter can take one of the following values.\nEXPANDED\u2014The JSON representation of the event schema, which is the default format when payloadFormat is not specified in API version 43.0 and later.\nCOMPACT\u2014A format that adheres to the open-source Apache Avro specification for the record complex type (see Apache Avro Format). Subscribers use the compact schema format to deserialize compact events received in binary form.",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SCHEMA_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-06-15T17:45:08.000Z"
                    }
                },
                {
                    "model_id": "cfbaa023-6c6d-4dff-919a-729a33a7c3e0",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756621,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "cfbaa023-6c6d-4dff-919a-729a33a7c3e0",
                        "name": "Close or Abort a Job",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n\t\"state\":\"UploadComplete\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "560d363d-f189-4e6c-8e14-58a281e5a2da"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "d0762cee-1717-4658-a435-7cdbd4a09c25",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136429,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d0762cee-1717-4658-a435-7cdbd4a09c25",
                        "name": "Search Result Layouts",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns search result layout information for the objects in the query string. For each object, this call returns the list of fields displayed on the search results page as columns, the number of rows displayed on the first page, and the label used on the search results page.\nThis call supports bulk fetch for up to 100 objects in a query.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_layouts.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/search/layout/?q",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "",
                                "equals": false,
                                "description": "Comma delimited object list",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "d0809c2c-0129-4fa9-b2b8-b5b273ce8ee5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920681,
                        "folder": "3c82a7a0-5ad6-4a3a-a198-d4f733671bac",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d0809c2c-0129-4fa9-b2b8-b5b273ce8ee5",
                        "name": "Create Order (Evergreen & Termed)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"allOrNone\": true,\n    \"compositeRequest\": [\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/Order\",\n            \"referenceId\": \"refOrder\",\n            \"body\": {\n                \"AccountId\": \"{{defaultAccount}}\",\n                \"EffectiveDate\": \"2022-01-01\",\n                \"Pricebook2Id\": \"{{standardPricebook}}\",\n                \"BillToContactId\": \"{{defaultBillToContact}}\",\n                \"Status\": \"Draft\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/AppUsageAssignment\",\n            \"referenceId\": \"refAppTag\",\n            \"body\": {\n                \"AppUsageType\": \"SubscriptionManagement\",\n                \"RecordId\": \"@{refOrder.id}\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/OrderAction\",\n            \"referenceId\": \"refOrderAction\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"Type\": \"New Sale\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/OrderItem\",\n            \"referenceId\": \"Item_1_Evergreen\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"OrderActionId\": \"@{refOrderAction.id}\",\n                \"PricebookEntryId\": \"{{VirtualRouterEvergrnPBE}}\",\n                \"Quantity\": 2.0,\n                \"UnitPrice\": 25.0,\n                \"NetUnitPrice\": 25.0,\n                \"TotalLineAmount\": 50.0,\n                \"PeriodBoundary\": \"Anniversary\",\n                \"BillingFrequency2\": \"Monthly\",                \n                \"ServiceDate\": \"2022-02-01\",\n                \"TaxTreatmentId\": \"{{defaultTaxTreatment}}\"\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/OrderItem\",\n            \"referenceId\": \"Item_2_termed\",\n            \"body\": {\n                \"OrderId\": \"@{refOrder.id}\",\n                \"OrderActionId\": \"@{refOrderAction.id}\",\n                \"PricebookEntryId\": \"{{VirtualRouterTermedPBE}}\",\n                \"Quantity\": 10.0,\n                \"UnitPrice\": 50.0,\n                \"NetUnitPrice\": 50.0,\n                \"TotalLineAmount\": 500.0,\n                \"PeriodBoundary\": \"Anniversary\",\n                \"BillingFrequency2\": \"Monthly\",\n                \"PricingTermCount\": 12.0,                \n                \"ServiceDate\": \"2022-02-01\",\n                \"EndDate\": \"2023-01-01\",\n                \"TaxTreatmentId\": \"{{defaultTaxTreatment}}\"\n            }\n        }        \n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Creates a Subscription Management order with two order items. One order item is sold on a monthly termed subscription, and the other order item is sold as an evergreen subscription.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:02.000Z",
                        "updatedAt": "2023-08-09T08:13:02.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "d20f100c-883c-4dc6-89f1-038abf31ac97",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 18772491205,
                        "folder": "f8855583-344f-42b8-badf-4b4e51d22ba3",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d20f100c-883c-4dc6-89f1-038abf31ac97",
                        "name": "Predict",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"predictionDefinition\": \"<PREDICTION_DEFINITION_ID>\",\n    \"type\": \"RawData\",\n    \"columnNames\": [\n        \"Quantity\",\n        \"Category\",\n        \"Sub_Category\",\n        \"Sales\",\n        \"Profit_per_Order\"\n    ],\n    \"rows\": [\n        [\n            \"2\",\n            \"Furniture\",\n            \"Chairs\",\n            \"300\",\n            \"10\"\n        ]\n    ]\n}",
                        "descriptionFormat": null,
                        "description": "Get available prediction definitions.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/smartdatadiscovery/predict",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [
                            "be8971d5-a0bb-47fb-ad04-ca5375df6813"
                        ],
                        "createdAt": "2021-03-04T14:11:26.000Z",
                        "updatedAt": "2021-03-04T14:11:26.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "d21be724-056f-49bc-a04c-285a42eb7ee1",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406487,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d21be724-056f-49bc-a04c-285a42eb7ee1",
                        "name": "Get List View Chart Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "ac42eff1-37dd-4218-ba73-5f6626669bf4",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the record actions on list views.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "ListViewChartInstance"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/list-view-chart/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "ListViewChartInstance",
                                "description": "Currently, only `ListViewChartInstance` is valid."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e74fd58f-8081-49c9-a542-6fcf8009fc5f"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "d2575b4d-ca96-4a2b-b609-da31f6b7dec9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920515,
                        "folder": "9beb8ae0-1f53-4782-9f9d-f17d6f2f09a2",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d2575b4d-ca96-4a2b-b609-da31f6b7dec9",
                        "name": "Calculate Price (New Sale Bundles)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"listPricebookId\": \"{{standardPricebook}}\",\n    \"candidatePricebookIds\": [\n        \"{{standardPricebook}}\"\n    ],\n    \"pricingFlow\": \"GET_PRICE_USING_CONTEXT\",\n    \"graph\": {\n        \"graphId\": \"1\",\n        \"records\": [\n            {\n                \"referenceId\": \"ref_sales_txn\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionShape\"\n                    },\n                \"CurrencyIsoCode\": \"USD\"                    \n                }\n            },\n            {\n                \"referenceId\": \"ref_sales_txn_item1\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2022-01-01\",\n                    \"ProductId\": \"{{WorkAnywhereBundleProduct}}\",\n                    \"ProductSellingModelId\": \"{{EvergreenMonthlyPSM}}\",\n                    \"Quantity\": 10.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                \"CurrencyIsoCode\": \"USD\"                     \n                }\n            },\n            {\n                \"referenceId\": \"ref_sales_txn_item2\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"ProductId\": \"{{VirtualRouterProduct}}\",\n                    \"ProductSellingModelId\": \"{{EvergreenMonthlyPSM}}\",\n                    \"Quantity\": 10.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                    \"CurrencyIsoCode\": \"USD\"                     \n                }\n            },            \n            {\n                \"referenceId\": \"ref_sales_txn_item3\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"ProductId\": \"{{SLA_BronzeProduct}}\",\n                    \"ProductSellingModelId\": \"{{EvergreenMonthlyPSM}}\",\n                    \"Quantity\": 10.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                    \"CurrencyIsoCode\": \"USD\"                     \n                }\n            },\n            {\n                \"referenceId\": \"ref_sales_txn_item4\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTransactionItemShape\"\n                    },\n                    \"SalesTransactionShapeId\": \"@{ref_sales_txn.Id}\",\n                    \"StartDate\": \"2023-01-01\",\n                    \"ProductId\": \"{{ClassTrainingProduct}}\",\n                    \"ProductSellingModelId\": \"{{OneTimePSM}}\",\n                    \"Quantity\": 50.0,\n                    \"PricingTransactionType\": \"NewSale\",\n                \"CurrencyIsoCode\": \"USD\"                     \n                }\n            },            \n            {\n                \"referenceId\": \"ref_rel1\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTrxnItemRelationShape\"\n                    },\n                    \"MainSalesTrxnItemShapeId\": \"@{ref_sales_txn_item1.Id}\",\n                    \"AssocSalesTrxnItemShapeId\": \"@{ref_sales_txn_item2.Id}\",\n                    \"MainSalesTrxnItemShapeRole\": \"Bundle\",\n                    \"AssocSalesTrxnItemShapeRole\": \"BundleComponent\",\n                    \"AssociatedItemShapePricing\": \"IncludedInBundlePrice\"\n                }\n            },\n            {\n                \"referenceId\": \"ref_rel2\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTrxnItemRelationShape\"\n                    },\n                    \"MainSalesTrxnItemShapeId\": \"@{ref_sales_txn_item1.Id}\",\n                    \"AssocSalesTrxnItemShapeId\": \"@{ref_sales_txn_item3.Id}\",\n                    \"MainSalesTrxnItemShapeRole\": \"Bundle\",\n                    \"AssocSalesTrxnItemShapeRole\": \"BundleComponent\",\n                    \"AssociatedItemShapePricing\": \"IncludedInBundlePrice\"\n                }\n            },\n            {\n                \"referenceId\": \"ref_rel3\",\n                \"record\": {\n                    \"attributes\": {\n                        \"type\": \"SalesTrxnItemRelationShape\"\n                    },\n                    \"MainSalesTrxnItemShapeId\": \"@{ref_sales_txn_item1.Id}\",\n                    \"AssocSalesTrxnItemShapeId\": \"@{ref_sales_txn_item4.Id}\",\n                    \"MainSalesTrxnItemShapeRole\": \"Bundle\",\n                    \"AssocSalesTrxnItemShapeRole\": \"BundleComponent\",\n                    \"AssociatedItemShapePricing\": \"NotIncludedInBundlePrice\"\n                }\n            }                                        \n        ]\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Calculate the price of the Work Anywhere software bundle plus all it's bundle components for the pricing period of 1 month. Because this bundle is sold on an evergreen subscription rather than a termed subscription, the price is calculated per month rather than for the length of the subscription.\n\nAdd one RelationShape for each bundle component. Note that the classroom training product is not included in the bundle price, while the other two bundle components are.\n\nSee\u00a0[Calculate Price](https://desktop.postman.com/?desktopVersion=10.13.6&webVersion=10.13.7-ui-230522-1730&userId=10709048&teamId=0).",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/pricing/salestransaction/actions/calculate-price",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "d2a3f754-3bcd-410b-b75d-03f9ee657c1b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136899,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d2a3f754-3bcd-410b-b75d-03f9ee657c1b",
                        "name": "SObject Rows Delete",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Accesses records based on the specified object ID. Retrieves, updates, or deletes records. This resource can also be used to retrieve field values. Use the GET method to retrieve records or fields, the DELETE method to delete records, and the PATCH method to update records.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "DELETE",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:59.000Z"
                    }
                },
                {
                    "model_id": "d385e983-2d49-4639-b8f0-d7b7e61801ba",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 21668956903,
                        "folder": "58be073b-ed9f-4b28-bfd3-4141afce5b67",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d385e983-2d49-4639-b8f0-d7b7e61801ba",
                        "name": "Add an item to a cart",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "ec76c225-2d0f-476e-b32c-839d3896e43f",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"productId\":\"<PRODUCT-ID>\",\n    \"quantity\":3,\n    \"type\":\"Product\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {
                            "webCartId": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/webstores/{{webstoreId}}/carts/:webCartId/cart-items?effectiveAccountId=<EFFECTiVE_ACCOUNT_ID>",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "effectiveAccountId",
                                "value": "<EFFECTiVE_ACCOUNT_ID>",
                                "equals": true,
                                "description": null,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "webCartId",
                                "value": null,
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2021-11-02T08:45:34.000Z",
                        "updatedAt": "2021-11-02T08:47:23.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "d5a4c459-4e0f-4afc-b6fb-f65721bb8dbb",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406693,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d5a4c459-4e0f-4afc-b6fb-f65721bb8dbb",
                        "name": "Get List View Records per Id",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "4985075f-7f9d-4452-a92b-acc3e69648f7",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns record data for a list view.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "LIST_VIEW_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-records/:LIST_VIEW_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "fields",
                                "value": "",
                                "description": "Additional fields queried for the records returned. These fields don\u2019t create visible columns. If the field is not available to the user, an error occurs.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "Additional fields queried for the records returned. These fields don\u2019t create visible columns. If the field is not available to the user, no error occurs and the field isn\u2019t included in the records.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The number of list records viewed at one time. The default value is 50. Value can be 1\u20132000.",
                                "enabled": false
                            },
                            {
                                "key": "pageToken",
                                "value": "",
                                "description": "A token that represents the page offset. To indicate where the page starts, use this value with the `pageSize` parameter. The maximum offset is 2000 and the default is 0.",
                                "enabled": false
                            },
                            {
                                "key": "sortBy",
                                "value": "",
                                "description": "The API name of the field the list view is sorted by. If the name is preceded with `-`, the sort order is descending. For example, `Name` sorts by name in ascending order. `-CreatedDate` sorts by created date in descending order. Accepts only one value per request.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "LIST_VIEW_ID",
                                "value": "",
                                "description": "The ID of a list view"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "26497a57-2524-4d4d-ac6e-be6cc8b743ab"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "d63f819c-b96c-43b6-9898-679551c7d561",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100561,
                        "folder": "ff3ea004-70c0-4c5a-b9dd-80ac2e0184d9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d63f819c-b96c-43b6-9898-679551c7d561",
                        "name": "File Shares",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "3507bd9d-03a3-43f6-98bb-b9a1df1ab9d3",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "ed83cebd-3f5a-4766-a8d5-8b2abb07222d",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns information about the objects with which the specified file has been shared. Objects can be users, groups, or records.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_files_shares.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "FILE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/files/:FILE_ID/file-shares",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FILE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f065bd4d-7e84-4192-a944-1fc7166005a6"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "d66e27ee-1c22-4134-b088-b1173c6077f4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756993,
                        "folder": "8c8de0a1-32d2-47d5-84a6-e9157881ce6f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d66e27ee-1c22-4134-b088-b1173c6077f4",
                        "name": "Get Job Query Result",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\nAccept: test/csv\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query/{{_jobId}}/results",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "locator",
                                "value": "",
                                "enabled": false
                            },
                            {
                                "key": "maxRecords",
                                "value": "",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "enabled": true,
                                "key": "Accept",
                                "type": "text",
                                "value": "test/csv"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "237be83e-f8e8-40a7-bb97-9fc89ff034f5"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z"
                    }
                },
                {
                    "model_id": "d696337a-42f8-43c6-b50b-4d60baba8cc0",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644560,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d696337a-42f8-43c6-b50b-4d60baba8cc0",
                        "name": "Asset Token Flow",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "urn:ietf:params:oauth:grant-type:token-exchange",
                                "type": "text"
                            },
                            {
                                "key": "subject_token_type",
                                "value": "urn:ietf:params:oauth:token-type:access_token",
                                "type": "text"
                            },
                            {
                                "key": "subject_token",
                                "value": "{{_accessToken}}",
                                "type": "text"
                            },
                            {
                                "key": "actor_token_type",
                                "value": "urn:ietf:params:oauth:token-type:jwt",
                                "type": "text"
                            },
                            {
                                "key": "actor_token",
                                "value": "",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/x-www-form-urlencoded",
                                "type": "text"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "fbc46dea-7006-45f9-b32e-1025d55c0cd0"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z",
                        "dataOptions": {
                            "urlencoded": {}
                        }
                    }
                },
                {
                    "model_id": "d6d28165-e192-4364-b75b-9c3faa45ad6f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644642,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d6d28165-e192-4364-b75b-9c3faa45ad6f",
                        "name": "Authentication Configuration Endpoint",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/.well-known/auth-configuration",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "dbc65508-e70b-42bc-a019-554224b783c6"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:23.000Z"
                    }
                },
                {
                    "model_id": "d79b61cb-e50d-420c-adc1-9d178e0e4c35",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136807,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d79b61cb-e50d-420c-adc1-9d178e0e4c35",
                        "name": "SObject Basic Information",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "d7c520d7-b48e-40e3-9e32-086b90d45ce6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771102025,
                        "folder": "d48f45a6-9be8-4325-a377-e7674946e70d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "d7c520d7-b48e-40e3-9e32-086b90d45ce6",
                        "name": "Group Members\u2014Private - POST",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "8778d161-ea11-4c6b-8e0e-b2a84fd346d7",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "d2d2914c-760b-4355-b124-028560726a38",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Request membership in a private group or get the status of requests to a join a private group.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_groups_GroupMembersRequests.htm",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "GROUP_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/groups/:GROUP_ID/members/requests",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "GROUP_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "336d9cbf-5c26-4d21-bcee-7a55076ee2dc"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:59.000Z"
                    }
                },
                {
                    "model_id": "dadc3f1a-71b3-4431-a958-fa00c4731b6f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094801348,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dadc3f1a-71b3-4431-a958-fa00c4731b6f",
                        "name": "Username Password Flow",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "grant_type",
                                "value": "password",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "client_secret",
                                "value": "{{clientSecret}}",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{username}}",
                                "type": "text"
                            },
                            {
                                "key": "password",
                                "value": "{{password}}{{secretToken}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "e064a493-3e96-4d93-b256-89896e9b881a",
                                    "exec": [
                                        "const jsonData = pm.response.json();",
                                        "const id = jsonData.id.split('/');",
                                        "",
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "context.set(\"_accessToken\", jsonData.access_token);",
                                        "context.set(\"_endpoint\", jsonData.instance_url);",
                                        "context.set(\"_userId\", id.pop());",
                                        "context.set(\"_orgId\", id.pop());",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/x-www-form-urlencoded\nAccept: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": "const jsonData = pm.response.json();\nconst id = jsonData.id.split('/');\n\nconst context = pm.environment.name ? pm.environment : pm.collectionVariables;\ncontext.set(\"_accessToken\", jsonData.access_token);\ncontext.set(\"_endpoint\", jsonData.instance_url);\ncontext.set(\"_userId\", id.pop());\ncontext.set(\"_orgId\", id.pop());\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "description": null,
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "ba088eda-9913-449d-bcfe-d0a62800329f"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-06-15T17:45:00.000Z",
                        "dataOptions": {
                            "urlencoded": {}
                        }
                    }
                },
                {
                    "model_id": "dbc44145-e470-4b57-a988-e7a4c97c6c20",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100182,
                        "folder": "d5a3ab8d-73a7-4572-8541-9dfd668f09a8",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dbc44145-e470-4b57-a988-e7a4c97c6c20",
                        "name": "Following",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "dce2099f-f415-4d4d-9876-d48ee49f4aae",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "d156e26c-420a-4e5f-a068-d84fd65a8d5b",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of people, groups, records, topics, and files that the specified user is following. Also used to follow records.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_users_FollowingUsers.htm?search_text=following",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "USER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/chatter/users/:USER_ID/following",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "filterType",
                                "value": "",
                                "description": "Specifies the key prefix to filter the type of objects returned. The key prefix is the three-character prefix code in the object ID. Object IDs are prefixed with three-character codes that specify the type of the object. For example, User objects have a prefix of 005 and Group objects have a prefix of 0F9.",
                                "enabled": false
                            },
                            {
                                "key": "page",
                                "value": "",
                                "description": "Specifies the page number to return. The default value is 0, which returns the first page.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "Specifies the number of items per page. Valid values are between 1 and 1000. If you don't specify a size, the default is 25.\n",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "USER_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "510ddb2c-6fb9-4094-bd0a-993c86366d04"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:56.000Z"
                    }
                },
                {
                    "model_id": "dd02438b-fe8b-4cc1-b248-575f990e91df",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426553,
                        "folder": "0c12ce56-9808-412b-8bff-4bd321828392",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dd02438b-fe8b-4cc1-b248-575f990e91df",
                        "name": "Publish single event",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"Annual_Mileage__c\": 12000,\n    \"Current_Vehicle__c\": \"Fast car\",\n    \"Model_Year__c\": 2019\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {
                            "EventApiName": "Carbon_Comparison__e"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:EventApiName/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "d860c1c2-3f8f-4e05-927b-66ebf4fbc944",
                                "key": "EventApiName",
                                "value": "Carbon_Comparison__e"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "18313721-d295-4fb4-a4a6-e50e04db6d37"
                        ],
                        "createdAt": "2023-06-15T17:45:07.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "dd35cfa6-1b21-4ac4-ad0e-b7dba3b837aa",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136569,
                        "folder": "46349794-c9c6-4e79-906b-2bf7dcf0ecd1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dd35cfa6-1b21-4ac4-ad0e-b7dba3b837aa",
                        "name": "Lightning Usage by App Type",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Return the total number of Lightning Experience and Salesforce Mobile users.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_lightning_usagebyapptypemetrics.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/LightningUsageByAppTypeMetrics",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "dd57edbe-c217-41b6-a523-1d91548448bc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100768,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dd57edbe-c217-41b6-a523-1d91548448bc",
                        "name": "Get External Credentials by Developer Name",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get an external credential, including the named credentials and principals associated with it and the type and status of each principal.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "DEVELOPER_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/external-credentials/:DEVELOPER_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "08de5686-fd52-4def-8abd-e3a067688d56",
                                "key": "DEVELOPER_NAME",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5bba6043-03e3-4a73-8281-5918c5f3e78e"
                        ],
                        "createdAt": "2023-04-26T07:24:57.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "dd6d3091-0602-489a-9a00-21b0854d360b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31358426520,
                        "folder": "4c266ab2-f2c8-417a-8ec0-dbece1bc3a86",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dd6d3091-0602-489a-9a00-21b0854d360b",
                        "name": "Describe event channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel/describe/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "29064cb1-c1cd-465a-922c-73f067e4e37e"
                        ],
                        "createdAt": "2023-06-15T17:45:06.000Z",
                        "updatedAt": "2023-07-03T13:20:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "dea79024-a128-4cf9-8361-fb781531813f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756719,
                        "folder": "d4bddd49-3650-4d21-83bb-ce0e5b789d92",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "dea79024-a128-4cf9-8361-fb781531813f",
                        "name": "Get Job Unprocessed Record Results",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "//Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/ingest/{{_jobId}}/unprocessedrecords",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "enabled": false
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "96e11b3b-932d-4b89-9326-75df11ad4600"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-20T16:00:12.000Z"
                    }
                },
                {
                    "model_id": "e0c493ec-78a8-48ca-a7f8-01e69e6bf52f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756856,
                        "folder": "0a36024d-2a72-44c4-8fcf-195ab1482b4a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e0c493ec-78a8-48ca-a7f8-01e69e6bf52f",
                        "name": "SObject Collections Upsert",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"allOrNone\" : false,\n    \"records\" : [{\n        \"attributes\" : {\"type\" : \"Account\"},\n        \"Name\" : \"Test Upsert\",\n        \"Id\" : \"0012o00003OBzVSAA1\"\n    }]\n}\n\n\n",
                        "descriptionFormat": null,
                        "description": "Use a PATCH request with sObject Collections to either create or update (upsert) up to 200 records based on an external ID field. This method returns a list of UpsertResult objects. You can choose whether to roll back the entire request when an error occurs. This request is available in API version 46 and later.\n\n[https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections_upsert.htm](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections_upsert.htm)",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "Account",
                            "FIELD_NAME": "Id"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/sobjects/:SOBJECT_API_NAME/:FIELD_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "Account",
                                "description": null
                            },
                            {
                                "key": "FIELD_NAME",
                                "value": "Id",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "e21f928d-2446-443c-8531-d1b2a57dfd35"
                        ],
                        "createdAt": "2022-02-02T21:23:31.000Z",
                        "updatedAt": "2023-11-20T16:00:13.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "e12edbf9-5f26-41d4-9360-48c876f3ad41",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003920119,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e12edbf9-5f26-41d4-9360-48c876f3ad41",
                        "name": "Get Default Payment Method",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "e4a1a376-3d34-40e9-8a74-01ddbed2d4b7",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"defaultPaymentMethodId\", jsonData.records[0].Id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Id, Nickname from CardPaymentMethod Where Nickname='Default Payment Method' and Status='Active' LIMIT 1",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"defaultPaymentMethodId\", jsonData.records[0].Id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Id, Nickname from CardPaymentMethod Where Nickname='Default Payment Method' and Status='Active' LIMIT 1"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:01.000Z",
                        "updatedAt": "2023-08-09T08:13:01.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e2240086-e852-4b34-9e2f-efeda1fca1c2",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802920,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e2240086-e852-4b34-9e2f-efeda1fca1c2",
                        "name": "Create event relay",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"MyEventRelay\",\n    \"Metadata\": {\n        \"eventChannel\": \"Carbon_Comparison_Channel__chn\",\n        \"destinationResourceName\": \"callout:MyNamedCredential\",\n        \"label\": \"My Event Relay\",\n        \"relayOption\": \"{\\\"ReplayRecovery\\\":\\\"LATEST\\\"}\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/EventRelayConfig/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e23af7bf-f684-421a-ad03-a66b3ac5656b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137008,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e23af7bf-f684-421a-ad03-a66b3ac5656b",
                        "name": "SObject Suggested Articles",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of suggested Salesforce Knowledge articles for a case, work order, or work order line item.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/suggestedArticles?description=&language=&subject=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "description",
                                "value": ""
                            },
                            {
                                "key": "language",
                                "value": ""
                            },
                            {
                                "key": "subject",
                                "value": ""
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "e2bf8bb3-25bf-4247-85f3-ff5844c2d931",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100838,
                        "folder": "cd7b9ecd-2a54-4f2e-9207-5200dd63c38f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e2bf8bb3-25bf-4247-85f3-ff5844c2d931",
                        "name": "Create External Credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"developerName\": \"SampleExternalCredential\",\n   \"masterLabel\": \"Sample External Credential\",\n   \"authenticationProtocol\": \"Custom\",\n   \"principals\": [\n      {\n         \"principalName\": \"SamplePrincipal\",\n         \"principalType\": \"NamedPrincipal\",\n         \"sequenceNumber\": 1\n      }\n   ],\n   \"customHeaders\": [\n      {\n         \"headerName\": \"SampleHeader\",\n         \"headerValue\": \"SampleHeaderValue\",\n         \"sequenceNumber\": 1\n      }\n   ]\n}",
                        "descriptionFormat": null,
                        "description": "Create an external credential.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/named-credentials/external-credentials",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "a31a2492-2fea-4b18-85ac-12e3e3ee2c9d"
                        ],
                        "createdAt": "2023-06-13T07:21:05.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e39cc49b-3b86-44f7-ae84-df1119f6d7a6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406468,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e39cc49b-3b86-44f7-ae84-df1119f6d7a6",
                        "name": "Get List View Record Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "1f4955e6-4e48-4ea0-9246-8bf5b221f323",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the record actions on list views.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/list-view-record/:RECORD_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_IDS",
                                "value": "",
                                "description": "A single record ID, or a comma-delimited list of record IDs."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0cb603ca-dc30-41a2-be74-48adeaa94b59"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "e3fee5d0-8bd7-44e7-821e-c2d217d3733f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802961,
                        "folder": "2bfd061d-8a12-4e15-9980-0b4523465a4b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e3fee5d0-8bd7-44e7-821e-c2d217d3733f",
                        "name": "Change event relay state",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"Metadata\": {\n        \"state\": \"RUN\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\nSOAPAction: \"\"\nAuthorization: Bearer {{_accessToken}}",
                        "method": "PATCH",
                        "pathVariables": {
                            "EVENT_RELAY_CONFIG_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/EventRelayConfig/:EVENT_RELAY_CONFIG_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "\"\""
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{_accessToken}}"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "id": "6c9b6815-6cd7-465f-8fe2-2b4ffd15586e",
                                "key": "EVENT_RELAY_CONFIG_ID",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e4fe3c2a-536e-438b-8447-a1f40d42b8f6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136748,
                        "folder": "c1964922-356a-496f-9ea6-e3c036d17fbe",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e4fe3c2a-536e-438b-8447-a1f40d42b8f6",
                        "name": "Data Category Groups",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns the list of list views for the specified sObject, including the ID and other basic information about each list view. You can also get basic information for a specific list view by ID.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/support/dataCategoryGroups?sObjectName",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "topCategoriesOnly",
                                "value": "",
                                "enabled": false
                            },
                            {
                                "key": "sObjectName",
                                "value": "",
                                "equals": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z"
                    }
                },
                {
                    "model_id": "e5edb28c-ccad-4467-9106-24ca41e2ceb7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802813,
                        "folder": "29e5186d-8f97-485e-b089-03b246165280",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e5edb28c-ccad-4467-9106-24ca41e2ceb7",
                        "name": "Create channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Carbon_Comparison_Channel__chn\",\n    \"Metadata\": {\n        \"channelType\": \"event\",\n        \"label\": \"Carbon Comparison Channel\",\n        \"urls\": null\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\nSOAPAction: \"\"\nAuthorization: Bearer {{_accessToken}}",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "\"\""
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{_accessToken}}"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e5efdb66-aaab-4829-b318-b48aee79a6a5",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136817,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e5efdb66-aaab-4829-b318-b48aee79a6a5",
                        "name": "SObject Create",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "399e75db-f5c3-4eb2-9f6b-d38c852f6f7f",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"Name\": \"test\"\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-09-07T13:51:58.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "e61bf56c-47f2-41d5-8c4c-aa6a53cf0576",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31348565574,
                        "folder": "29e5186d-8f97-485e-b089-03b246165280",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e61bf56c-47f2-41d5-8c4c-aa6a53cf0576",
                        "name": "Add filter expression in channel member",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"MyChannelMember\",\n    \"Metadata\": {\n        \"eventChannel\": \"MyChannel__chn\",\n        \"filterExpression\": \"Text__c='Some value'\",\n        \"selectedEntity\": \"Custom_Event__e\",\n        \"urls\": null\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_MEMBER_ID": "0v8RM0000004Rr5YAE"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannelMember/:PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                                "value": "0v8RM0000004Rr5YAE",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-07-03T06:38:40.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e62569c7-c39c-4e10-be1c-1a376faf88de",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667528142,
                        "folder": "1c891a62-2cde-478e-a6bc-0adc964ee29a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e62569c7-c39c-4e10-be1c-1a376faf88de",
                        "name": "SOAP DescribeValueType",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "40f93fa1-b9f2-4069-9220-9791d6794313",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://soap.sforce.com/2006/04/metadata\">\n\t<soapenv:Header>\n\t<tns:SessionHeader>\n\t\t<tns:sessionId>{{_accessToken}}</tns:sessionId>\n\t</tns:SessionHeader>\n\t</soapenv:Header>\n\t<soapenv:Body>\n\t\t<tns:describeValueType>\n\t\t\t<type>{http://soap.sforce.com/2006/04/metadata}INSERT_METADATA_TYPE_NAME</type>\n\t\t</tns:describeValueType>\n\t</soapenv:Body>\n</soapenv:Envelope>",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: text/xml\ncharset: UTF-8\nSOAPAction: login\nAccept: text/xml\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/Soap/m/{{version}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "text/xml",
                                "type": "text"
                            },
                            {
                                "key": "charset",
                                "value": "UTF-8"
                            },
                            {
                                "key": "SOAPAction",
                                "value": "login"
                            },
                            {
                                "key": "Accept",
                                "value": "text/xml",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2d7466ea-fc02-4416-ab96-7f0b116bb293"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-09-20T11:56:49.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "e64cb2ff-ab79-4734-9e96-368ecd7fea52",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003919598,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e64cb2ff-ab79-4734-9e96-368ecd7fea52",
                        "name": "Create Payment Method",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"paymentGatewayId\" : \"{{defaultPaymentGatewayId}}\",\n    \"cardPaymentMethod\": {\n    \"cardHolderName\": \"{{_userFullName}}\",\n    \"expiryMonth\": \"11\",\n    \"expiryYear\": \"2222\",\n    \"cardNumber\": \"4111111111111111\",\n    \"cvv\": \"111\", \n    \"cardCategory\": \"CreditCard\",\n    \"cardType\": \"VISA\",\n    \"startYear\": \"2013\",\n    \"startMonth\": \"7\",\n    \"nickName\": \"Default Payment Method\",\n    \"accountId\": \"{{defaultAccountId}}\"\n    },\n  \"phone\": \"4155551212\",\n  \"email\": \"{{_userEmail}}\",\n  \"additionalData\":{\n      \"key1\":\"value1\",\n      \"key2\":\"value2\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/commerce/payments/payment-methods",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e6a44356-6182-40e1-a470-cfd99063c7b6",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406951,
                        "folder": "088cfd0d-2d82-469a-b5d9-316332dfc0cb",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e6a44356-6182-40e1-a470-cfd99063c7b6",
                        "name": "Get Apps",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "44e47abb-8035-4287-a1f1-3db290a71c50",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get metadata for all the apps a user has access to. Metadata for the selected app includes tabs on the app\u2019s navigation bar. Metadata for other apps doesn\u2019t include tabs on the navigation bar.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/apps?formFactor=Large",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "formFactor",
                                "value": "Large",
                                "description": "The form factor for each app that the user has access to (`Large`, `Medium` or `Small`)"
                            },
                            {
                                "key": "userCustomizations",
                                "value": "true",
                                "description": "If true, gets custom and standard navigation tabs. If false, gets only standard navigation tabs.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "2bb1dc90-06b8-4f0c-a5fe-15c5a33d9a27"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:19.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "e7bb78de-fcd9-416a-a9c3-d966fdec54ca",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100588,
                        "folder": "ff3ea004-70c0-4c5a-b9dd-80ac2e0184d9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e7bb78de-fcd9-416a-a9c3-d966fdec54ca",
                        "name": "Files Shares Link",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "aab48c72-4470-47e7-be35-3da22055954e",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "bf64000f-83e1-4301-b748-05d14ba41168",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "A description of a file shared as a link. Create, access, and delete a file\u2019s share link.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_files_shares_link.htm",
                        "variables": null,
                        "headers": "",
                        "method": "PUT",
                        "pathVariables": {
                            "FILE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/files/:FILE_ID/file-shares/link",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FILE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "c2a1f00e-0d73-41d7-8cb6-04fca96d55c2"
                        ],
                        "createdAt": "2020-12-08T18:18:08.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "e92f1c94-e4a4-4548-901e-c6bec55240ba",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136999,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e92f1c94-e4a4-4548-901e-c6bec55240ba",
                        "name": "SObject Relationships",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Accesses records by traversing object relationships via friendly URLs. You can retrieve, update, or delete the record associated with the traversed relationship field. If there are multiple related records, you can retrieve the complete set of associated records. This resource is available in REST API version 36.0 and later.\n\nGET, PATCH, DELETE",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "RECORD_ID": "",
                            "RELATIONSHIP_FIELD_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/:RECORD_ID/:RELATIONSHIP_FIELD_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": null
                            },
                            {
                                "key": "RELATIONSHIP_FIELD_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "e9cc9d2c-5278-49af-b013-2fee448c54fa",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928489,
                        "folder": "d8d52cc2-f78c-4a2e-90cd-8338dc74cf8d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "e9cc9d2c-5278-49af-b013-2fee448c54fa",
                        "name": "Get Sandbox",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Retrieves a sandbox record.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SANDBOX_INFO_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/SandboxInfo/:SANDBOX_INFO_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SANDBOX_INFO_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "b8d308cd-9be8-48ce-8c56-cc4b20b51ac1"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z"
                    }
                },
                {
                    "model_id": "ea61344e-ba63-43d2-b50c-e5eb6843d1ba",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317913,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ea61344e-ba63-43d2-b50c-e5eb6843d1ba",
                        "name": "Forgot Password - Change Password",
                        "dataMode": "raw",
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": "{\n    \"username\": \"<username>\",\n    \"newpassword\": \"<new password>\",\n    \"otp\": \"<OTP sent ot end user>\"\n}",
                        "descriptionFormat": null,
                        "description": "Forgot Password/Change Password is a two step process:\nIn the first step you pass a username and recaptcha token into the endpoint. Salesforce then sends an OPT to the end user. In the second step you collect that OTP from the end user, confirming that they do own the email associated to the user, and the new password. This call is the second step in that process.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/auth/headless/forgot_password",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true,
                                "accept-encoding": true,
                                "connection": true,
                                "user-agent": true
                            },
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ea86eb87-4861-4e6b-87a4-39a2ea1ce484",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879349968,
                        "folder": "b52c96fc-1c6a-4293-a1e4-87482d736c0d",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ea86eb87-4861-4e6b-87a4-39a2ea1ce484",
                        "name": "Configuration Load Rule Executor API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "The Configuration Load Rule Executor API invokes all the load event product rules for the specified product. When configuring a nested bundle, set the parentProduct property to the parent product to inherit configuration attributes on the nested bundle.\nAvailable in: Salesforce CPQ Spring \u201917 and later\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_config_loadruleexecutor.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.ConfigAPI.LoadRuleExecutor&uid=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.ConfigAPI.LoadRuleExecutor",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2020-12-09T16:13:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ec49cad9-01a0-44cf-92fc-ecbdee91dc90",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802822,
                        "folder": "29e5186d-8f97-485e-b089-03b246165280",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ec49cad9-01a0-44cf-92fc-ecbdee91dc90",
                        "name": "Update channel",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Carbon_Comparison_Channel__chn\",\n    \"Metadata\": {\n        \"channelType\": \"event\",\n        \"label\": \"Carbon Comparison Channel 2\",\n        \"urls\": null\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannel/:PLATFORM_EVENT_CHANNEL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "d0b1b04a-f990-48fe-8275-74e949fd8af0",
                                "key": "PLATFORM_EVENT_CHANNEL_ID",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ed0b1a7e-cb42-49b5-8034-ecb07949f7b8",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406777,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ed0b1a7e-cb42-49b5-8034-ecb07949f7b8",
                        "name": "Get List View Metadata per API Name",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "fea346de-6c60-432a-aba7-051e7d06514e",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns list view metadata.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "",
                            "LIST_VIEW_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-info/:SOBJECT_API_NAME/:LIST_VIEW_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": "Object API name"
                            },
                            {
                                "key": "LIST_VIEW_API_NAME",
                                "value": "",
                                "description": "List view API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5d4846f0-1cfb-4ff8-b970-bb0f88a54e02"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ed2c0726-c65e-408c-809c-5b2494ec8eca",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 34382928422,
                        "folder": "b80445dd-7660-470d-8bae-1268fb5f8ca9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ed2c0726-c65e-408c-809c-5b2494ec8eca",
                        "name": "Get Tooling Metadata SObject",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "ed9e9c62-fc53-45b6-8dba-1ba385e43608"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2024-01-02T11:32:01.000Z"
                    }
                },
                {
                    "model_id": "ed795416-1d8c-4e90-af09-4af15b7e8ffc",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802866,
                        "folder": "5defa1ba-7991-433f-8270-e798f19a2ea6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ed795416-1d8c-4e90-af09-4af15b7e8ffc",
                        "name": "Create named credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"MyNamedCredential\",\n    \"Metadata\": {\n        \"label\": \"My Named Credential\",\n        \"endpoint\": \"arn:aws:AWS_REGION:AWS_ACCOUNT_ID\",\n        \"principalType\": \"Anonymous\",\n        \"protocol\": \"NoAuthentication\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/NamedCredential",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ee6eb345-b9a8-4eab-959b-833c48fcdb92",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136657,
                        "folder": "dad9f4a8-ba9f-4893-8f64-8a787630735e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ee6eb345-b9a8-4eab-959b-833c48fcdb92",
                        "name": "List Views",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns the list of list views for the specified sObject, including the ID and other basic information about each list view. You can also get basic information for a specific list view by ID.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/:SOBJECT_API_NAME/listviews/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "limit",
                                "value": "",
                                "description": "The maximum number of records to return, between 1-2000. The default value is 25.",
                                "enabled": false
                            },
                            {
                                "key": "offset",
                                "value": "",
                                "description": "The first record to return. Use this parameter to paginate the results. The default value is 1.",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:57.000Z"
                    }
                },
                {
                    "model_id": "ef02499b-9be4-408c-ab5e-4e1808808d61",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003918997,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ef02499b-9be4-408c-ab5e-4e1808808d61",
                        "name": "Get Products",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "04630795-0fc6-47ad-8b3b-b4f23e4c211a",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"ClassTrainingProduct\", jsonData.records[0].Id);",
                                        "context.set(\"SLA_BronzeProduct\", jsonData.records[1].Id);",
                                        "context.set(\"VirtualRouterProduct\", jsonData.records[2].Id);",
                                        "context.set(\"WorkAnywhereBundleProduct\", jsonData.records[3].Id);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Name, Id from Product2 Where NAME IN ('SLA_Bronze', 'Classroom Training', 'Virtual Router', 'Work Anywhere Software Bundle') order by Name ASC",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"ClassTrainingProduct\", jsonData.records[0].Id);\ncontext.set(\"SLA_BronzeProduct\", jsonData.records[1].Id);\ncontext.set(\"VirtualRouterProduct\", jsonData.records[2].Id);\ncontext.set(\"WorkAnywhereBundleProduct\", jsonData.records[3].Id);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Name, Id from Product2 Where NAME IN ('SLA_Bronze', 'Classroom Training', 'Virtual Router', 'Work Anywhere Software Bundle') order by Name ASC"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ef2ffaa7-b04f-4a7a-af8a-915c6e01830d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003919140,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ef2ffaa7-b04f-4a7a-af8a-915c6e01830d",
                        "name": "GetPBE (Single Selling Model)",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "9988dc95-82d5-4465-886f-399d77ad9224",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"ClassTrainingOneTimePBE\", jsonData.records[0].Id);",
                                        "context.set(\"SLABronzeEvergrnMonthPBE\", jsonData.records[1].Id);",
                                        "context.set(\"WorkAnywhereBundlePBE\", jsonData.records[2].Id);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select ID, Name, ProductSellingModel.Name from pricebookentry where Product2.Name IN ('Classroom Training', 'SLA_Bronze','Work Anywhere Software Bundle') order by name ASC",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"ClassTrainingOneTimePBE\", jsonData.records[0].Id);\ncontext.set(\"SLABronzeEvergrnMonthPBE\", jsonData.records[1].Id);\ncontext.set(\"WorkAnywhereBundlePBE\", jsonData.records[2].Id);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select ID, Name, ProductSellingModel.Name from pricebookentry where Product2.Name IN ('Classroom Training', 'SLA_Bronze','Work Anywhere Software Bundle') order by name ASC"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "ef55e969-6e31-4501-b0f3-b957d3eddf63",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 35198063944,
                        "folder": "28b8570a-7b88-474c-9e9e-087ec3b06edf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ef55e969-6e31-4501-b0f3-b957d3eddf63",
                        "name": "OAuth Token Revoke",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Revokes one token. See [OAuth Refresh Token](https://developer.salesforce.com/docs/atlas.en-us.246.0.chatterapi.meta/chatterapi/connect_resources_usage_tokens_token_id.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>\n",
                        "method": "DELETE",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/usage/tokens/{{_tokenId}}",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-12-01T09:03:45.000Z",
                        "updatedAt": "2024-02-21T15:29:25.000Z"
                    }
                },
                {
                    "model_id": "efd22041-e918-489e-845e-be47547bf276",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136507,
                        "folder": "a18ced53-8c49-40c8-a8d6-bf3f55d8ee54",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "efd22041-e918-489e-845e-be47547bf276",
                        "name": "Process Approvals",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns a list of all approval processes. Can also be used to submit a particular record if that entity supports an approval process and one has already been defined. Records can be approved and rejected if the current user is an assigned approver. When using a POST request to do bulk approvals, the requests that succeed are committed and the requests that don\u2019t succeed send back an error.\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_process_approvals.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/process/approvals",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "f018a94a-5b5d-4e13-bdb4-e8b8f233a937",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667556,
                        "folder": "6e2703c1-faa6-4898-a839-dd234c0be8c9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f018a94a-5b5d-4e13-bdb4-e8b8f233a937",
                        "name": "Themes",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Gets the list of icons and colors used by themes in the Salesforce application. Theme information is provided for objects in your organization that use icons and colors in the Salesforce UI.\n\nThe If-Modified-Since header can be used with this resource, with a date format of EEE, dd MMM yyyy HH:mm:ss z. When this header is used, if the object metadata has not changed since the provided date, a 304 Not Modified status code is returned, with no response body.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_themes.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/theme",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "f9e15e8d-29c4-49f1-84a5-90e8c066f26c"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-09-27T16:15:06.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "f274d74c-8e98-478e-90b8-616dff38ba45",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644858,
                        "folder": "c254b698-4846-4b02-a742-49c96055010b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f274d74c-8e98-478e-90b8-616dff38ba45",
                        "name": "Bulk Retrieve Batch Result Data",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-SFDC-Session: {{_accessToken}}\nAccept-Encoding: gzip\nContent-Encoding: gzip\n",
                        "method": "GET",
                        "pathVariables": {
                            "batchResultId": null
                        },
                        "url": "{{_endpoint}}/services/async/{{version}}/job/{{_jobId}}/batch/{{_batchId}}/result/:batchResultId",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-SFDC-Session",
                                "value": "{{_accessToken}}"
                            },
                            {
                                "key": "Accept-Encoding",
                                "value": "gzip"
                            },
                            {
                                "key": "Content-Encoding",
                                "value": "gzip"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "batchResultId",
                                "value": null,
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "0a297778-96d6-4d55-a2b2-b157192e8e99"
                        ],
                        "createdAt": "2021-10-06T06:44:29.000Z",
                        "updatedAt": "2023-11-17T14:18:25.000Z"
                    }
                },
                {
                    "model_id": "f4ffc5c8-11d1-43c2-8d35-7d908c3f7365",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33249405489,
                        "folder": "32aeab49-dacb-4bad-8410-3b46d39d0826",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f4ffc5c8-11d1-43c2-8d35-7d908c3f7365",
                        "name": "Accounts with Filter",
                        "dataMode": "graphql",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "X-Chatter-Entity-Encoding: false\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/graphql",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "X-Chatter-Entity-Encoding",
                                "value": "false",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "ee23fe94-2255-42a3-8a4e-72cf76aec184"
                        ],
                        "createdAt": "2022-04-21T17:29:31.000Z",
                        "updatedAt": "2023-10-23T09:17:15.000Z",
                        "graphqlModeData": {
                            "query": "query accountsWithFilter($where: Account_Filter = {Name: {like: \"s%\"}}) {\n  uiapi {\n    query {\n      Account(where: $where) {\n        edges {\n          node {\n            Id\n            Name {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
                            "variables": "{\n    \"where\": {\n        \"Name\": {\n            \"like\": \"%united%\"\n        }\n    }\n}"
                        },
                        "dataOptions": {
                            "graphql": {}
                        }
                    }
                },
                {
                    "model_id": "f5566a60-ee22-46b9-9c41-ace2430cfe1b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802462,
                        "folder": "0c12ce56-9808-412b-8bff-4bd321828392",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f5566a60-ee22-46b9-9c41-ace2430cfe1b",
                        "name": "Publish multiple events",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"allOrNone\": true,\n    \"compositeRequest\": [\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/Carbon_Comparison__e\",\n            \"referenceId\": \"event1\",\n            \"body\": {\n                \"Annual_Mileage__c\": 12000,\n                \"Current_Vehicle__c\": \"Fast car 1\",\n                \"Model_Year__c\": 2019\n            }\n        },\n        {\n            \"method\": \"POST\",\n            \"url\": \"/services/data/v{{version}}/sobjects/Carbon_Comparison__e\",\n            \"referenceId\": \"event2\",\n            \"body\": {\n                \"Annual_Mileage__c\": 12000,\n                \"Current_Vehicle__c\": \"Fast car 2\",\n                \"Model_Year__c\": 2019\n            }\n        }\n    ]\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/composite/",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:07.000Z",
                        "updatedAt": "2023-06-15T17:45:07.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "f626bd85-8f3e-454b-b9e1-69a2d82dc220",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406649,
                        "folder": "2ec82cd7-7338-4689-99e3-35b28e14dc05",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f626bd85-8f3e-454b-b9e1-69a2d82dc220",
                        "name": "Update Usage of a Favorite",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "d6e6bddd-8f3b-47f9-8f11-ab6a86f4ca20",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Update the usage of an individual favorite, for example, the last time and number of times the favorite was clicked.",
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "FAVORITE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/favorites/:FAVORITE_ID/usage",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FAVORITE_ID",
                                "value": "",
                                "description": "The ID of a favorite"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "71540b29-712e-40f3-b4cd-e12a50059a2b"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:17.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "f6651081-e97d-49ed-a261-0155a350154f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802881,
                        "folder": "5defa1ba-7991-433f-8270-e798f19a2ea6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f6651081-e97d-49ed-a261-0155a350154f",
                        "name": "Delete named credential",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "DELETE",
                        "pathVariables": {
                            "NAMED_CREDENTIAL_ID": null
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/NamedCredential/:NAMED_CREDENTIAL_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "8aa8261e-4cae-48b2-a0ea-c043dec5f426",
                                "key": "NAMED_CREDENTIAL_ID",
                                "value": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:10.000Z",
                        "updatedAt": "2023-06-15T17:45:10.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "f6b549f7-5152-49c8-b12c-eaef8ebda918",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32667531877,
                        "folder": "2b4a2969-56e5-4385-80e9-5cf0f810c79b",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f6b549f7-5152-49c8-b12c-eaef8ebda918",
                        "name": "runDecisionMatrix",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n   \"inputs\":[\n      {\n         \"myColumnInput\":\"One\"\n      }\n   ]\n}\n",
                        "descriptionFormat": null,
                        "description": "# Decision Matrix Actions\n\nInvoke a decision matrix in a flow with the Decision Matrix Actions.\u00a0A decision matrix is a user-defined table where you can look up an output based on the inputs you provide.\n\nFor example, you can look up a candidate\u2019s eligibility to avail medical insurance in a decision matrix based on the candidate\u2019s age and gender.\n\nThese actions are available in API version 55.0 and later.\n\n## Supported REST HTTP Methods\n\nURI/services/data/v55.0/actions/custom/runDecisionMatrix/{UniqueName}\n\nNote\n\nThe value of UniqueName is the unique identifier of the record, which is sourced from the name of a decision matrix.\n\nFormatsJSONHTTP MethodsPOSTAuthenticationAuthorization: Bearer\u00a0token\n\n## Inputs\n\nVary depending on the selected decision matrix.\n\n## Outputs\n\nVary depending on the inputs of the selected decision matrix.\n\n## Usage\n\nSample Request\n\nHere\u2019s an example POST request that has the inputs, such as, age and state:\n\n```\n{\n   \"inputs\":[\n      {\n         \"age\":\"25\",\n         \"state\":\"NY\"\n      },\n      {\n         \"age\":\"25\",\n         \"state\":\"CA\"\n      },\n      {\n         \"age\":\"\",\n         \"state\":\"WA\"\n      }\n   ]\n}\n\n ```\n\nSample Response\n\nHere\u2019s an example response that has the premium and tax values based on the inputs provided in the example request.\n\n```\n[\n   {\n      \"actionName\":\"premiumTaxLookup\",\n      \"errors\":null,\n      \"isSuccess\":true,\n      \"outputValues\":{\n         \"premium\":2400.0,\n         \"tax\":200.0\n      }\n   },\n   {\n      \"actionName\":\"premiumTaxLookup\",\n      \"errors\":null,\n      \"isSuccess\":true,\n      \"outputValues\":{\n         \"premium\":2400.0,\n         \"tax\":200.0\n      }\n   },\n   {\n      \"actionName\":\"premiumTaxLookup\",\n      \"errors\":[\n         {\n            \"statusCode\":\"REQUIRED_FIELD_MISSING\",\n            \"message\":\"Missing required input parameter: age\",\n            \"fields\":[\n            ]\n         }\n      ],\n      \"isSuccess\":false,\n      \"outputValues\":null\n   }\n]\n\n ```",
                        "variables": null,
                        "headers": "Content-Type: application/json",
                        "method": "POST",
                        "pathVariables": {
                            "UniqueName": "myDecisionMatrix"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/custom/runDecisionMatrix/:UniqueName",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "id": "40aa0e1a-6eb3-4d5c-a612-732b6283ec96",
                                "key": "UniqueName",
                                "value": "myDecisionMatrix",
                                "description": "The value of UniqueName is the unique identifier of the record, which is sourced from the name of a decision matrix."
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "07ddc093-f0ed-40c1-bf1c-b51558971698"
                        ],
                        "createdAt": "2023-09-20T11:56:51.000Z",
                        "updatedAt": "2023-09-20T11:56:55.000Z",
                        "dataOptions": {
                            "raw": null
                        }
                    }
                },
                {
                    "model_id": "f6dcd2c3-529d-49c1-8a8e-b692de69c96c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33694644705,
                        "folder": "9cb4e9bd-cf72-4a36-b0fc-232183d086b6",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f6dcd2c3-529d-49c1-8a8e-b692de69c96c",
                        "name": "Salesforce Keys",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}/id/keys",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "5766b3aa-8dfc-4aa0-b706-7630b205cb43"
                        ],
                        "createdAt": "2020-11-25T10:08:41.000Z",
                        "updatedAt": "2023-11-17T14:18:24.000Z"
                    }
                },
                {
                    "model_id": "f797c852-1ac4-4b2b-af62-54e8cb08b6b9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953136401,
                        "folder": "c9da183c-47fc-400c-ab5f-9a6a8381c208",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f797c852-1ac4-4b2b-af62-54e8cb08b6b9",
                        "name": "Search Scope and Order",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns an ordered list of objects in the default global search scope of a logged-in user. Global search keeps track of which objects the user interacts with and how often and arranges the search results accordingly. Objects used most frequently appear at the top of the list.\nThe returned list reflects the object order in the user\u2019s default search scope, including any pinned objects on the user\u2019s search results page. This call is useful if you want to implement a custom search results page using the optimized global search scope. The search string must be URL-encoded.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_scope_order.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/search/scopeOrder",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-09-07T13:51:56.000Z"
                    }
                },
                {
                    "model_id": "f803da7a-8ddc-42cb-9bb1-4ea2bc5a2664",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 31094802799,
                        "folder": "5b076f48-d83b-4f7e-9daa-2b228fd88a37",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f803da7a-8ddc-42cb-9bb1-4ea2bc5a2664",
                        "name": "Add enriched fields to channel member",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "{\n    \"FullName\": \"Account_Channel_chn_AccountChangeEvent\",\n    \"Metadata\": {\n        \"enrichedFields\": [\n            {\n                \"name\": \"External_Account_ID__c\"\n            }\n        ],\n        \"eventChannel\": \"Account_Channel__chn\",\n        \"selectedEntity\": \"AccountChangeEvent\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "PATCH",
                        "pathVariables": {
                            "PLATFORM_EVENT_CHANNEL_MEMBER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/tooling/sobjects/PlatformEventChannelMember/:PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "id": "b3a3c8d4-8a0f-4c7f-9bdd-e9637028bbd1",
                                "key": "PLATFORM_EVENT_CHANNEL_MEMBER_ID",
                                "value": ""
                            }
                        ],
                        "protocolProfileBehavior": {
                            "strictSSL": false,
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-06-15T17:45:09.000Z",
                        "updatedAt": "2023-06-15T17:45:09.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "f87c5031-dfdc-4bb9-b64b-6596a0ee8398",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32003919079,
                        "folder": "1c58f640-6cc1-4e3f-9004-cf8b01728b0e",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f87c5031-dfdc-4bb9-b64b-6596a0ee8398",
                        "name": "GetProductSellingModels",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "6c2b3a84-b1a7-4138-b7ca-3cb10cdc4ba9",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "const jsonData = JSON.parse(responseBody);",
                                        "",
                                        "context.set(\"EvergreenMonthlyPSM\", jsonData.records[0].Id);",
                                        "context.set(\"OneTimePSM\", jsonData.records[1].Id);",
                                        "context.set(\"TermMonthlyPSM\", jsonData.records[2].Id);",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": null,
                        "url": "{{_endpoint}}/services/data/v{{version}}/query?q=Select Id, name from ProductSellingModel Where NAME IN ('Evergreen Monthly', 'One-Time', 'Term Monthly') order by Name ASC",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\nconst jsonData = JSON.parse(responseBody);\n\ncontext.set(\"EvergreenMonthlyPSM\", jsonData.records[0].Id);\ncontext.set(\"OneTimePSM\", jsonData.records[1].Id);\ncontext.set(\"TermMonthlyPSM\", jsonData.records[2].Id);\n",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "q",
                                "value": "Select Id, name from ProductSellingModel Where NAME IN ('Evergreen Monthly', 'One-Time', 'Term Monthly') order by Name ASC"
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-08-09T08:13:00.000Z",
                        "updatedAt": "2023-08-09T08:13:00.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "f94c2208-006b-450e-bdfa-8c320cbe0c6c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249406669,
                        "folder": "272b147c-4755-4423-92ea-1d946d65fd33",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f94c2208-006b-450e-bdfa-8c320cbe0c6c",
                        "name": "Get List View for an Object",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "449e0316-7e62-40ad-ad2b-d3f46d678af4",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Returns a collection of list views associated with an object.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "SOBJECT_API_NAME": "Account"
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/list-ui/:SOBJECT_API_NAME",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The number of list records viewed at one time. The default value is 20. Value can be 1\u20132000.",
                                "enabled": false
                            },
                            {
                                "key": "pageToken",
                                "value": "",
                                "description": "A token that represents the page offset. To indicate where the page starts, use this value with the pageSize parameter. The maximum offset is 2000 and the default is 0.",
                                "enabled": false
                            },
                            {
                                "key": "q",
                                "value": "",
                                "description": "Query list views that contain certain key words.",
                                "enabled": false
                            },
                            {
                                "key": "recentListsOnly",
                                "value": "true",
                                "description": "Show only recently viewed lists.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "SOBJECT_API_NAME",
                                "value": "Account",
                                "description": "Object API name"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "02b079cc-4b87-42b9-806b-811c4573d661"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:18.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "f979df8f-5192-4d70-924d-dbb018eb462c",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33727756949,
                        "folder": "8c8de0a1-32d2-47d5-84a6-e9157881ce6f",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "f979df8f-5192-4d70-924d-dbb018eb462c",
                        "name": "Successful Create job Query",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "test",
                                "script": {
                                    "id": "db4bfc84-dcb6-4f3e-a734-5d492632b070",
                                    "exec": [
                                        "const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
                                        "",
                                        "const response = JSON.parse(pm.response.text())",
                                        "context.set(\"_jobId\", response.id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n  \"operation\" : \"query\",\n  \"query\" : \"SELECT fields FROM object WHERE filter\",\n  \"contentType\" : \"CSV\",\n  \"columnDelimiter\" : \"BACKQUOTE | CARET | COMMA | PIPE | SEMICOLON | TAB\",\n  \"lineEnding\" : \"CRLF | LF\"\n} ",
                        "descriptionFormat": null,
                        "description": null,
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/jobs/query",
                        "preRequestScript": null,
                        "tests": "const context = pm.environment.name ? pm.environment : pm.collectionVariables;\n\nconst response = JSON.parse(pm.response.text())\ncontext.set(\"_jobId\", response.id);",
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "bd254886-23b1-4e5b-92f5-9c9cd8d13e2e"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-11-20T16:00:14.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "fba0f6a2-f6a1-4a07-a336-15135fa127f9",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100354,
                        "folder": "ff3ea004-70c0-4c5a-b9dd-80ac2e0184d9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fba0f6a2-f6a1-4a07-a336-15135fa127f9",
                        "name": "File Information",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "68fbb559-6f11-4411-a033-b7a0710c8bb5",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "65ab2600-870b-446a-b024-bfcd3458b692",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get information about a specified file, including references to external files. Upload a new version of an existing file, including references to external files. Rename a file, move a file to a different folder, and delete a file.\nTo upload a new version of an existing file, make a POST request. Upload the new version as a binary part in a multipart/form-data request. See Uploading Binary Files. To upload a new file to the Files home, use /connect/files/users/me.Get information about a specified file, including references to external files.\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_files_information.htm",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "FILE_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/files/:FILE_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "FILE_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "75fbd494-5569-489d-8bbe-c3f067cfc965"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z"
                    }
                },
                {
                    "model_id": "fc45165f-0c9b-4f12-9309-b87b13eb008f",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667779,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fc45165f-0c9b-4f12-9309-b87b13eb008f",
                        "name": "Update a Record",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "6b49bfb8-1eaa-453e-ac6a-3e120bc3cad5",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "{\n    \"allowSaveOnDuplicate\": false,\n    \"fields\": {\n        \"FieldAPIName\": \"FieldValue\"\n    }\n}",
                        "descriptionFormat": null,
                        "description": "Update a record's data.\nUser Interface API enforces Salesforce validation rules. If a validation rule fails, the response is an Error with Output.\n\nWhen you make a PATCH request to update a record, make sure that the record hasn\u2019t changed since the user started editing it. To find out whether it\u2019s safe to save a record, pass the If-Modified-Since HTTP header in the request.\n\nAs of API version 43.0, if you pass read-only fields in a request body, the response is an Error with Output.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/records/:RECORD_ID",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "99ffb1e9-5017-4ba8-9f19-83c038d74ae7"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-09-27T16:15:08.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                },
                {
                    "model_id": "fc5e41ec-e42c-4643-ac16-c599c80002f4",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32476317705,
                        "folder": "b05283b4-28bd-4912-8c48-446d9c39f407",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fc5e41ec-e42c-4643-ac16-c599c80002f4",
                        "name": "Registration - Token Exchange",
                        "dataMode": "urlencoded",
                        "data": [
                            {
                                "key": "code",
                                "value": "<code>",
                                "description": "Auth Code from the Authorize response",
                                "type": "text"
                            },
                            {
                                "key": "grant_type",
                                "value": "authorization_code",
                                "type": "text"
                            },
                            {
                                "key": "client_id",
                                "value": "{{clientId}}",
                                "type": "text"
                            },
                            {
                                "key": "redirect_uri",
                                "value": "{{redirectUrl}}",
                                "type": "text"
                            }
                        ],
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "This exchanges the auth code returned in the Authorize Request for an access token and refresh token. This follows the standard Auth Code flow/Webserver Code Flow pattern. The Code is the return form the Authorization call.",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/oauth2/token",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2023-06-01T10:56:30.000Z",
                        "updatedAt": "2023-09-08T16:03:17.000Z",
                        "dataOptions": {
                            "urlencoded": null
                        }
                    }
                },
                {
                    "model_id": "fc830971-0e9f-4f68-a960-65e263c99f35",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 17879349962,
                        "folder": "a14ebc82-810d-4437-b509-09db279a767c",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fc830971-0e9f-4f68-a960-65e263c99f35",
                        "name": "Contract Amender API",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Receive a CPQ contract ID in a request, and return quote data for an amendment quote.\nAvailable in: Salesforce CPQ Summer \u201916 and later\nSpecial Access Rules: All of these user permissions are required.\nInsert and update on quote and opportunity objects\nRead on quote, opportunity, and product2 objects\nDelete on quote object\n\nhttps://developer.salesforce.com/docs/atlas.en-us.cpq_dev_api.meta/cpq_dev_api/cpq_api_contract_amender.htm",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "PATCH",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/apexrest/SBQQ/ServiceRouter?loader=SBQQ.ContractManipulationAPI.ContractAmender&uid=",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "loader",
                                "value": "SBQQ.ContractManipulationAPI.ContractAmender",
                                "equals": true,
                                "enabled": true
                            },
                            {
                                "key": "uid",
                                "value": "",
                                "equals": true,
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "enabled": true,
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2020-12-09T16:13:57.000Z",
                        "dataOptions": {
                            "raw": {
                                "language": "json"
                            }
                        }
                    }
                },
                {
                    "model_id": "fc916a9e-8c55-4e04-8be8-50201cfa8127",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 32814667718,
                        "folder": "fc9280b5-ee39-4f32-b4ba-cbebe318714a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fc916a9e-8c55-4e04-8be8-50201cfa8127",
                        "name": "Get a Batch of Records",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Get data for a batch of records.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_IDS": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/records/batch/:RECORD_IDS",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "childRelationships",
                                "value": "",
                                "description": "A collection of child relationship names. The records with those child relationship names are included in the response. Specify names in the format ObjectApiName.ChildRelationshipName or ObjectApiName.ChildRelationshipName.FieldApiName. For example, to specify the Contacts relationship on an Account, use Account.Contacts. You can get child relationships one level deep.\nTo get a relationship name, look in the Object Info response body.",
                                "enabled": false
                            },
                            {
                                "key": "fields",
                                "value": "",
                                "description": "Specifies the fields to return. If this property is specified, the response is a union of fields and optionalFields.\nIf the context user doesn\u2019t have access to a field, an error is returned.\n\nIf you\u2019re not sure whether the context user has access to a field and you don\u2019t want the request to fail if they don\u2019t, use the optionalFields parameter.\n\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "layoutTypes",
                                "value": "",
                                "description": "Specifies the fields to return. If this property is specified, the response is a union of layoutTypes, modes, and optionalFields.\nA collection containing any of these values:\nCompact\u2014Use this value to get a layout that contains a record\u2019s key fields.\nFull\u2014(Default) Use this value to get a full layout.",
                                "enabled": false
                            },
                            {
                                "key": "modes",
                                "value": "",
                                "description": "The access mode for the record. This value determines which fields to get from a layout. Layouts have different fields for create, edit, and view modes. For example, formula fields are rendered in view mode, but not in create mode because they\u2019re calculated at run time, like formulas in a spreadsheet. A collection containing any of these values:\nCreate\u2014Use this mode if you intend to build UI that lets a user create a record. This mode is used by the /ui-api/record-defaults/create/<SOBJECT_API_NAME> resource.\nEdit\u2014Use this mode if you intend to build UI that lets a user edit a record. This mode is used by the /ui-api/record-defaults/clone/<RECORD_ID> resource.\nView\u2014(Default) Use this mode if you intend to build UI that displays a record.",
                                "enabled": false
                            },
                            {
                                "key": "optionalFields",
                                "value": "",
                                "description": "A collection of optional field names. If a field is accessible to the context user, it\u2019s included in the response. If a field isn\u2019t accessible to the context user, it isn\u2019t included in the response, but it doesn\u2019t cause an error.\nSpecify names in the format ObjectApiName.FieldName. You can get any field that has a named relationship to this record. There is no limit to the number of fields you can specify.",
                                "enabled": false
                            },
                            {
                                "key": "pageSize",
                                "value": "",
                                "description": "The maximum number of child records to return on a page. The default value is 5.",
                                "enabled": false
                            },
                            {
                                "key": "updateMru",
                                "value": "",
                                "description": "To add to the most recently used (MRU) list view, set to true. The default value is false.",
                                "enabled": false
                            }
                        ],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_IDS",
                                "value": "",
                                "description": "Comma-separated list of record IDs"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "3a0d7f6a-bbad-4596-b976-fee7b65cfd28"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-09-27T16:15:08.000Z"
                    }
                },
                {
                    "model_id": "fd6fd4c3-f2fc-43eb-aaf2-91b3d696f77b",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137030,
                        "folder": "eeab8845-0ef2-428f-9fd1-f82e9a48b89a",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fd6fd4c3-f2fc-43eb-aaf2-91b3d696f77b",
                        "name": "SObject Self Service User Password",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Set, reset, or get information about a user password. This resource is available in REST API version 24.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {
                            "USER_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/sobjects/SelfServiceUser/:USER_ID/password",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [
                            {
                                "key": "USER_ID",
                                "value": "",
                                "description": null
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "fde98626-322f-4fd7-b5d0-78cd0fb6833d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33930635870,
                        "folder": "28b8570a-7b88-474c-9e9e-087ec3b06edf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fde98626-322f-4fd7-b5d0-78cd0fb6833d",
                        "name": "OAuth Usage",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Lists all the external client apps for the current org. See\u00a0[OAuth Usage](https://developer.salesforce.com/docs/atlas.en-us.246.0.chatterapi.meta/chatterapi/connect_resources_usage.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/usage?page=0&pageSize=100",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [
                            {
                                "key": "page",
                                "value": "0",
                                "equals": true,
                                "description": "Number of the page you want returned. Starts at 0. If you don\u2019t specify a value or if you specify 0, the first page is returned.",
                                "enabled": true
                            },
                            {
                                "key": "pageSize",
                                "value": "100",
                                "equals": true,
                                "description": "Number of usage entries per page. Defaults to 100.\t",
                                "enabled": true
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {},
                            "followOriginalHttpMethod": false,
                            "disableUrlEncoding": false
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "91f79a40-f56b-4355-9a81-be9a2bd8ca88"
                        ],
                        "createdAt": "2023-12-01T09:03:45.000Z",
                        "updatedAt": "2023-12-01T09:03:45.000Z"
                    }
                },
                {
                    "model_id": "fe0f25fb-30e4-4660-a8d7-ba95a9ad8bc7",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33771100232,
                        "folder": "ff3ea004-70c0-4c5a-b9dd-80ac2e0184d9",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fe0f25fb-30e4-4660-a8d7-ba95a9ad8bc7",
                        "name": "Users Files, General",
                        "dataMode": "params",
                        "data": [
                            {
                                "key": "fileData",
                                "type": "file",
                                "value": null
                            }
                        ],
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "8fc8b98a-0481-4907-8b1d-214db441a646",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            },
                            {
                                "listen": "test",
                                "script": {
                                    "id": "ab694c1e-3ff0-4795-a453-d64cf424b80e",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Upload a file, including references to external files, to the Files home or get information about files a user owns. These files don\u2019t include files shared with a user, files a user follows, or general organization files.\nWhen you upload a file to the Files home, it is private and available only to the file owner.\n\nTo upload a file, send it in a multipart/form-data request. You can include the description and title of the file in the multipart/form-data request as a JSON or XML request body. You can also send the information as request parameters. For information about how to create the multipart/form-data message, see Uploading Binary Files.\nhttps://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_users_files_general.htm",
                        "variables": null,
                        "headers": "",
                        "method": "POST",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/connect/files/users/me",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {},
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "637b2195-e51a-4220-98da-18a8d4751031"
                        ],
                        "createdAt": "2020-12-08T18:18:09.000Z",
                        "updatedAt": "2023-11-22T12:37:57.000Z",
                        "dataOptions": {
                            "params": {}
                        }
                    }
                },
                {
                    "model_id": "fe26d1e0-757d-43b3-8fc2-f32cf836353a",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 33930635827,
                        "folder": "28b8570a-7b88-474c-9e9e-087ec3b06edf",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "fe26d1e0-757d-43b3-8fc2-f32cf836353a",
                        "name": "OAuth User Tokens Revoke",
                        "dataMode": null,
                        "data": null,
                        "auth": {
                            "type": "noauth"
                        },
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Revokes all tokens for a user of the external client app. See\u00a0[Refresh Token by User and App](https://developer.salesforce.com/docs/atlas.en-us.246.0.chatterapi.meta/chatterapi/connect_resources_usage_app_id_user_id_tokens.htm).",
                        "variables": null,
                        "headers": "Authorization: Bearer <token>\n",
                        "method": "DELETE",
                        "pathVariables": {},
                        "url": "{{url}}{{site}}/services/data/v{{version}}/apps/oauth/usage/{{_appId}}/{{_userId}}/tokens",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Replace <token> with your access token",
                                "type": "text",
                                "enabled": true
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": null,
                        "responses_order": [],
                        "createdAt": "2023-12-01T09:03:45.000Z",
                        "updatedAt": "2023-12-01T09:03:45.000Z"
                    }
                },
                {
                    "model_id": "feed3ec1-5da0-4c9a-8c03-4f6783bfb38d",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "12721794",
                        "lastRevision": 20953137061,
                        "folder": "405271ed-e8df-47fe-a5ff-b5e753ab15c1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "feed3ec1-5da0-4c9a-8c03-4f6783bfb38d",
                        "name": "Custom Invocable Actions",
                        "dataMode": null,
                        "data": null,
                        "auth": null,
                        "events": null,
                        "rawModeData": null,
                        "descriptionFormat": null,
                        "description": "Returns the list of all custom actions. You can also get basic information for each type of action.\nThis resource is available in REST API version 32.0 and later.",
                        "variables": null,
                        "headers": "Content-Type: application/json\n",
                        "method": "GET",
                        "pathVariables": {},
                        "url": "{{_endpoint}}/services/data/v{{version}}/actions/custom",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "pathVariableData": [],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2021-09-07T13:52:00.000Z"
                    }
                },
                {
                    "model_id": "ff2769be-fdc8-4774-b9d9-32a7729b4801",
                    "meta": {
                        "model": "request",
                        "action": "find",
                        "populate": false,
                        "changeset": false
                    },
                    "data": {
                        "owner": "12721794",
                        "lastUpdatedBy": "26793207",
                        "lastRevision": 33249405906,
                        "folder": "dcdf85be-e31a-4b18-b557-6361983f58f1",
                        "collection": "67cb9baa-e0da-4986-957e-88d8734647e2",
                        "id": "ff2769be-fdc8-4774-b9d9-32a7729b4801",
                        "name": "Get Record Edit Page Actions",
                        "dataMode": "raw",
                        "data": null,
                        "auth": null,
                        "events": [
                            {
                                "listen": "prerequest",
                                "script": {
                                    "id": "293a9f9e-3084-46ea-926b-4e5a4d868d51",
                                    "exec": [
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "rawModeData": "",
                        "descriptionFormat": null,
                        "description": "Get the actions on record detail pages.",
                        "variables": null,
                        "headers": "",
                        "method": "GET",
                        "pathVariables": {
                            "RECORD_ID": ""
                        },
                        "url": "{{_endpoint}}/services/data/v{{version}}/ui-api/actions/record/:RECORD_ID/record-edit",
                        "preRequestScript": null,
                        "tests": null,
                        "currentHelper": null,
                        "helperAttributes": null,
                        "queryParams": [],
                        "headerData": [],
                        "pathVariableData": [
                            {
                                "key": "RECORD_ID",
                                "value": "",
                                "description": "Record ID"
                            }
                        ],
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "dataDisabled": false,
                        "responses_order": [
                            "d4c50c6f-e6a4-4374-9ae6-a9b9ea1faac7"
                        ],
                        "createdAt": "2020-11-25T10:08:42.000Z",
                        "updatedAt": "2023-10-23T09:17:16.000Z",
                        "dataOptions": {
                            "raw": {}
                        }
                    }
                }
            ],
            "statusCode": 200
        }
    ]
]